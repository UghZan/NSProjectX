; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\fstaticrender_detectsector.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp_?ray_query@xrXRC@@QAEXPBVMODEL@CDB@@ABU?$_vector3@M@@1M@Z:PROC
EXTRN	__imp_?ray_options@COLLIDER@CDB@@QAEXI@Z:PROC
EXTRN	__imp_?ray_options@xrXRC@@QAEXI@Z:PROC
PUBLIC	?getSectorFacing@CPortal@@QAEPAVCSector@@ABU?$_vector3@M@@@Z ; CPortal::getSectorFacing
PUBLIC	?detectSector@CRender@@UAEPAVIRender_Sector@@ABU?$_vector3@M@@@Z ; CRender::detectSector
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File I:\Vitalya\mine\NSProjectX\xrCDB\xrCDB.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\xr_area.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\xr_area.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_plane.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_plane.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\r__sector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\r__sector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File I:\Vitalya\mine\NSProjectX\xrCDB\xrCDB.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
; File I:\Vitalya\mine\NSProjectX\xrCDB\xrCDB.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp
_TEXT	SEGMENT
_range1$ = -20						; size = 4
_range2$1$ = -16					; size = 4
_dir$ = -12						; size = 12
_P$ = 8							; size = 4
?detectSector@CRender@@UAEPAVIRender_Sector@@ABU?$_vector3@M@@@Z PROC ; CRender::detectSector
; _this$ = ecx

; 4    : {

	sub	esp, 20					; 00000014H

; 10   : 	float	range1	= 500.f;

	movss	xmm0, DWORD PTR __real@43fa0000
	push	ebx
	push	ebp
	mov	ebx, ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	mov	DWORD PTR _dir$[esp+28], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 4    : {

	push	esi
	push	edi

; 5    : 	Sectors_xrc.ray_options	(CDB::OPT_ONLYNEAREST);
; 6    : 	Fvector dir; dir.set(0,-1,0);
; 7    : 
; 8    : 	// Portals model
; 9    : 	int		id1		= -1;

	or	edi, -1
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	mov	DWORD PTR _dir$[esp+40], -1082130432	; bf800000H
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 11   : 	if (rmPortals)	

	mov	eax, DWORD PTR [ebx+708]
; File I:\Vitalya\mine\NSProjectX\xrCDB\xrCDB.h

; 145  : 		ICF void		ray_options		(u32 f)	{	ray_mode = f;		}

	mov	DWORD PTR [ebx+684], 4
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	mov	DWORD PTR _dir$[esp+44], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 10   : 	float	range1	= 500.f;

	movss	DWORD PTR _range1$[esp+36], xmm0

; 11   : 	if (rmPortals)	

	test	eax, eax
	je	SHORT $LN3@detectSect

; 12   : 	{
; 13   : 		Sectors_xrc.ray_query	(rmPortals,P,dir,range1);

	fld	DWORD PTR __real@43fa0000
	push	ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _dir$[esp+40]
	push	ecx
	push	DWORD PTR _P$[esp+40]
	lea	ecx, DWORD PTR [ebx+684]
	push	eax
	call	DWORD PTR __imp_?ray_query@xrXRC@@QAEXPBVMODEL@CDB@@ABU?$_vector3@M@@1M@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	eax, DWORD PTR [ebx+700]
	sub	eax, DWORD PTR [ebx+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 14   : 		if (Sectors_xrc.r_count()) {

	je	SHORT $LN104@detectSect

; 15   : 			CDB::RESULT *RP1 = Sectors_xrc.r_begin();

	lea	ecx, DWORD PTR [ebx+684]
	call	DWORD PTR __imp_?r_begin@xrXRC@@QAEPAURESULT@CDB@@XZ

; 16   : 			id1 = RP1->id; range1 = RP1->range; 

	movss	xmm0, DWORD PTR [eax+44]
	mov	edi, DWORD PTR [eax+40]
	movss	DWORD PTR _range1$[esp+36], xmm0
	jmp	SHORT $LN3@detectSect
$LN104@detectSect:

; 14   : 		if (Sectors_xrc.r_count()) {

	movss	xmm0, DWORD PTR __real@43fa0000
$LN3@detectSect:

; 23   : 	Sectors_xrc.ray_query	(g_pGameLevel->ObjectSpace.GetStaticModel(),P,dir,range2);

	fld	DWORD PTR _range1$[esp+36]
	lea	eax, DWORD PTR _dir$[esp+36]
	push	ecx
	fstp	DWORD PTR [esp]
	push	eax
; File I:\Vitalya\mine\NSProjectX\xrEngine\xr_area.h

; 61   : 	CDB::MODEL* GetStaticModel() { return &Static; }

	mov	eax, DWORD PTR __imp_?g_pGameLevel@@3PAVIGame_Level@@A
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 23   : 	Sectors_xrc.ray_query	(g_pGameLevel->ObjectSpace.GetStaticModel(),P,dir,range2);

	lea	ecx, DWORD PTR [ebx+684]
	push	DWORD PTR _P$[esp+40]
	or	esi, -1
	movss	DWORD PTR _range2$1$[esp+48], xmm0
; File I:\Vitalya\mine\NSProjectX\xrEngine\xr_area.h

; 61   : 	CDB::MODEL* GetStaticModel() { return &Static; }

	mov	eax, DWORD PTR [eax]
	add	eax, 172				; 000000acH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 23   : 	Sectors_xrc.ray_query	(g_pGameLevel->ObjectSpace.GetStaticModel(),P,dir,range2);

	push	eax
	call	DWORD PTR __imp_?ray_query@xrXRC@@QAEXPBVMODEL@CDB@@ABU?$_vector3@M@@1M@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	eax, DWORD PTR [ebx+700]
	sub	eax, DWORD PTR [ebx+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 24   : 	if (Sectors_xrc.r_count()) {

	je	SHORT $LN105@detectSect

; 25   : 		CDB::RESULT *RP2 = Sectors_xrc.r_begin();

	lea	ecx, DWORD PTR [ebx+684]
	call	DWORD PTR __imp_?r_begin@xrXRC@@QAEPAURESULT@CDB@@XZ

; 26   : 		id2 = RP2->id; range2 = RP2->range;

	mov	esi, DWORD PTR [eax+40]
	movss	xmm0, DWORD PTR [eax+44]
	jmp	SHORT $LN4@detectSect
$LN105@detectSect:

; 24   : 	if (Sectors_xrc.r_count()) {

	movss	xmm0, DWORD PTR _range2$1$[esp+36]
$LN4@detectSect:

; 27   : 	}
; 28   : 
; 29   : 	// Select ID
; 30   : 	int ID;
; 31   : 	if (id1>=0) {

	test	edi, edi
	js	SHORT $LN5@detectSect

; 32   : 		if (id2>=0) ID = (range1<=range2+EPS)?id1:id2;	// both was found

	test	esi, esi
	js	SHORT $LN7@detectSect
	addss	xmm0, DWORD PTR __real@3727c5ac
	comiss	xmm0, DWORD PTR _range1$[esp+36]
	jb	SHORT $LN10@detectSect

; 35   : 	else return 0;
; 36   : 
; 37   : 	if (ID==id1) {

	shl	edi, 4
	mov	ecx, edi
	jmp	SHORT $LN103@detectSect
$LN7@detectSect:

; 33   : 		else ID = id1;									// only id1 found

	mov	esi, edi
	jmp	SHORT $LN10@detectSect
$LN5@detectSect:

; 34   : 	} else if (id2>=0) ID = id2;						// only id2 found

	test	esi, esi
	js	$LN9@detectSect
$LN10@detectSect:

; 35   : 	else return 0;
; 36   : 
; 37   : 	if (ID==id1) {

	mov	ecx, esi
	shl	ecx, 4
	cmp	esi, edi
	jne	SHORT $LN11@detectSect
$LN103@detectSect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR [ebx+708]
	mov	eax, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [eax+ecx+12]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 40   : 		CPortal*	pPortal	= (CPortal*)Portals	[pTri->dummy];

	mov	eax, DWORD PTR [ebx+660]
	mov	eax, DWORD PTR [eax+ecx*4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 268  : 	{	return x*v.x + y*v.y + z*v.z; }

	mov	ecx, DWORD PTR _P$[esp+32]
	movss	xmm0, DWORD PTR [eax+112]
	mulss	xmm0, DWORD PTR [ecx]
	movss	xmm1, DWORD PTR [eax+116]
	mulss	xmm1, DWORD PTR [ecx+4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_plane.h

; 57   : 		return n.dotproduct(v)+d;

	addss	xmm1, xmm0
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 268  : 	{	return x*v.x + y*v.y + z*v.z; }

	movss	xmm0, DWORD PTR [eax+120]
	mulss	xmm0, DWORD PTR [ecx+8]
; File I:\Vitalya\mine\NSProjectX\xrCore\_plane.h

; 57   : 		return n.dotproduct(v)+d;

	addss	xmm0, DWORD PTR [eax+124]
	addss	xmm1, xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\r__sector.h

; 38   : 	CSector*						getSectorFacing	(const Fvector& V)	{ if (P.classify(V)>0) return pFace; else return pBack; }

	comiss	xmm1, DWORD PTR __real@00000000
	jbe	SHORT $LN92@detectSect
	mov	eax, DWORD PTR [eax+104]
	pop	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 47   : }

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	4
$LN92@detectSect:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\r__sector.h

; 38   : 	CSector*						getSectorFacing	(const Fvector& V)	{ if (P.classify(V)>0) return pFace; else return pBack; }

	mov	eax, DWORD PTR [eax+108]
	pop	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 47   : }

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	4
$LN11@detectSect:
; File I:\Vitalya\mine\NSProjectX\xrCDB\xrCDB.h

; 86   : 		IC TRI*					get_tris		()			{ return tris;		}

	mov	eax, DWORD PTR __imp_?g_pGameLevel@@3PAVIGame_Level@@A
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 45   : 		return getSector(pTri->sector);

	mov	edx, DWORD PTR [ebx]
; File I:\Vitalya\mine\NSProjectX\xrCDB\xrCDB.h

; 86   : 		IC TRI*					get_tris		()			{ return tris;		}

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+184]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_DetectSector.cpp

; 45   : 		return getSector(pTri->sector);

	movzx	eax, WORD PTR [ecx+eax+14]
	mov	ecx, ebx
	push	eax
	call	DWORD PTR [edx+48]
	pop	edi

; 47   : }

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	4
$LN9@detectSect:
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
	add	esp, 20					; 00000014H
	ret	4
?detectSector@CRender@@UAEPAVIRender_Sector@@ABU?$_vector3@M@@@Z ENDP ; CRender::detectSector
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\r__sector.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_plane.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_plane.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\r__sector.h
;	COMDAT ?getSectorFacing@CPortal@@QAEPAVCSector@@ABU?$_vector3@M@@@Z
_TEXT	SEGMENT
_V$ = 8							; size = 4
?getSectorFacing@CPortal@@QAEPAVCSector@@ABU?$_vector3@M@@@Z PROC ; CPortal::getSectorFacing, COMDAT
; _this$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 268  : 	{	return x*v.x + y*v.y + z*v.z; }

	mov	eax, DWORD PTR _V$[esp-4]
	movss	xmm0, DWORD PTR [ecx+112]
	movss	xmm1, DWORD PTR [ecx+116]
	mulss	xmm0, DWORD PTR [eax]
	mulss	xmm1, DWORD PTR [eax+4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_plane.h

; 57   : 		return n.dotproduct(v)+d;

	addss	xmm1, xmm0
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 268  : 	{	return x*v.x + y*v.y + z*v.z; }

	movss	xmm0, DWORD PTR [ecx+120]
	mulss	xmm0, DWORD PTR [eax+8]
; File I:\Vitalya\mine\NSProjectX\xrCore\_plane.h

; 57   : 		return n.dotproduct(v)+d;

	addss	xmm0, DWORD PTR [ecx+124]
	addss	xmm1, xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\r__sector.h

; 38   : 	CSector*						getSectorFacing	(const Fvector& V)	{ if (P.classify(V)>0) return pFace; else return pBack; }

	comiss	xmm1, DWORD PTR __real@00000000
	jbe	SHORT $LN2@getSectorF
	mov	eax, DWORD PTR [ecx+104]
	ret	4
$LN2@getSectorF:
	mov	eax, DWORD PTR [ecx+108]
	ret	4
?getSectorFacing@CPortal@@QAEPAVCSector@@ABU?$_vector3@M@@@Z ENDP ; CPortal::getSectorFacing
_TEXT	ENDS
END
