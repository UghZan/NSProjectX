; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\ftreevisual.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BC@IMFDMMDB@FTreeVisual?3?3Load@		; `string'
PUBLIC	??_C@_0DL@CECBDBFE@I?3?2Vitalya?2mine?2NSProjectX?2laye@ ; `string'
PUBLIC	??_C@_0CB@GHIDCOOC@data?9?$DOfind_chunk?$CIOGF_GCONTAINER@ ; `string'
PUBLIC	??_C@_0BP@OBMBIAPA@data?9?$DOfind_chunk?$CIOGF_TREEDEF2?$CJ@ ; `string'
PUBLIC	??_C@_07BBMOEPGC@m_xform@			; `string'
PUBLIC	??_C@_09KPCNPDBH@m_xform_v@			; `string'
PUBLIC	??_C@_04HHNJMEDN@wind@				; `string'
PUBLIC	??_C@_06MNMONLFN@c_bias@			; `string'
PUBLIC	??_C@_07JINNFBKC@c_scale@			; `string'
PUBLIC	??_C@_05KKNAJIFC@c_sun@				; `string'
PUBLIC	??_C@_0BF@EPHJGBLH@FTreeVisual_PM?3?3Load@	; `string'
PUBLIC	??_C@_0CD@GMKBKFF@data?9?$DOfind_chunk?$CIOGF_SWICONTAIN@ ; `string'
PUBLIC	??_R2FTreeVisual_PM@@8				; FTreeVisual_PM::`RTTI Base Class Array'
PUBLIC	??_R2FTreeVisual_ST@@8				; FTreeVisual_ST::`RTTI Base Class Array'
PUBLIC	??_R2FTreeVisual@@8				; FTreeVisual::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FTreeVisual_PM@@8			; FTreeVisual_PM::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@FTreeVisual_ST@@8			; FTreeVisual_ST::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@FTreeVisual@@8			; FTreeVisual::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3FTreeVisual_PM@@8				; FTreeVisual_PM::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3FTreeVisual_ST@@8				; FTreeVisual_ST::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVFTreeVisual_ST@@@8			; FTreeVisual_ST `RTTI Type Descriptor'
PUBLIC	??_R3FTreeVisual@@8				; FTreeVisual::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4FTreeVisual_PM@@6BIRender_Mesh@@@		; FTreeVisual_PM::`RTTI Complete Object Locator'
PUBLIC	??_R4FTreeVisual_PM@@6BIRender_Visual@@@	; FTreeVisual_PM::`RTTI Complete Object Locator'
PUBLIC	??_R4FTreeVisual_ST@@6BIRender_Mesh@@@		; FTreeVisual_ST::`RTTI Complete Object Locator'
PUBLIC	??_R4FTreeVisual_ST@@6BIRender_Visual@@@	; FTreeVisual_ST::`RTTI Complete Object Locator'
PUBLIC	??_R4FTreeVisual@@6BIRender_Mesh@@@		; FTreeVisual::`RTTI Complete Object Locator'
PUBLIC	??_R4FTreeVisual@@6BIRender_Visual@@@		; FTreeVisual::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFTreeVisual_PM@@@8			; FTreeVisual_PM `RTTI Type Descriptor'
PUBLIC	??_7FTreeVisual_PM@@6BIRender_Mesh@@@		; FTreeVisual_PM::`vftable'
PUBLIC	??_7FTreeVisual_PM@@6BIRender_Visual@@@		; FTreeVisual_PM::`vftable'
PUBLIC	??_7FTreeVisual_ST@@6BIRender_Mesh@@@		; FTreeVisual_ST::`vftable'
PUBLIC	??_7FTreeVisual_ST@@6BIRender_Visual@@@		; FTreeVisual_ST::`vftable'
PUBLIC	??_R0?AVFTreeVisual@@@8				; FTreeVisual `RTTI Type Descriptor'
PUBLIC	??_7FTreeVisual@@6BIRender_Mesh@@@		; FTreeVisual::`vftable'
PUBLIC	??_7FTreeVisual@@6BIRender_Visual@@@		; FTreeVisual::`vftable'
EXTRN	__imp_?Copy@IRender_Visual@@UAEXPAV1@@Z:PROC
EXTRN	__imp_?set_c@CBackend@@QAEXAAVshared_str@@ABU?$_vector4@M@@@Z:PROC
EXTRN	__imp_?set_c@CBackend@@QAEXAAVshared_str@@MMMM@Z:PROC
EXTRN	__imp_?get@R_constant_table@@QAE?AV?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@AAVshared_str@@@Z:PROC
EXTRN	__imp_?set_c@CBackend@@QAEXAAVshared_str@@ABU?$_matrix@M@@@Z:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	__imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z:PROC
EXTRN	__imp_?g_pStringContainer@@3PAVstr_container@@A:DWORD
EXTRN	?Load@IRender_Visual@@UAEXPBDPAVIReader@@I@Z:PROC ; IRender_Visual::Load
EXTRN	__imp_?Load@IRender_Visual@@UAEXPBDPAVIReader@@I@Z:PROC
EXTRN	?Release@IRender_Visual@@UAEXXZ:PROC		; IRender_Visual::Release
EXTRN	__imp_?Release@IRender_Visual@@UAEXXZ:PROC
EXTRN	__imp_??1IRender_Mesh@@UAE@XZ:PROC
EXTRN	__imp_??0IRender_Mesh@@QAE@XZ:PROC
EXTRN	__imp_??1IRender_Visual@@UAE@XZ:PROC
EXTRN	__imp_??0IRender_Visual@@QAE@XZ:PROC
;	COMDAT ?ignore_always@?3??Load@FTreeVisual_PM@@UAEXPBDPAVIReader@@I@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??Load@FTreeVisual_PM@@UAEXPBDPAVIReader@@I@Z@4_NA DB 01H DUP (?) ; `FTreeVisual_PM::Load'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?N@??Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z@4_NA
_BSS	SEGMENT
?ignore_always@?N@??Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z@4_NA DB 01H DUP (?) ; `FTreeVisual::Load'::`13'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z@4_NA DB 01H DUP (?) ; `FTreeVisual::Load'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ??_7FTreeVisual@@6BIRender_Visual@@@
CONST	SEGMENT
??_7FTreeVisual@@6BIRender_Visual@@@ DD FLAT:??_R4FTreeVisual@@6BIRender_Visual@@@ ; FTreeVisual::`vftable'
	DD	FLAT:?Render@FTreeVisual@@UAEXM@Z
	DD	FLAT:?Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z
	DD	FLAT:?Release@FTreeVisual@@UAEXXZ
	DD	FLAT:?Copy@FTreeVisual@@UAEXPAVIRender_Visual@@@Z
	DD	FLAT:?Spawn@IRender_Visual@@UAEXXZ
	DD	FLAT:?Depart@IRender_Visual@@UAEXXZ
	DD	FLAT:?dcast_PKinematics@IRender_Visual@@UAEPAVCKinematics@@XZ
	DD	FLAT:?dcast_PKinematicsAnimated@IRender_Visual@@UAEPAVCKinematicsAnimated@@XZ
	DD	FLAT:?dcast_ParticleCustom@IRender_Visual@@UAEPAVIParticleCustom@@XZ
	DD	FLAT:??_EFTreeVisual@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7FTreeVisual@@6BIRender_Mesh@@@
CONST	SEGMENT
??_7FTreeVisual@@6BIRender_Mesh@@@ DD FLAT:??_R4FTreeVisual@@6BIRender_Mesh@@@ ; FTreeVisual::`vftable'
	DD	FLAT:??_EFTreeVisual@@WEE@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R0?AVFTreeVisual@@@8
data$r	SEGMENT
??_R0?AVFTreeVisual@@@8 DD FLAT:??_7type_info@@6B@	; FTreeVisual `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFTreeVisual@@', 00H
data$r	ENDS
;	COMDAT ??_7FTreeVisual_ST@@6BIRender_Visual@@@
CONST	SEGMENT
??_7FTreeVisual_ST@@6BIRender_Visual@@@ DD FLAT:??_R4FTreeVisual_ST@@6BIRender_Visual@@@ ; FTreeVisual_ST::`vftable'
	DD	FLAT:?Render@FTreeVisual_ST@@UAEXM@Z
	DD	FLAT:?Load@FTreeVisual_ST@@UAEXPBDPAVIReader@@I@Z
	DD	FLAT:?Release@FTreeVisual_ST@@UAEXXZ
	DD	FLAT:?Copy@FTreeVisual_ST@@UAEXPAVIRender_Visual@@@Z
	DD	FLAT:?Spawn@IRender_Visual@@UAEXXZ
	DD	FLAT:?Depart@IRender_Visual@@UAEXXZ
	DD	FLAT:?dcast_PKinematics@IRender_Visual@@UAEPAVCKinematics@@XZ
	DD	FLAT:?dcast_PKinematicsAnimated@IRender_Visual@@UAEPAVCKinematicsAnimated@@XZ
	DD	FLAT:?dcast_ParticleCustom@IRender_Visual@@UAEPAVIParticleCustom@@XZ
	DD	FLAT:??_EFTreeVisual_ST@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7FTreeVisual_ST@@6BIRender_Mesh@@@
CONST	SEGMENT
??_7FTreeVisual_ST@@6BIRender_Mesh@@@ DD FLAT:??_R4FTreeVisual_ST@@6BIRender_Mesh@@@ ; FTreeVisual_ST::`vftable'
	DD	FLAT:??_EFTreeVisual_ST@@WEE@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7FTreeVisual_PM@@6BIRender_Visual@@@
CONST	SEGMENT
??_7FTreeVisual_PM@@6BIRender_Visual@@@ DD FLAT:??_R4FTreeVisual_PM@@6BIRender_Visual@@@ ; FTreeVisual_PM::`vftable'
	DD	FLAT:?Render@FTreeVisual_PM@@UAEXM@Z
	DD	FLAT:?Load@FTreeVisual_PM@@UAEXPBDPAVIReader@@I@Z
	DD	FLAT:?Release@FTreeVisual_PM@@UAEXXZ
	DD	FLAT:?Copy@FTreeVisual_PM@@UAEXPAVIRender_Visual@@@Z
	DD	FLAT:?Spawn@IRender_Visual@@UAEXXZ
	DD	FLAT:?Depart@IRender_Visual@@UAEXXZ
	DD	FLAT:?dcast_PKinematics@IRender_Visual@@UAEPAVCKinematics@@XZ
	DD	FLAT:?dcast_PKinematicsAnimated@IRender_Visual@@UAEPAVCKinematicsAnimated@@XZ
	DD	FLAT:?dcast_ParticleCustom@IRender_Visual@@UAEPAVIParticleCustom@@XZ
	DD	FLAT:??_EFTreeVisual_PM@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7FTreeVisual_PM@@6BIRender_Mesh@@@
CONST	SEGMENT
??_7FTreeVisual_PM@@6BIRender_Mesh@@@ DD FLAT:??_R4FTreeVisual_PM@@6BIRender_Mesh@@@ ; FTreeVisual_PM::`vftable'
	DD	FLAT:??_EFTreeVisual_PM@@WEE@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R0?AVFTreeVisual_PM@@@8
data$r	SEGMENT
??_R0?AVFTreeVisual_PM@@@8 DD FLAT:??_7type_info@@6B@	; FTreeVisual_PM `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFTreeVisual_PM@@', 00H
data$r	ENDS
;	COMDAT ??_R4FTreeVisual@@6BIRender_Visual@@@
rdata$r	SEGMENT
??_R4FTreeVisual@@6BIRender_Visual@@@ DD 00H		; FTreeVisual::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFTreeVisual@@@8
	DD	FLAT:??_R3FTreeVisual@@8
rdata$r	ENDS
;	COMDAT ??_R4FTreeVisual@@6BIRender_Mesh@@@
rdata$r	SEGMENT
??_R4FTreeVisual@@6BIRender_Mesh@@@ DD 00H		; FTreeVisual::`RTTI Complete Object Locator'
	DD	044H
	DD	00H
	DD	FLAT:??_R0?AVFTreeVisual@@@8
	DD	FLAT:??_R3FTreeVisual@@8
rdata$r	ENDS
;	COMDAT ??_R4FTreeVisual_ST@@6BIRender_Visual@@@
rdata$r	SEGMENT
??_R4FTreeVisual_ST@@6BIRender_Visual@@@ DD 00H		; FTreeVisual_ST::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFTreeVisual_ST@@@8
	DD	FLAT:??_R3FTreeVisual_ST@@8
rdata$r	ENDS
;	COMDAT ??_R4FTreeVisual_ST@@6BIRender_Mesh@@@
rdata$r	SEGMENT
??_R4FTreeVisual_ST@@6BIRender_Mesh@@@ DD 00H		; FTreeVisual_ST::`RTTI Complete Object Locator'
	DD	044H
	DD	00H
	DD	FLAT:??_R0?AVFTreeVisual_ST@@@8
	DD	FLAT:??_R3FTreeVisual_ST@@8
rdata$r	ENDS
;	COMDAT ??_R4FTreeVisual_PM@@6BIRender_Visual@@@
rdata$r	SEGMENT
??_R4FTreeVisual_PM@@6BIRender_Visual@@@ DD 00H		; FTreeVisual_PM::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFTreeVisual_PM@@@8
	DD	FLAT:??_R3FTreeVisual_PM@@8
rdata$r	ENDS
;	COMDAT ??_R4FTreeVisual_PM@@6BIRender_Mesh@@@
rdata$r	SEGMENT
??_R4FTreeVisual_PM@@6BIRender_Mesh@@@ DD 00H		; FTreeVisual_PM::`RTTI Complete Object Locator'
	DD	044H
	DD	00H
	DD	FLAT:??_R0?AVFTreeVisual_PM@@@8
	DD	FLAT:??_R3FTreeVisual_PM@@8
rdata$r	ENDS
;	COMDAT ??_R3FTreeVisual@@8
rdata$r	SEGMENT
??_R3FTreeVisual@@8 DD 00H				; FTreeVisual::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2FTreeVisual@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFTreeVisual_ST@@@8
data$rs	SEGMENT
??_R0?AVFTreeVisual_ST@@@8 DD FLAT:??_7type_info@@6B@	; FTreeVisual_ST `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFTreeVisual_ST@@', 00H
data$rs	ENDS
;	COMDAT ??_R3FTreeVisual_ST@@8
rdata$r	SEGMENT
??_R3FTreeVisual_ST@@8 DD 00H				; FTreeVisual_ST::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2FTreeVisual_ST@@8
rdata$r	ENDS
;	COMDAT ??_R3FTreeVisual_PM@@8
rdata$r	SEGMENT
??_R3FTreeVisual_PM@@8 DD 00H				; FTreeVisual_PM::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2FTreeVisual_PM@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FTreeVisual@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FTreeVisual@@8 DD FLAT:??_R0?AVFTreeVisual@@@8 ; FTreeVisual::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FTreeVisual@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FTreeVisual_ST@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FTreeVisual_ST@@8 DD FLAT:??_R0?AVFTreeVisual_ST@@@8 ; FTreeVisual_ST::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FTreeVisual_ST@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FTreeVisual_PM@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FTreeVisual_PM@@8 DD FLAT:??_R0?AVFTreeVisual_PM@@@8 ; FTreeVisual_PM::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FTreeVisual_PM@@8
rdata$r	ENDS
;	COMDAT ??_R2FTreeVisual@@8
rdata$r	SEGMENT
??_R2FTreeVisual@@8 DD FLAT:??_R1A@?0A@EA@FTreeVisual@@8 ; FTreeVisual::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IRender_Visual@@8
	DD	FLAT:??_R1EE@?0A@EA@IRender_Mesh@@8
rdata$r	ENDS
;	COMDAT ??_R2FTreeVisual_ST@@8
rdata$r	SEGMENT
??_R2FTreeVisual_ST@@8 DD FLAT:??_R1A@?0A@EA@FTreeVisual_ST@@8 ; FTreeVisual_ST::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@FTreeVisual@@8
	DD	FLAT:??_R1A@?0A@EA@IRender_Visual@@8
	DD	FLAT:??_R1EE@?0A@EA@IRender_Mesh@@8
rdata$r	ENDS
;	COMDAT ??_R2FTreeVisual_PM@@8
rdata$r	SEGMENT
??_R2FTreeVisual_PM@@8 DD FLAT:??_R1A@?0A@EA@FTreeVisual_PM@@8 ; FTreeVisual_PM::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@FTreeVisual@@8
	DD	FLAT:??_R1A@?0A@EA@IRender_Visual@@8
	DD	FLAT:??_R1EE@?0A@EA@IRender_Mesh@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CD@GMKBKFF@data?9?$DOfind_chunk?$CIOGF_SWICONTAIN@
CONST	SEGMENT
??_C@_0CD@GMKBKFF@data?9?$DOfind_chunk?$CIOGF_SWICONTAIN@ DB 'data->find_'
	DB	'chunk(OGF_SWICONTAINER)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EPHJGBLH@FTreeVisual_PM?3?3Load@
CONST	SEGMENT
??_C@_0BF@EPHJGBLH@FTreeVisual_PM?3?3Load@ DB 'FTreeVisual_PM::Load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KKNAJIFC@c_sun@
CONST	SEGMENT
??_C@_05KKNAJIFC@c_sun@ DB 'c_sun', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07JINNFBKC@c_scale@
CONST	SEGMENT
??_C@_07JINNFBKC@c_scale@ DB 'c_scale', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MNMONLFN@c_bias@
CONST	SEGMENT
??_C@_06MNMONLFN@c_bias@ DB 'c_bias', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HHNJMEDN@wind@
CONST	SEGMENT
??_C@_04HHNJMEDN@wind@ DB 'wind', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09KPCNPDBH@m_xform_v@
CONST	SEGMENT
??_C@_09KPCNPDBH@m_xform_v@ DB 'm_xform_v', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BBMOEPGC@m_xform@
CONST	SEGMENT
??_C@_07BBMOEPGC@m_xform@ DB 'm_xform', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OBMBIAPA@data?9?$DOfind_chunk?$CIOGF_TREEDEF2?$CJ@
CONST	SEGMENT
??_C@_0BP@OBMBIAPA@data?9?$DOfind_chunk?$CIOGF_TREEDEF2?$CJ@ DB 'data->fi'
	DB	'nd_chunk(OGF_TREEDEF2)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GHIDCOOC@data?9?$DOfind_chunk?$CIOGF_GCONTAINER@
CONST	SEGMENT
??_C@_0CB@GHIDCOOC@data?9?$DOfind_chunk?$CIOGF_GCONTAINER@ DB 'data->find'
	DB	'_chunk(OGF_GCONTAINER)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@CECBDBFE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
CONST	SEGMENT
??_C@_0DL@CECBDBFE@I?3?2Vitalya?2mine?2NSProjectX?2laye@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\layers\xrRender\FTreeVisual.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IMFDMMDB@FTreeVisual?3?3Load@
CONST	SEGMENT
??_C@_0BC@IMFDMMDB@FTreeVisual?3?3Load@ DB 'FTreeVisual::Load', 00H ; `string'
PUBLIC	??4shared_str@@QAEAAV0@PBD@Z			; shared_str::operator=
PUBLIC	?_set@shared_str@@QAEXPBD@Z			; shared_str::_set
PUBLIC	??_EFTreeVisual_ST@@WEE@AEPAXI@Z		; [thunk]:FTreeVisual_ST::`vector deleting destructor'
PUBLIC	??_EFTreeVisual@@WEE@AEPAXI@Z			; [thunk]:FTreeVisual::`vector deleting destructor'
PUBLIC	??_EFTreeVisual_PM@@WEE@AEPAXI@Z		; [thunk]:FTreeVisual_PM::`vector deleting destructor'
PUBLIC	?Copy@FTreeVisual_PM@@UAEXPAVIRender_Visual@@@Z	; FTreeVisual_PM::Copy
PUBLIC	?Render@FTreeVisual_PM@@UAEXM@Z			; FTreeVisual_PM::Render
PUBLIC	?Load@FTreeVisual_PM@@UAEXPBDPAVIReader@@I@Z	; FTreeVisual_PM::Load
PUBLIC	?Release@FTreeVisual_PM@@UAEXXZ			; FTreeVisual_PM::Release
PUBLIC	??1FTreeVisual_PM@@UAE@XZ			; FTreeVisual_PM::~FTreeVisual_PM
PUBLIC	??_GFTreeVisual_PM@@UAEPAXI@Z			; FTreeVisual_PM::`scalar deleting destructor'
PUBLIC	??0FTreeVisual_PM@@QAE@XZ			; FTreeVisual_PM::FTreeVisual_PM
PUBLIC	?Copy@FTreeVisual_ST@@UAEXPAVIRender_Visual@@@Z	; FTreeVisual_ST::Copy
PUBLIC	?Render@FTreeVisual_ST@@UAEXM@Z			; FTreeVisual_ST::Render
PUBLIC	?Load@FTreeVisual_ST@@UAEXPBDPAVIReader@@I@Z	; FTreeVisual_ST::Load
PUBLIC	?Release@FTreeVisual_ST@@UAEXXZ			; FTreeVisual_ST::Release
PUBLIC	??1FTreeVisual_ST@@UAE@XZ			; FTreeVisual_ST::~FTreeVisual_ST
PUBLIC	??_GFTreeVisual_ST@@UAEPAXI@Z			; FTreeVisual_ST::`scalar deleting destructor'
PUBLIC	??0FTreeVisual_ST@@QAE@XZ			; FTreeVisual_ST::FTreeVisual_ST
PUBLIC	?Copy@FTreeVisual@@UAEXPAVIRender_Visual@@@Z	; FTreeVisual::Copy
PUBLIC	?Render@FTreeVisual@@UAEXM@Z			; FTreeVisual::Render
PUBLIC	?calculate@FTreeVisual_setup@@QAEXXZ		; FTreeVisual_setup::calculate
PUBLIC	??0FTreeVisual_setup@@QAE@XZ			; FTreeVisual_setup::FTreeVisual_setup
PUBLIC	?Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z	; FTreeVisual::Load
PUBLIC	?Release@FTreeVisual@@UAEXXZ			; FTreeVisual::Release
PUBLIC	??1FTreeVisual@@UAE@XZ				; FTreeVisual::~FTreeVisual
PUBLIC	??_GFTreeVisual@@UAEPAXI@Z			; FTreeVisual::`scalar deleting destructor'
PUBLIC	??0FTreeVisual@@QAE@XZ				; FTreeVisual::FTreeVisual
PUBLIC	?m_xform@@3Vshared_str@@A			; m_xform
PUBLIC	?m_xform_v@@3Vshared_str@@A			; m_xform_v
PUBLIC	?c_consts@@3Vshared_str@@A			; c_consts
PUBLIC	?c_wave@@3Vshared_str@@A			; c_wave
PUBLIC	?c_wind@@3Vshared_str@@A			; c_wind
PUBLIC	?c_c_bias@@3Vshared_str@@A			; c_c_bias
PUBLIC	?c_c_scale@@3Vshared_str@@A			; c_c_scale
PUBLIC	?c_c_sun@@3Vshared_str@@A			; c_c_sun
EXTRN	??_EFTreeVisual@@UAEPAXI@Z:PROC			; FTreeVisual::`vector deleting destructor'
EXTRN	??_EFTreeVisual_ST@@UAEPAXI@Z:PROC		; FTreeVisual_ST::`vector deleting destructor'
EXTRN	??_EFTreeVisual_PM@@UAEPAXI@Z:PROC		; FTreeVisual_PM::`vector deleting destructor'
?m_xform@@3Vshared_str@@A DD 01H DUP (?)		; m_xform
?m_xform_v@@3Vshared_str@@A DD 01H DUP (?)		; m_xform_v
?c_consts@@3Vshared_str@@A DD 01H DUP (?)		; c_consts
?c_wave@@3Vshared_str@@A DD 01H DUP (?)			; c_wave
?c_wind@@3Vshared_str@@A DD 01H DUP (?)			; c_wind
?c_c_bias@@3Vshared_str@@A DD 01H DUP (?)		; c_c_bias
?c_c_scale@@3Vshared_str@@A DD 01H DUP (?)		; c_c_scale
?c_c_sun@@3Vshared_str@@A DD 01H DUP (?)		; c_c_sun
_BSS	ENDS
;	COMDAT ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A
_BSS	SEGMENT
?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A DB 028H DUP (?) ; `FTreeVisual::Render'::`2'::tvs
_BSS	ENDS
?m_xform$initializer$@@3P6AXXZA DD FLAT:??__Em_xform@@YAXXZ ; m_xform$initializer$
?m_xform_v$initializer$@@3P6AXXZA DD FLAT:??__Em_xform_v@@YAXXZ ; m_xform_v$initializer$
?c_consts$initializer$@@3P6AXXZA DD FLAT:??__Ec_consts@@YAXXZ ; c_consts$initializer$
?c_wave$initializer$@@3P6AXXZA DD FLAT:??__Ec_wave@@YAXXZ ; c_wave$initializer$
?c_wind$initializer$@@3P6AXXZA DD FLAT:??__Ec_wind@@YAXXZ ; c_wind$initializer$
?c_c_bias$initializer$@@3P6AXXZA DD FLAT:??__Ec_c_bias@@YAXXZ ; c_c_bias$initializer$
?c_c_scale$initializer$@@3P6AXXZA DD FLAT:??__Ec_c_scale@@YAXXZ ; c_c_scale$initializer$
?c_c_sun$initializer$@@3P6AXXZA DD FLAT:??__Ec_c_sun@@YAXXZ ; c_c_sun$initializer$
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??__Em_xform@@YAXXZ
text$di	SEGMENT
??__Em_xform@@YAXXZ PROC				; `dynamic initializer for 'm_xform'', COMDAT

; 11   : shared_str					m_xform		;

	push	OFFSET ??__Fm_xform@@YAXXZ		; `dynamic atexit destructor for 'm_xform''
	call	_atexit
	pop	ecx
	ret	0
??__Em_xform@@YAXXZ ENDP				; `dynamic initializer for 'm_xform''
text$di	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??__Fm_xform@@YAXXZ
text$yd	SEGMENT
??__Fm_xform@@YAXXZ PROC				; `dynamic atexit destructor for 'm_xform'', COMDAT

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR ?m_xform@@3Vshared_str@@A ; m_xform
	test	eax, eax
	je	SHORT $LN7@dynamic
	dec	DWORD PTR [eax]
	xor	ecx, ecx
	mov	eax, DWORD PTR ?m_xform@@3Vshared_str@@A ; m_xform
	cmp	DWORD PTR [eax], ecx
	cmove	eax, ecx
	mov	DWORD PTR ?m_xform@@3Vshared_str@@A, eax ; m_xform
$LN7@dynamic:
	ret	0
??__Fm_xform@@YAXXZ ENDP				; `dynamic atexit destructor for 'm_xform''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??__Em_xform_v@@YAXXZ
text$di	SEGMENT
??__Em_xform_v@@YAXXZ PROC				; `dynamic initializer for 'm_xform_v'', COMDAT

; 12   : shared_str					m_xform_v	;

	push	OFFSET ??__Fm_xform_v@@YAXXZ		; `dynamic atexit destructor for 'm_xform_v''
	call	_atexit
	pop	ecx
	ret	0
??__Em_xform_v@@YAXXZ ENDP				; `dynamic initializer for 'm_xform_v''
text$di	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??__Fm_xform_v@@YAXXZ
text$yd	SEGMENT
??__Fm_xform_v@@YAXXZ PROC				; `dynamic atexit destructor for 'm_xform_v'', COMDAT

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR ?m_xform_v@@3Vshared_str@@A ; m_xform_v
	test	eax, eax
	je	SHORT $LN7@dynamic
	dec	DWORD PTR [eax]
	xor	ecx, ecx
	mov	eax, DWORD PTR ?m_xform_v@@3Vshared_str@@A ; m_xform_v
	cmp	DWORD PTR [eax], ecx
	cmove	eax, ecx
	mov	DWORD PTR ?m_xform_v@@3Vshared_str@@A, eax ; m_xform_v
$LN7@dynamic:
	ret	0
??__Fm_xform_v@@YAXXZ ENDP				; `dynamic atexit destructor for 'm_xform_v''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??__Ec_consts@@YAXXZ
text$di	SEGMENT
??__Ec_consts@@YAXXZ PROC				; `dynamic initializer for 'c_consts'', COMDAT

; 13   : shared_str					c_consts	;

	push	OFFSET ??__Fc_consts@@YAXXZ		; `dynamic atexit destructor for 'c_consts''
	call	_atexit
	pop	ecx
	ret	0
??__Ec_consts@@YAXXZ ENDP				; `dynamic initializer for 'c_consts''
text$di	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??__Fc_consts@@YAXXZ
text$yd	SEGMENT
??__Fc_consts@@YAXXZ PROC				; `dynamic atexit destructor for 'c_consts'', COMDAT

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR ?c_consts@@3Vshared_str@@A ; c_consts
	test	eax, eax
	je	SHORT $LN7@dynamic
	dec	DWORD PTR [eax]
	xor	ecx, ecx
	mov	eax, DWORD PTR ?c_consts@@3Vshared_str@@A ; c_consts
	cmp	DWORD PTR [eax], ecx
	cmove	eax, ecx
	mov	DWORD PTR ?c_consts@@3Vshared_str@@A, eax ; c_consts
$LN7@dynamic:
	ret	0
??__Fc_consts@@YAXXZ ENDP				; `dynamic atexit destructor for 'c_consts''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??__Ec_wave@@YAXXZ
text$di	SEGMENT
??__Ec_wave@@YAXXZ PROC					; `dynamic initializer for 'c_wave'', COMDAT

; 14   : shared_str					c_wave		;

	push	OFFSET ??__Fc_wave@@YAXXZ		; `dynamic atexit destructor for 'c_wave''
	call	_atexit
	pop	ecx
	ret	0
??__Ec_wave@@YAXXZ ENDP					; `dynamic initializer for 'c_wave''
text$di	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??__Fc_wave@@YAXXZ
text$yd	SEGMENT
??__Fc_wave@@YAXXZ PROC					; `dynamic atexit destructor for 'c_wave'', COMDAT

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR ?c_wave@@3Vshared_str@@A	; c_wave
	test	eax, eax
	je	SHORT $LN7@dynamic
	dec	DWORD PTR [eax]
	xor	ecx, ecx
	mov	eax, DWORD PTR ?c_wave@@3Vshared_str@@A	; c_wave
	cmp	DWORD PTR [eax], ecx
	cmove	eax, ecx
	mov	DWORD PTR ?c_wave@@3Vshared_str@@A, eax	; c_wave
$LN7@dynamic:
	ret	0
??__Fc_wave@@YAXXZ ENDP					; `dynamic atexit destructor for 'c_wave''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??__Ec_wind@@YAXXZ
text$di	SEGMENT
??__Ec_wind@@YAXXZ PROC					; `dynamic initializer for 'c_wind'', COMDAT

; 15   : shared_str					c_wind		;

	push	OFFSET ??__Fc_wind@@YAXXZ		; `dynamic atexit destructor for 'c_wind''
	call	_atexit
	pop	ecx
	ret	0
??__Ec_wind@@YAXXZ ENDP					; `dynamic initializer for 'c_wind''
text$di	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??__Fc_wind@@YAXXZ
text$yd	SEGMENT
??__Fc_wind@@YAXXZ PROC					; `dynamic atexit destructor for 'c_wind'', COMDAT

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR ?c_wind@@3Vshared_str@@A	; c_wind
	test	eax, eax
	je	SHORT $LN7@dynamic
	dec	DWORD PTR [eax]
	xor	ecx, ecx
	mov	eax, DWORD PTR ?c_wind@@3Vshared_str@@A	; c_wind
	cmp	DWORD PTR [eax], ecx
	cmove	eax, ecx
	mov	DWORD PTR ?c_wind@@3Vshared_str@@A, eax	; c_wind
$LN7@dynamic:
	ret	0
??__Fc_wind@@YAXXZ ENDP					; `dynamic atexit destructor for 'c_wind''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??__Ec_c_bias@@YAXXZ
text$di	SEGMENT
??__Ec_c_bias@@YAXXZ PROC				; `dynamic initializer for 'c_c_bias'', COMDAT

; 16   : shared_str					c_c_bias	;

	push	OFFSET ??__Fc_c_bias@@YAXXZ		; `dynamic atexit destructor for 'c_c_bias''
	call	_atexit
	pop	ecx
	ret	0
??__Ec_c_bias@@YAXXZ ENDP				; `dynamic initializer for 'c_c_bias''
text$di	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??__Fc_c_bias@@YAXXZ
text$yd	SEGMENT
??__Fc_c_bias@@YAXXZ PROC				; `dynamic atexit destructor for 'c_c_bias'', COMDAT

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR ?c_c_bias@@3Vshared_str@@A ; c_c_bias
	test	eax, eax
	je	SHORT $LN7@dynamic
	dec	DWORD PTR [eax]
	xor	ecx, ecx
	mov	eax, DWORD PTR ?c_c_bias@@3Vshared_str@@A ; c_c_bias
	cmp	DWORD PTR [eax], ecx
	cmove	eax, ecx
	mov	DWORD PTR ?c_c_bias@@3Vshared_str@@A, eax ; c_c_bias
$LN7@dynamic:
	ret	0
??__Fc_c_bias@@YAXXZ ENDP				; `dynamic atexit destructor for 'c_c_bias''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??__Ec_c_scale@@YAXXZ
text$di	SEGMENT
??__Ec_c_scale@@YAXXZ PROC				; `dynamic initializer for 'c_c_scale'', COMDAT

; 17   : shared_str					c_c_scale	;

	push	OFFSET ??__Fc_c_scale@@YAXXZ		; `dynamic atexit destructor for 'c_c_scale''
	call	_atexit
	pop	ecx
	ret	0
??__Ec_c_scale@@YAXXZ ENDP				; `dynamic initializer for 'c_c_scale''
text$di	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??__Fc_c_scale@@YAXXZ
text$yd	SEGMENT
??__Fc_c_scale@@YAXXZ PROC				; `dynamic atexit destructor for 'c_c_scale'', COMDAT

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR ?c_c_scale@@3Vshared_str@@A ; c_c_scale
	test	eax, eax
	je	SHORT $LN7@dynamic
	dec	DWORD PTR [eax]
	xor	ecx, ecx
	mov	eax, DWORD PTR ?c_c_scale@@3Vshared_str@@A ; c_c_scale
	cmp	DWORD PTR [eax], ecx
	cmove	eax, ecx
	mov	DWORD PTR ?c_c_scale@@3Vshared_str@@A, eax ; c_c_scale
$LN7@dynamic:
	ret	0
??__Fc_c_scale@@YAXXZ ENDP				; `dynamic atexit destructor for 'c_c_scale''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??__Ec_c_sun@@YAXXZ
text$di	SEGMENT
??__Ec_c_sun@@YAXXZ PROC				; `dynamic initializer for 'c_c_sun'', COMDAT

; 18   : shared_str					c_c_sun		;

	push	OFFSET ??__Fc_c_sun@@YAXXZ		; `dynamic atexit destructor for 'c_c_sun''
	call	_atexit
	pop	ecx
	ret	0
??__Ec_c_sun@@YAXXZ ENDP				; `dynamic initializer for 'c_c_sun''
text$di	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??__Fc_c_sun@@YAXXZ
text$yd	SEGMENT
??__Fc_c_sun@@YAXXZ PROC				; `dynamic atexit destructor for 'c_c_sun'', COMDAT

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR ?c_c_sun@@3Vshared_str@@A ; c_c_sun
	test	eax, eax
	je	SHORT $LN7@dynamic
	dec	DWORD PTR [eax]
	xor	ecx, ecx
	mov	eax, DWORD PTR ?c_c_sun@@3Vshared_str@@A ; c_c_sun
	cmp	DWORD PTR [eax], ecx
	cmove	eax, ecx
	mov	DWORD PTR ?c_c_sun@@3Vshared_str@@A, eax ; c_c_sun
$LN7@dynamic:
	ret	0
??__Fc_c_sun@@YAXXZ ENDP				; `dynamic atexit destructor for 'c_c_sun''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
??0FTreeVisual@@QAE@XZ PROC				; FTreeVisual::FTreeVisual
; _this$ = ecx

; 21   : {

	push	esi
	push	edi
	mov	edi, ecx
	call	DWORD PTR __imp_??0IRender_Visual@@QAE@XZ
	lea	ecx, DWORD PTR [edi+68]
	call	DWORD PTR __imp_??0IRender_Mesh@@QAE@XZ
	mov	DWORD PTR [edi], OFFSET ??_7FTreeVisual@@6BIRender_Visual@@@

; 22   : }

	mov	eax, edi
	mov	DWORD PTR [edi+68], OFFSET ??_7FTreeVisual@@6BIRender_Mesh@@@
	pop	edi
	pop	esi
	ret	0
??0FTreeVisual@@QAE@XZ ENDP				; FTreeVisual::FTreeVisual
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??_GFTreeVisual@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GFTreeVisual@@UAEPAXI@Z PROC				; FTreeVisual::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 25   : {

	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+68]
	mov	DWORD PTR [ecx], OFFSET ??_7FTreeVisual@@6BIRender_Mesh@@@
	mov	DWORD PTR [esi], OFFSET ??_7FTreeVisual@@6BIRender_Visual@@@

; 26   : }

	call	DWORD PTR __imp_??1IRender_Mesh@@UAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1IRender_Visual@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	208					; 000000d0H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GFTreeVisual@@UAEPAXI@Z ENDP				; FTreeVisual::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
??1FTreeVisual@@UAE@XZ PROC				; FTreeVisual::~FTreeVisual
; _this$ = ecx

; 25   : {

	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+68]
	mov	DWORD PTR [ecx], OFFSET ??_7FTreeVisual@@6BIRender_Mesh@@@
	mov	DWORD PTR [esi], OFFSET ??_7FTreeVisual@@6BIRender_Visual@@@

; 26   : }

	call	DWORD PTR __imp_??1IRender_Mesh@@UAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1IRender_Visual@@UAE@XZ
??1FTreeVisual@@UAE@XZ ENDP				; FTreeVisual::~FTreeVisual
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
?Release@FTreeVisual@@UAEXXZ PROC			; FTreeVisual::Release
; _this$ = ecx

; 30   : 	IRender_Visual::Release	();

	jmp	DWORD PTR __imp_?Release@IRender_Visual@@UAEXXZ
?Release@FTreeVisual@@UAEXXZ ENDP			; FTreeVisual::Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
_N$ = 8							; size = 4
_data$ = 12						; size = 4
_vFormat$1$ = 16					; size = 4
_dwFlags$ = 16						; size = 4
?Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z PROC		; FTreeVisual::Load
; _this$ = ecx

; 34   : {

	push	ebx

; 35   : 	IRender_Visual::Load		(N,data,dwFlags);

	mov	ebx, DWORD PTR _data$[esp]
	push	ebp
	push	esi
	push	edi
	push	DWORD PTR _dwFlags$[esp+12]
	mov	ebp, ecx
	push	ebx
	push	DWORD PTR _N$[esp+20]
	call	DWORD PTR __imp_?Load@IRender_Visual@@UAEXPBDPAVIReader@@I@Z

; 36   : 
; 37   : 	D3DVERTEXELEMENT9*	vFormat	= NULL;
; 38   : 
; 39   : 	// read vertices
; 40   : 	R_ASSERT			(data->find_chunk(OGF_GCONTAINER));

	cmp	BYTE PTR ?ignore_always@?3??Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z@4_NA, 0
	mov	edi, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	jne	SHORT $LN2@Load
	push	0
	push	21					; 00000015H
	mov	ecx, ebx
	call	DWORD PTR __imp_?find_chunk@?$IReaderBase@VIReader@@@@QAEIIPAH@Z
	test	eax, eax
	jne	SHORT $LN2@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z@4_NA
	push	OFFSET ??_C@_0BC@IMFDMMDB@FTreeVisual?3?3Load@
	push	40					; 00000028H
	push	OFFSET ??_C@_0DL@CECBDBFE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0CB@GHIDCOOC@data?9?$DOfind_chunk?$CIOGF_GCONTAINER@
	call	edi
$LN2@Load:

; 41   : 	{
; 42   : 		// verts
; 43   : 		u32 ID				= data->r_u32				();

	mov	ecx, ebx
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 44   : 		vBase				= data->r_u32				();

	mov	ecx, ebx
	mov	esi, eax
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 45   : 		vCount				= data->r_u32				();

	mov	ecx, ebx
	mov	DWORD PTR [ebp+80], eax
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ
	mov	DWORD PTR [ebp+84], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	imul	eax, esi, 524
	add	eax, DWORD PTR ?RImplementation@@3VCRender@@A+908
	mov	DWORD PTR _vFormat$1$[esp+12], eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 50   : 		p_rm_Vertices		= RImplementation.getVB			(ID);

	mov	eax, DWORD PTR ?RImplementation@@3VCRender@@A+920
	mov	ecx, DWORD PTR [eax+esi*4]
	mov	DWORD PTR [ebp+76], ecx

; 51   : 		p_rm_Vertices->AddRef();

	push	ecx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]

; 52   : 
; 53   : 		// indices
; 54   : 		dwPrimitives		= 0;
; 55   : 		ID					= data->r_u32				();

	mov	ecx, ebx
	mov	DWORD PTR [ebp+100], 0
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 56   : 		iBase				= data->r_u32				();

	mov	ecx, ebx
	mov	esi, eax
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 57   : 		iCount				= data->r_u32				();

	mov	ecx, ebx
	mov	DWORD PTR [ebp+92], eax
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ
	mov	ecx, eax

; 58   : 		dwPrimitives		= iCount/3;

	mov	eax, -1431655765			; aaaaaaabH
	mul	ecx
	mov	DWORD PTR [ebp+96], ecx
	shr	edx, 1
	mov	DWORD PTR [ebp+100], edx

; 59   : 		
; 60   : 		VERIFY				(NULL==p_rm_Indices);
; 61   : 		p_rm_Indices			= RImplementation.getIB		(ID);

	mov	eax, DWORD PTR ?RImplementation@@3VCRender@@A+932
	mov	ecx, DWORD PTR [eax+esi*4]
	mov	DWORD PTR [ebp+88], ecx

; 62   : 		p_rm_Indices->AddRef	();

	push	ecx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]

; 63   : 	}
; 64   : 
; 65   : 	// load tree-def
; 66   : 	R_ASSERT			(data->find_chunk(OGF_TREEDEF2));

	cmp	BYTE PTR ?ignore_always@?N@??Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z@4_NA, 0
	jne	SHORT $LN11@Load
	push	0
	push	12					; 0000000cH
	mov	ecx, ebx
	call	DWORD PTR __imp_?find_chunk@?$IReaderBase@VIReader@@@@QAEIIPAH@Z
	test	eax, eax
	jne	SHORT $LN11@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?N@??Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z@4_NA
	push	OFFSET ??_C@_0BC@IMFDMMDB@FTreeVisual?3?3Load@
	push	66					; 00000042H
	push	OFFSET ??_C@_0DL@CECBDBFE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BP@OBMBIAPA@data?9?$DOfind_chunk?$CIOGF_TREEDEF2?$CJ@
	call	edi
$LN11@Load:

; 67   : 	{
; 68   : 		data->r			(&xform,	sizeof(xform));

	mov	edi, DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z
	lea	eax, DWORD PTR [ebp+144]
	push	64					; 00000040H
	push	eax
	mov	ecx, ebx
	call	edi

; 69   : 		data->r			(&c_scale,	sizeof(c_scale));	c_scale.rgb.mul	(.5f);	c_scale.hemi*=.5f;	c_scale.sun	*=.5f;

	push	20					; 00000014H
	lea	esi, DWORD PTR [ebp+104]
	mov	ecx, ebx
	push	esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 40   : 	ICF SelfRef	mul(T s)								{ x*=s;		y*=s;		z*=s;			return *this;	};

	movss	xmm1, DWORD PTR __real@3f000000
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 70   : 		data->r			(&c_bias,	sizeof(c_bias));	c_bias.rgb.mul	(.5f);	c_bias.hemi	*=.5f;	c_bias.sun	*=.5f;

	mov	ecx, ebx
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 40   : 	ICF SelfRef	mul(T s)								{ x*=s;		y*=s;		z*=s;			return *this;	};

	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 70   : 		data->r			(&c_bias,	sizeof(c_bias));	c_bias.rgb.mul	(.5f);	c_bias.hemi	*=.5f;	c_bias.sun	*=.5f;

	push	20					; 00000014H
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 40   : 	ICF SelfRef	mul(T s)								{ x*=s;		y*=s;		z*=s;			return *this;	};

	movss	DWORD PTR [esi], xmm0
	movss	xmm0, DWORD PTR [esi+4]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi+4], xmm0
	movss	xmm0, DWORD PTR [esi+8]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi+8], xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 70   : 		data->r			(&c_bias,	sizeof(c_bias));	c_bias.rgb.mul	(.5f);	c_bias.hemi	*=.5f;	c_bias.sun	*=.5f;

	lea	esi, DWORD PTR [ebp+124]
	movss	xmm0, DWORD PTR [ebp+116]
	mulss	xmm0, xmm1
	push	esi
	movss	DWORD PTR [ebp+116], xmm0
	movss	xmm0, DWORD PTR [ebp+120]
	mulss	xmm0, xmm1
	movss	DWORD PTR [ebp+120], xmm0
	call	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 40   : 	ICF SelfRef	mul(T s)								{ x*=s;		y*=s;		z*=s;			return *this;	};

	movss	xmm1, DWORD PTR __real@3f000000
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 75   : 	rm_geom.create			(vFormat,p_rm_Vertices,p_rm_Indices);

	lea	ecx, DWORD PTR [ebp+72]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 40   : 	ICF SelfRef	mul(T s)								{ x*=s;		y*=s;		z*=s;			return *this;	};

	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 75   : 	rm_geom.create			(vFormat,p_rm_Vertices,p_rm_Indices);

	push	DWORD PTR [ebp+88]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 40   : 	ICF SelfRef	mul(T s)								{ x*=s;		y*=s;		z*=s;			return *this;	};

	movss	DWORD PTR [esi], xmm0
	movss	xmm0, DWORD PTR [esi+4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 75   : 	rm_geom.create			(vFormat,p_rm_Vertices,p_rm_Indices);

	push	DWORD PTR [ebp+76]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 40   : 	ICF SelfRef	mul(T s)								{ x*=s;		y*=s;		z*=s;			return *this;	};

	mulss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 75   : 	rm_geom.create			(vFormat,p_rm_Vertices,p_rm_Indices);

	push	DWORD PTR _vFormat$1$[esp+20]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 40   : 	ICF SelfRef	mul(T s)								{ x*=s;		y*=s;		z*=s;			return *this;	};

	movss	DWORD PTR [esi+4], xmm0
	movss	xmm0, DWORD PTR [esi+8]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi+8], xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 70   : 		data->r			(&c_bias,	sizeof(c_bias));	c_bias.rgb.mul	(.5f);	c_bias.hemi	*=.5f;	c_bias.sun	*=.5f;

	movss	xmm0, DWORD PTR [ebp+136]
	mulss	xmm0, xmm1
	movss	DWORD PTR [ebp+136], xmm0
	movss	xmm0, DWORD PTR [ebp+140]
	mulss	xmm0, xmm1
	movss	DWORD PTR [ebp+140], xmm0

; 75   : 	rm_geom.create			(vFormat,p_rm_Vertices,p_rm_Indices);

	call	DWORD PTR __imp_?create@resptrcode_geom@@QAEXPAU_D3DVERTEXELEMENT9@@PAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	esi, DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	push	OFFSET ??_C@_07BBMOEPGC@m_xform@
	mov	ecx, DWORD PTR [ecx]
	call	esi
	test	eax, eax
	je	SHORT $LN90@Load
	inc	DWORD PTR [eax]
$LN90@Load:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR ?m_xform@@3Vshared_str@@A ; m_xform
	test	ecx, ecx
	je	SHORT $LN94@Load
	dec	DWORD PTR [ecx]
$LN94@Load:

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR ?m_xform@@3Vshared_str@@A, eax ; m_xform
	push	OFFSET ??_C@_09KPCNPDBH@m_xform_v@
	mov	ecx, DWORD PTR [ecx]
	call	esi
	test	eax, eax
	je	SHORT $LN99@Load
	inc	DWORD PTR [eax]
$LN99@Load:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR ?m_xform_v@@3Vshared_str@@A ; m_xform_v
	test	ecx, ecx
	je	SHORT $LN103@Load
	dec	DWORD PTR [ecx]
$LN103@Load:

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR ?m_xform_v@@3Vshared_str@@A, eax ; m_xform_v
	push	OFFSET ??_C@_06CJANOHJB@consts@
	mov	ecx, DWORD PTR [ecx]
	call	esi
	test	eax, eax
	je	SHORT $LN108@Load
	inc	DWORD PTR [eax]
$LN108@Load:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR ?c_consts@@3Vshared_str@@A ; c_consts
	test	ecx, ecx
	je	SHORT $LN112@Load
	dec	DWORD PTR [ecx]
$LN112@Load:

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR ?c_consts@@3Vshared_str@@A, eax ; c_consts
	push	OFFSET ??_C@_04LJEDCPFL@wave@
	mov	ecx, DWORD PTR [ecx]
	call	esi
	test	eax, eax
	je	SHORT $LN117@Load
	inc	DWORD PTR [eax]
$LN117@Load:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR ?c_wave@@3Vshared_str@@A	; c_wave
	test	ecx, ecx
	je	SHORT $LN121@Load
	dec	DWORD PTR [ecx]
$LN121@Load:

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR ?c_wave@@3Vshared_str@@A, eax	; c_wave
	push	OFFSET ??_C@_04HHNJMEDN@wind@
	mov	ecx, DWORD PTR [ecx]
	call	esi
	test	eax, eax
	je	SHORT $LN126@Load
	inc	DWORD PTR [eax]
$LN126@Load:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR ?c_wind@@3Vshared_str@@A	; c_wind
	test	ecx, ecx
	je	SHORT $LN130@Load
	dec	DWORD PTR [ecx]
$LN130@Load:

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR ?c_wind@@3Vshared_str@@A, eax	; c_wind
	push	OFFSET ??_C@_06MNMONLFN@c_bias@
	mov	ecx, DWORD PTR [ecx]
	call	esi
	test	eax, eax
	je	SHORT $LN135@Load
	inc	DWORD PTR [eax]
$LN135@Load:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR ?c_c_bias@@3Vshared_str@@A ; c_c_bias
	test	ecx, ecx
	je	SHORT $LN139@Load
	dec	DWORD PTR [ecx]
$LN139@Load:

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR ?c_c_bias@@3Vshared_str@@A, eax ; c_c_bias
	push	OFFSET ??_C@_07JINNFBKC@c_scale@
	mov	ecx, DWORD PTR [ecx]
	call	esi
	test	eax, eax
	je	SHORT $LN144@Load
	inc	DWORD PTR [eax]
$LN144@Load:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR ?c_c_scale@@3Vshared_str@@A ; c_c_scale
	test	ecx, ecx
	je	SHORT $LN148@Load
	dec	DWORD PTR [ecx]
$LN148@Load:

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR ?c_c_scale@@3Vshared_str@@A, eax ; c_c_scale
	push	OFFSET ??_C@_05KKNAJIFC@c_sun@
	mov	ecx, DWORD PTR [ecx]
	call	esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	test	eax, eax
	je	SHORT $LN153@Load
	inc	DWORD PTR [eax]
$LN153@Load:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR ?c_c_sun@@3Vshared_str@@A ; c_c_sun
	test	ecx, ecx
	je	SHORT $LN159@Load
	dec	DWORD PTR [ecx]
$LN159@Load:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 86   : }

	mov	DWORD PTR ?c_c_sun@@3Vshared_str@@A, eax ; c_c_sun
	ret	12					; 0000000cH
?Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z ENDP		; FTreeVisual::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??0FTreeVisual_setup@@QAE@XZ
_TEXT	SEGMENT
??0FTreeVisual_setup@@QAE@XZ PROC			; FTreeVisual_setup::FTreeVisual_setup, COMDAT
; _this$ = ecx

; 96   : 	{
; 97   : 		dwFrame	= 0;

	mov	DWORD PTR [ecx], 0

; 98   : 	}

	mov	eax, ecx
	ret	0
??0FTreeVisual_setup@@QAE@XZ ENDP			; FTreeVisual_setup::FTreeVisual_setup
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ?calculate@FTreeVisual_setup@@QAEXXZ
_TEXT	SEGMENT
tv270 = -8						; size = 4
tv266 = -4						; size = 4
?calculate@FTreeVisual_setup@@QAEXXZ PROC		; FTreeVisual_setup::calculate, COMDAT
; _this$ = ecx

; 101  : 	{

	sub	esp, 8

; 102  : 		dwFrame					= Device.dwFrame;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [eax+244]
	mov	DWORD PTR [ecx], eax

; 103  : 
; 104  : 		// Calc wind-vector3, scale
; 105  : 		float	tm_rot			= PI_MUL_2*Device.fTimeGlobal/ps_r__Tree_w_rot;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	fld	DWORD PTR [eax+472]
	fmul	DWORD PTR __real@3f20d97c
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 754  :             return (float)sin(_X);

	fld	ST(0)
	fsin
	fstp	DWORD PTR tv266[esp+8]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 44   : 	IC	T			magnitude_sqr ()					{ return x*x + y*y + z*z + w*w;		}

	movss	xmm2, DWORD PTR tv266[esp+8]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 653  :             return (float)cos(_X);

	fcos
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 44   : 	IC	T			magnitude_sqr ()					{ return x*x + y*y + z*z + w*w;		}

	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 653  :             return (float)cos(_X);

	fst	DWORD PTR tv270[esp+8]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 44   : 	IC	T			magnitude_sqr ()					{ return x*x + y*y + z*z + w*w;		}

	movss	xmm1, DWORD PTR tv270[esp+8]
	mulss	xmm1, xmm1

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	fstp	DWORD PTR [ecx+32]

; 33   : 	IC  SelfRef		mul(T s)							{ x*=s;		y*=s;		z*=s;		w*=s;		return *this; }

	mov	DWORD PTR [ecx+28], 0

; 44   : 	IC	T			magnitude_sqr ()					{ return x*x + y*y + z*z + w*w;		}

	addss	xmm1, xmm0

; 33   : 	IC  SelfRef		mul(T s)							{ x*=s;		y*=s;		z*=s;		w*=s;		return *this; }

	mov	DWORD PTR [ecx+36], 0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 764  :             return (float)sqrt(_X);

	sqrtss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 46   : 	IC	SelfRef		normalize()							{ return mul(1/magnitude());		}

	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0

; 33   : 	IC  SelfRef		mul(T s)							{ x*=s;		y*=s;		z*=s;		w*=s;		return *this; }

	mulss	xmm2, xmm1
	mulss	xmm1, DWORD PTR [ecx+32]
	movss	DWORD PTR [ecx+32], xmm1
	movss	xmm1, DWORD PTR __real@3ba3d70a
	movss	xmm0, DWORD PTR [ecx+28]
	mulss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 107  : 		scale					= 1.f/float(FTreeVisual_quant);

	mov	DWORD PTR [ecx+4], 973078528		; 3a000000H
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 33   : 	IC  SelfRef		mul(T s)							{ x*=s;		y*=s;		z*=s;		w*=s;		return *this; }

	mulss	xmm2, xmm1
	movss	DWORD PTR [ecx+28], xmm0
	movss	xmm0, DWORD PTR [ecx+32]
	mulss	xmm0, xmm1
	movss	DWORD PTR [ecx+24], xmm2
	movss	DWORD PTR [ecx+32], xmm0
	movss	xmm0, DWORD PTR [ecx+36]
	mulss	xmm0, xmm1

; 38   : 	IC  SelfRef		div(T s)							{ x/=s;		y/=s;		z/=s;		w/=s;		return *this; }

	movss	xmm1, DWORD PTR __real@3e22f983

; 33   : 	IC  SelfRef		mul(T s)							{ x*=s;		y*=s;		z*=s;		w*=s;		return *this; }

	movss	DWORD PTR [ecx+36], xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 110  : 		wave.set				(ps_r__Tree_Wave.x,	ps_r__Tree_Wave.y,	ps_r__Tree_Wave.z,	Device.fTimeGlobal*ps_r__Tree_w_speed);			// wave

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR ?ps_r__Tree_Wave@@3U?$_vector3@M@@A
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 110  : 		wave.set				(ps_r__Tree_Wave.x,	ps_r__Tree_Wave.y,	ps_r__Tree_Wave.z,	Device.fTimeGlobal*ps_r__Tree_w_speed);			// wave

	movss	xmm2, DWORD PTR [eax+472]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR ?ps_r__Tree_Wave@@3U?$_vector3@M@@A+4
	movss	DWORD PTR [ecx+12], xmm0
	movss	xmm0, DWORD PTR ?ps_r__Tree_Wave@@3U?$_vector3@M@@A+8
	movss	DWORD PTR [ecx+16], xmm0

; 38   : 	IC  SelfRef		div(T s)							{ x/=s;		y/=s;		z/=s;		w/=s;		return *this; }

	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, xmm1
	mulss	xmm2, xmm1
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR [ecx+12]
	mulss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm2
	movss	DWORD PTR [ecx+12], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	mulss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 112  : 	}

	add	esp, 8
	ret	0
?calculate@FTreeVisual_setup@@QAEXXZ ENDP		; FTreeVisual_setup::calculate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
_w$1$ = -40						; size = 4
_x$1$ = -40						; size = 4
tv948 = -40						; size = 4
$T1 = -40						; size = 4
_z$1$ = -36						; size = 4
tv946 = -36						; size = 4
$T2 = -36						; size = 4
$T3 = -36						; size = 4
_w$1$ = -32						; size = 4
_y$1$ = -32						; size = 4
$T4 = -32						; size = 4
_z$1$ = -28						; size = 4
_x$1$ = -28						; size = 4
$T5 = -28						; size = 4
$T6 = -28						; size = 4
_y$1$ = -24						; size = 4
_y$1$ = -24						; size = 4
$T7 = -24						; size = 4
_x$1$ = -20						; size = 4
_x$1$ = -20						; size = 4
_desc$1$ = -20						; size = 4
_data$8 = -16						; size = 16
_data$9 = -16						; size = 16
_data$10 = -16						; size = 16
_data$11 = -16						; size = 16
_LOD$ = 8						; size = 4
?Render@FTreeVisual@@UAEXM@Z PROC			; FTreeVisual::Render
; _this$ = ecx

; 117  : 	static FTreeVisual_setup	tvs;
; 118  : 	if (tvs.dwFrame!=Device.dwFrame)	tvs.calculate();

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	sub	esp, 40					; 00000028H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [eax+244]
	cmp	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A, ecx
	je	$LN472@Render

; 102  : 		dwFrame					= Device.dwFrame;

	mov	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A, ecx

; 103  : 
; 104  : 		// Calc wind-vector3, scale
; 105  : 		float	tm_rot			= PI_MUL_2*Device.fTimeGlobal/ps_r__Tree_w_rot;

	fld	DWORD PTR [eax+472]
	fmul	DWORD PTR __real@3f20d97c
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 33   : 	IC  SelfRef		mul(T s)							{ x*=s;		y*=s;		z*=s;		w*=s;		return *this; }

	mov	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+28, 0
	mov	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+36, 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 107  : 		scale					= 1.f/float(FTreeVisual_quant);

	mov	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+4, 973078528 ; 3a000000H
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 754  :             return (float)sin(_X);

	fld	ST(0)
	fsin
	fstp	DWORD PTR tv946[esp+56]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 44   : 	IC	T			magnitude_sqr ()					{ return x*x + y*y + z*z + w*w;		}

	movss	xmm2, DWORD PTR tv946[esp+56]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 653  :             return (float)cos(_X);

	fcos
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 44   : 	IC	T			magnitude_sqr ()					{ return x*x + y*y + z*z + w*w;		}

	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 653  :             return (float)cos(_X);

	fstp	DWORD PTR tv948[esp+56]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 44   : 	IC	T			magnitude_sqr ()					{ return x*x + y*y + z*z + w*w;		}

	movss	xmm3, DWORD PTR tv948[esp+56]
	movaps	xmm1, xmm3
	mulss	xmm1, xmm3
	addss	xmm1, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 764  :             return (float)sqrt(_X);

	sqrtss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 46   : 	IC	SelfRef		normalize()							{ return mul(1/magnitude());		}

	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR ?ps_r__Tree_Wave@@3U?$_vector3@M@@A

; 33   : 	IC  SelfRef		mul(T s)							{ x*=s;		y*=s;		z*=s;		w*=s;		return *this; }

	mulss	xmm3, xmm1
	mulss	xmm2, xmm1
	mulss	xmm3, DWORD PTR __real@3ba3d70a
	mulss	xmm2, DWORD PTR __real@3ba3d70a

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm1, DWORD PTR ?ps_r__Tree_Wave@@3U?$_vector3@M@@A+4

; 33   : 	IC  SelfRef		mul(T s)							{ x*=s;		y*=s;		z*=s;		w*=s;		return *this; }

	movss	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+32, xmm3

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm3, DWORD PTR ?ps_r__Tree_Wave@@3U?$_vector3@M@@A+8

; 33   : 	IC  SelfRef		mul(T s)							{ x*=s;		y*=s;		z*=s;		w*=s;		return *this; }

	movss	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+24, xmm2
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 110  : 		wave.set				(ps_r__Tree_Wave.x,	ps_r__Tree_Wave.y,	ps_r__Tree_Wave.z,	Device.fTimeGlobal*ps_r__Tree_w_speed);			// wave

	movss	xmm4, DWORD PTR [eax+472]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 38   : 	IC  SelfRef		div(T s)							{ x/=s;		y/=s;		z/=s;		w/=s;		return *this; }

	movss	xmm2, DWORD PTR __real@3e22f983
	mulss	xmm0, xmm2
	mulss	xmm1, xmm2
	mulss	xmm3, xmm2
	mulss	xmm4, xmm2
	movss	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+8, xmm0
	movss	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+12, xmm1
	movss	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+16, xmm3
	movss	DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+20, xmm4
$LN472@Render:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 126  : 	RCache.set_c			(m_xform,	xform);														// matrix

	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 205  : 	ICF	void						set_c(shared_str& n, const Fmatrix& A) { if (ctable)	set_c(&*ctable->get(n), A); }

	mov	ebp, DWORD PTR __imp_?get@R_constant_table@@QAE?AV?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@AAVshared_str@@@Z
	mov	ecx, DWORD PTR [esi+8864]
	test	ecx, ecx
	je	SHORT $LN38@Render
	push	OFFSET ?m_xform@@3Vshared_str@@A	; m_xform
	lea	eax, DWORD PTR $T3[esp+60]
	push	eax
	call	ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	ebx, DWORD PTR [eax]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 189  : 	ICF	void						set_c(R_constant* C, const Fmatrix& A) { if (C)		constants.set(C, A); }

	test	ebx, ebx
	je	SHORT $LN47@Render
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 143  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	movzx	eax, WORD PTR [ebx+10]
	mov	ecx, eax
	test	al, 1
	je	SHORT $LN46@Render
	lea	eax, DWORD PTR [edi+144]
	push	eax
	lea	eax, DWORD PTR [ebx+12]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+608]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_matrix@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+4720], 1
	movzx	ecx, WORD PTR [ebx+10]
$LN46@Render:

; 144  : 		if (C->destination & 2) { a_vertex.set(C, C->vs, A); a_vertex.b_dirty = TRUE; }

	test	cl, 2
	je	SHORT $LN47@Render
	lea	eax, DWORD PTR [edi+144]
	push	eax
	lea	eax, DWORD PTR [ebx+16]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+4736]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_matrix@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+8848], 1
$LN47@Render:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T3[esp+56]
	call	?_dec@?$resptr_base@UR_constant@@@@IAEXXZ ; resptr_base<R_constant>::_dec
	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
$LN38@Render:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 127  : 	RCache.set_c			(c_consts,	tvs.scale,tvs.scale,0,0);									// consts/scale

	movss	xmm0, DWORD PTR ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+4
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 207  : 	ICF	void						set_c(shared_str& n, float x, float y, float z, float w) { if (ctable)	set_c(&*ctable->get(n), x, y, z, w); }

	mov	ecx, DWORD PTR [esi+8864]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 127  : 	RCache.set_c			(c_consts,	tvs.scale,tvs.scale,0,0);									// consts/scale

	movss	DWORD PTR _x$1$[esp+56], xmm0
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 207  : 	ICF	void						set_c(shared_str& n, float x, float y, float z, float w) { if (ctable)	set_c(&*ctable->get(n), x, y, z, w); }

	test	ecx, ecx
	je	$LN72@Render
	push	OFFSET ?c_consts@@3Vshared_str@@A	; c_consts
	lea	eax, DWORD PTR $T4[esp+60]
	push	eax
	call	ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	ebx, DWORD PTR [eax]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 191  : 	ICF	void						set_c(R_constant* C, float x, float y, float z, float w) { if (C)		constants.set(C, x, y, z, w); }

	test	ebx, ebx
	je	SHORT $LN85@Render
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	movzx	eax, WORD PTR [ebx+10]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR _x$1$[esp+56]
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	mov	ecx, eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR _data$11[esp+56], xmm0
	movss	DWORD PTR _data$11[esp+60], xmm0
	mov	DWORD PTR _data$11[esp+64], 0
	mov	DWORD PTR _data$11[esp+68], 0
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	test	al, 1
	je	SHORT $LN84@Render
	lea	eax, DWORD PTR _data$11[esp+56]
	push	eax
	lea	eax, DWORD PTR [ebx+12]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+608]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+4720], 1
	movzx	ecx, WORD PTR [ebx+10]
$LN84@Render:

; 148  : 		if (C->destination & 2) { a_vertex.set(C, C->vs, A); a_vertex.b_dirty = TRUE; }

	test	cl, 2
	je	SHORT $LN85@Render
	lea	eax, DWORD PTR _data$11[esp+56]
	push	eax
	lea	eax, DWORD PTR [ebx+16]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+4736]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+8848], 1
$LN85@Render:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T4[esp+56]
	call	?_dec@?$resptr_base@UR_constant@@@@IAEXXZ ; resptr_base<R_constant>::_dec
	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
$LN72@Render:
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 206  : 	ICF	void						set_c(shared_str& n, const Fvector4& A) { if (ctable)	set_c(&*ctable->get(n), A); }

	mov	ecx, DWORD PTR [esi+8864]
	test	ecx, ecx
	je	SHORT $LN129@Render
	push	OFFSET ?c_wave@@3Vshared_str@@A		; c_wave
	lea	eax, DWORD PTR $T1[esp+60]
	push	eax
	call	ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	ebx, DWORD PTR [eax]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 190  : 	ICF	void						set_c(R_constant* C, const Fvector4& A) { if (C)		constants.set(C, A); }

	test	ebx, ebx
	je	SHORT $LN138@Render
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	movzx	eax, WORD PTR [ebx+10]
	mov	ecx, eax
	test	al, 1
	je	SHORT $LN137@Render
	push	OFFSET ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+8
	lea	eax, DWORD PTR [ebx+12]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+608]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+4720], 1
	movzx	ecx, WORD PTR [ebx+10]
$LN137@Render:

; 148  : 		if (C->destination & 2) { a_vertex.set(C, C->vs, A); a_vertex.b_dirty = TRUE; }

	test	cl, 2
	je	SHORT $LN138@Render
	push	OFFSET ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+8
	lea	eax, DWORD PTR [ebx+16]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+4736]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+8848], 1
$LN138@Render:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T1[esp+56]
	call	?_dec@?$resptr_base@UR_constant@@@@IAEXXZ ; resptr_base<R_constant>::_dec
	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
$LN129@Render:
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 206  : 	ICF	void						set_c(shared_str& n, const Fvector4& A) { if (ctable)	set_c(&*ctable->get(n), A); }

	mov	ecx, DWORD PTR [esi+8864]
	test	ecx, ecx
	je	SHORT $LN182@Render
	push	OFFSET ?c_wind@@3Vshared_str@@A		; c_wind
	lea	eax, DWORD PTR $T6[esp+60]
	push	eax
	call	ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	ebx, DWORD PTR [eax]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 190  : 	ICF	void						set_c(R_constant* C, const Fvector4& A) { if (C)		constants.set(C, A); }

	test	ebx, ebx
	je	SHORT $LN191@Render
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	movzx	eax, WORD PTR [ebx+10]
	mov	ecx, eax
	test	al, 1
	je	SHORT $LN190@Render
	push	OFFSET ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+24
	lea	eax, DWORD PTR [ebx+12]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+608]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+4720], 1
	movzx	ecx, WORD PTR [ebx+10]
$LN190@Render:

; 148  : 		if (C->destination & 2) { a_vertex.set(C, C->vs, A); a_vertex.b_dirty = TRUE; }

	test	cl, 2
	je	SHORT $LN191@Render
	push	OFFSET ?tvs@?1??Render@FTreeVisual@@UAEXM@Z@4UFTreeVisual_setup@@A+24
	lea	eax, DWORD PTR [ebx+16]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+4736]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+8848], 1
$LN191@Render:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T6[esp+56]
	call	?_dec@?$resptr_base@UR_constant@@@@IAEXXZ ; resptr_base<R_constant>::_dec
	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
$LN182@Render:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 136  : 	RCache.set_c			(c_c_scale,	s*c_scale.rgb.x,					s*c_scale.rgb.y,					s*c_scale.rgb.z,				s*c_scale.hemi);	// scale

	movss	xmm0, DWORD PTR __real@3fc00000
	movss	xmm1, DWORD PTR [edi+104]
	mov	eax, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A
	mulss	xmm1, xmm0
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 207  : 	ICF	void						set_c(shared_str& n, float x, float y, float z, float w) { if (ctable)	set_c(&*ctable->get(n), x, y, z, w); }

	mov	ecx, DWORD PTR [esi+8864]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 135  : 	CEnvDescriptor*	desc	= g_pGamePersistent->Environment().CurrentEnv;

	mov	eax, DWORD PTR [eax]

; 136  : 	RCache.set_c			(c_c_scale,	s*c_scale.rgb.x,					s*c_scale.rgb.y,					s*c_scale.rgb.z,				s*c_scale.hemi);	// scale

	movss	DWORD PTR _x$1$[esp+56], xmm1
	movss	xmm1, DWORD PTR [edi+108]
	mulss	xmm1, xmm0
	mov	eax, DWORD PTR [eax+1116]
	movss	DWORD PTR _y$1$[esp+56], xmm1
	movss	xmm1, DWORD PTR [edi+112]
	mov	eax, DWORD PTR [eax+440]
	mulss	xmm1, xmm0
	mov	DWORD PTR _desc$1$[esp+56], eax
	movss	DWORD PTR _z$1$[esp+56], xmm1
	movss	xmm1, DWORD PTR [edi+116]
	mulss	xmm1, xmm0
	movss	DWORD PTR _w$1$[esp+56], xmm1
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 207  : 	ICF	void						set_c(shared_str& n, float x, float y, float z, float w) { if (ctable)	set_c(&*ctable->get(n), x, y, z, w); }

	test	ecx, ecx
	je	$LN237@Render
	push	OFFSET ?c_c_scale@@3Vshared_str@@A	; c_c_scale
	lea	eax, DWORD PTR $T7[esp+60]
	push	eax
	call	ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	ebx, DWORD PTR [eax]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 191  : 	ICF	void						set_c(R_constant* C, float x, float y, float z, float w) { if (C)		constants.set(C, x, y, z, w); }

	test	ebx, ebx
	je	$LN250@Render
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR _x$1$[esp+56]
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	movzx	eax, WORD PTR [ebx+10]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR _data$10[esp+56], xmm0
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	mov	ecx, eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR _y$1$[esp+56]
	movss	DWORD PTR _data$10[esp+60], xmm0
	movss	xmm0, DWORD PTR _z$1$[esp+56]
	movss	DWORD PTR _data$10[esp+64], xmm0
	movss	xmm0, DWORD PTR _w$1$[esp+56]
	movss	DWORD PTR _data$10[esp+68], xmm0
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	test	al, 1
	je	SHORT $LN249@Render
	lea	eax, DWORD PTR _data$10[esp+56]
	push	eax
	lea	eax, DWORD PTR [ebx+12]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+608]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+4720], 1
	movzx	ecx, WORD PTR [ebx+10]
$LN249@Render:

; 148  : 		if (C->destination & 2) { a_vertex.set(C, C->vs, A); a_vertex.b_dirty = TRUE; }

	test	cl, 2
	je	SHORT $LN250@Render
	lea	eax, DWORD PTR _data$10[esp+56]
	push	eax
	lea	eax, DWORD PTR [ebx+16]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+4736]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+8848], 1
$LN250@Render:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T7[esp+56]
	call	?_dec@?$resptr_base@UR_constant@@@@IAEXXZ ; resptr_base<R_constant>::_dec
	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
	movss	xmm0, DWORD PTR __real@3fc00000
	mov	eax, DWORD PTR _desc$1$[esp+56]
$LN237@Render:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 137  : 	RCache.set_c			(c_c_bias,	s*c_bias.rgb.x + desc->ambient.x,	s*c_bias.rgb.y + desc->ambient.y,	s*c_bias.rgb.z+desc->ambient.z,	s*c_bias.hemi);		// bias

	movss	xmm1, DWORD PTR [edi+124]
	mulss	xmm1, xmm0
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 207  : 	ICF	void						set_c(shared_str& n, float x, float y, float z, float w) { if (ctable)	set_c(&*ctable->get(n), x, y, z, w); }

	mov	ecx, DWORD PTR [esi+8864]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 137  : 	RCache.set_c			(c_c_bias,	s*c_bias.rgb.x + desc->ambient.x,	s*c_bias.rgb.y + desc->ambient.y,	s*c_bias.rgb.z+desc->ambient.z,	s*c_bias.hemi);		// bias

	addss	xmm1, DWORD PTR [eax+120]
	movss	DWORD PTR _x$1$[esp+56], xmm1
	movss	xmm1, DWORD PTR [edi+128]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [eax+124]
	movss	DWORD PTR _y$1$[esp+56], xmm1
	movss	xmm1, DWORD PTR [edi+132]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [eax+128]
	movss	DWORD PTR _z$1$[esp+56], xmm1
	movss	xmm1, DWORD PTR [edi+136]
	mulss	xmm1, xmm0
	movss	DWORD PTR _w$1$[esp+56], xmm1
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 207  : 	ICF	void						set_c(shared_str& n, float x, float y, float z, float w) { if (ctable)	set_c(&*ctable->get(n), x, y, z, w); }

	test	ecx, ecx
	je	$LN313@Render
	push	OFFSET ?c_c_bias@@3Vshared_str@@A	; c_c_bias
	lea	eax, DWORD PTR $T2[esp+60]
	push	eax
	call	ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	ebx, DWORD PTR [eax]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 191  : 	ICF	void						set_c(R_constant* C, float x, float y, float z, float w) { if (C)		constants.set(C, x, y, z, w); }

	test	ebx, ebx
	je	$LN326@Render
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR _x$1$[esp+56]
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	movzx	eax, WORD PTR [ebx+10]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR _data$9[esp+56], xmm0
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	mov	ecx, eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR _y$1$[esp+56]
	movss	DWORD PTR _data$9[esp+60], xmm0
	movss	xmm0, DWORD PTR _z$1$[esp+56]
	movss	DWORD PTR _data$9[esp+64], xmm0
	movss	xmm0, DWORD PTR _w$1$[esp+56]
	movss	DWORD PTR _data$9[esp+68], xmm0
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	test	al, 1
	je	SHORT $LN325@Render
	lea	eax, DWORD PTR _data$9[esp+56]
	push	eax
	lea	eax, DWORD PTR [ebx+12]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+608]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+4720], 1
	movzx	ecx, WORD PTR [ebx+10]
$LN325@Render:

; 148  : 		if (C->destination & 2) { a_vertex.set(C, C->vs, A); a_vertex.b_dirty = TRUE; }

	test	cl, 2
	je	SHORT $LN326@Render
	lea	eax, DWORD PTR _data$9[esp+56]
	push	eax
	lea	eax, DWORD PTR [ebx+16]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR [esi+4736]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+8848], 1
$LN326@Render:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T2[esp+56]
	call	?_dec@?$resptr_base@UR_constant@@@@IAEXXZ ; resptr_base<R_constant>::_dec
	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
	movss	xmm0, DWORD PTR __real@3fc00000
$LN313@Render:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 139  : 	RCache.set_c			(c_c_sun,	s*c_scale.sun,  s*c_bias.sun,0,0);							// sun

	movss	xmm1, DWORD PTR [edi+120]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 207  : 	ICF	void						set_c(shared_str& n, float x, float y, float z, float w) { if (ctable)	set_c(&*ctable->get(n), x, y, z, w); }

	mov	ecx, DWORD PTR [esi+8864]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 139  : 	RCache.set_c			(c_c_sun,	s*c_scale.sun,  s*c_bias.sun,0,0);							// sun

	mulss	xmm1, xmm0
	movss	DWORD PTR _x$1$[esp+56], xmm1
	movss	xmm1, DWORD PTR [edi+140]
	mulss	xmm1, xmm0
	movss	DWORD PTR _y$1$[esp+56], xmm1
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 207  : 	ICF	void						set_c(shared_str& n, float x, float y, float z, float w) { if (ctable)	set_c(&*ctable->get(n), x, y, z, w); }

	test	ecx, ecx
	je	$LN393@Render
	push	OFFSET ?c_c_sun@@3Vshared_str@@A	; c_c_sun
	lea	eax, DWORD PTR $T5[esp+60]
	push	eax
	call	ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	edi, DWORD PTR [eax]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 191  : 	ICF	void						set_c(R_constant* C, float x, float y, float z, float w) { if (C)		constants.set(C, x, y, z, w); }

	test	edi, edi
	je	SHORT $LN406@Render
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR _x$1$[esp+56]
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	movzx	eax, WORD PTR [edi+10]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR _data$8[esp+56], xmm0
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	mov	ecx, eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR _y$1$[esp+56]
	movss	DWORD PTR _data$8[esp+60], xmm0
	mov	DWORD PTR _data$8[esp+64], 0
	mov	DWORD PTR _data$8[esp+68], 0
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	test	al, 1
	je	SHORT $LN405@Render
	lea	eax, DWORD PTR _data$8[esp+56]
	push	eax
	lea	eax, DWORD PTR [edi+12]
	push	eax
	push	edi
	lea	ecx, DWORD PTR [esi+608]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+4720], 1
	movzx	ecx, WORD PTR [edi+10]
$LN405@Render:

; 148  : 		if (C->destination & 2) { a_vertex.set(C, C->vs, A); a_vertex.b_dirty = TRUE; }

	test	cl, 2
	je	SHORT $LN406@Render
	lea	eax, DWORD PTR _data$8[esp+56]
	push	eax
	lea	eax, DWORD PTR [edi+16]
	push	eax
	push	edi
	lea	ecx, DWORD PTR [esi+4736]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [esi+8848], 1
$LN406@Render:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T5[esp+56]
	call	?_dec@?$resptr_base@UR_constant@@@@IAEXXZ ; resptr_base<R_constant>::_dec
$LN393@Render:
	pop	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 140  : }

	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 40					; 00000028H
	ret	4
?Render@FTreeVisual@@UAEXM@Z ENDP			; FTreeVisual::Render
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
_pSrc$ = 8						; size = 4
?Copy@FTreeVisual@@UAEXPAVIRender_Visual@@@Z PROC	; FTreeVisual::Copy
; _this$ = ecx

; 144  : {

	push	ebx
	push	ebp
	push	esi

; 145  : 	IRender_Visual::Copy	(pSrc);

	mov	esi, DWORD PTR _pSrc$[esp+8]
	mov	ebx, ecx
	push	edi
	push	esi
	call	DWORD PTR __imp_?Copy@IRender_Visual@@UAEXPAV1@@Z

; 146  : 
; 147  : 	FTreeVisual	*pFrom		= dynamic_cast<FTreeVisual*> (pSrc);

	push	0
	push	OFFSET ??_R0?AVFTreeVisual@@@8
	push	OFFSET ??_R0?AVIRender_Visual@@@8
	push	0
	push	esi
	call	___RTDynamicCast
	mov	ebp, eax
	add	esp, 20					; 00000014H
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	esi, DWORD PTR [ebp+72]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	test	esi, esi
	je	SHORT $LN12@Copy
	inc	DWORD PTR [esi]
$LN12@Copy:
	lea	ecx, DWORD PTR [ebx+72]
	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
	mov	DWORD PTR [ebx+72], esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 151  : 	PCOPY(p_rm_Vertices);	if (p_rm_Vertices) p_rm_Vertices->AddRef();

	mov	ecx, DWORD PTR [ebp+76]
	mov	DWORD PTR [ebx+76], ecx
	test	ecx, ecx
	je	SHORT $LN2@Copy
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+4]
$LN2@Copy:

; 152  : 
; 153  : 	PCOPY(vBase);

	mov	eax, DWORD PTR [ebp+80]
	mov	DWORD PTR [ebx+80], eax

; 154  : 	PCOPY(vCount);

	mov	eax, DWORD PTR [ebp+84]
	mov	DWORD PTR [ebx+84], eax

; 155  : 
; 156  : 	PCOPY(p_rm_Indices);	if (p_rm_Indices) p_rm_Indices->AddRef();

	mov	ecx, DWORD PTR [ebp+88]
	mov	DWORD PTR [ebx+88], ecx
	test	ecx, ecx
	je	SHORT $LN3@Copy
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+4]
$LN3@Copy:

; 157  : 
; 158  : 	PCOPY(iBase);

	mov	eax, DWORD PTR [ebp+92]

; 159  : 	PCOPY(iCount);
; 160  : 	PCOPY(dwPrimitives);
; 161  : 
; 162  : 	PCOPY(xform);

	lea	esi, DWORD PTR [ebp+144]
	mov	DWORD PTR [ebx+92], eax
	lea	edi, DWORD PTR [ebx+144]
	mov	eax, DWORD PTR [ebp+96]
	mov	ecx, 16					; 00000010H
	mov	DWORD PTR [ebx+96], eax
	mov	eax, DWORD PTR [ebp+100]
	mov	DWORD PTR [ebx+100], eax
	rep movsd

; 163  : 	PCOPY(c_scale);

	mov	eax, DWORD PTR [ebp+104]
	mov	DWORD PTR [ebx+104], eax
	mov	eax, DWORD PTR [ebp+108]
	mov	DWORD PTR [ebx+108], eax
	mov	eax, DWORD PTR [ebp+112]
	mov	DWORD PTR [ebx+112], eax
	mov	eax, DWORD PTR [ebp+116]
	mov	DWORD PTR [ebx+116], eax
	mov	eax, DWORD PTR [ebp+120]
	mov	DWORD PTR [ebx+120], eax

; 164  : 	PCOPY(c_bias);

	mov	eax, DWORD PTR [ebp+124]
	mov	DWORD PTR [ebx+124], eax
	mov	eax, DWORD PTR [ebp+128]
	mov	DWORD PTR [ebx+128], eax
	mov	eax, DWORD PTR [ebp+132]
	mov	DWORD PTR [ebx+132], eax
	mov	eax, DWORD PTR [ebp+136]
	pop	edi
	mov	DWORD PTR [ebx+136], eax
	mov	eax, DWORD PTR [ebp+140]
	pop	esi
	pop	ebp
	mov	DWORD PTR [ebx+140], eax
	pop	ebx

; 165  : }

	ret	4
?Copy@FTreeVisual@@UAEXPAVIRender_Visual@@@Z ENDP	; FTreeVisual::Copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
??0FTreeVisual_ST@@QAE@XZ PROC				; FTreeVisual_ST::FTreeVisual_ST
; _this$ = ecx

; 171  : {

	push	esi
	push	edi
	mov	edi, ecx

; 21   : {

	call	DWORD PTR __imp_??0IRender_Visual@@QAE@XZ
	lea	ecx, DWORD PTR [edi+68]
	call	DWORD PTR __imp_??0IRender_Mesh@@QAE@XZ

; 171  : {

	mov	DWORD PTR [edi], OFFSET ??_7FTreeVisual_ST@@6BIRender_Visual@@@

; 172  : }

	mov	eax, edi
	mov	DWORD PTR [edi+68], OFFSET ??_7FTreeVisual_ST@@6BIRender_Mesh@@@
	pop	edi
	pop	esi
	ret	0
??0FTreeVisual_ST@@QAE@XZ ENDP				; FTreeVisual_ST::FTreeVisual_ST
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??_GFTreeVisual_ST@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GFTreeVisual_ST@@UAEPAXI@Z PROC			; FTreeVisual_ST::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 174  : {

	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+68]

; 25   : {

	mov	DWORD PTR [ecx], OFFSET ??_7FTreeVisual@@6BIRender_Mesh@@@
	mov	DWORD PTR [esi], OFFSET ??_7FTreeVisual@@6BIRender_Visual@@@

; 26   : }

	call	DWORD PTR __imp_??1IRender_Mesh@@UAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1IRender_Visual@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar
	push	208					; 000000d0H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN8@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GFTreeVisual_ST@@UAEPAXI@Z ENDP			; FTreeVisual_ST::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
??1FTreeVisual_ST@@UAE@XZ PROC				; FTreeVisual_ST::~FTreeVisual_ST
; _this$ = ecx

; 174  : {

	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+68]

; 25   : {

	mov	DWORD PTR [ecx], OFFSET ??_7FTreeVisual@@6BIRender_Mesh@@@
	mov	DWORD PTR [esi], OFFSET ??_7FTreeVisual@@6BIRender_Visual@@@

; 26   : }

	call	DWORD PTR __imp_??1IRender_Mesh@@UAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1IRender_Visual@@UAE@XZ
??1FTreeVisual_ST@@UAE@XZ ENDP				; FTreeVisual_ST::~FTreeVisual_ST
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
?Release@FTreeVisual_ST@@UAEXXZ PROC			; FTreeVisual_ST::Release
; _this$ = ecx

; 30   : 	IRender_Visual::Release	();

	jmp	DWORD PTR __imp_?Release@IRender_Visual@@UAEXXZ
?Release@FTreeVisual_ST@@UAEXXZ ENDP			; FTreeVisual_ST::Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
_N$ = 8							; size = 4
_data$ = 12						; size = 4
_dwFlags$ = 16						; size = 4
?Load@FTreeVisual_ST@@UAEXPBDPAVIReader@@I@Z PROC	; FTreeVisual_ST::Load
; _this$ = ecx

; 182  : 	inherited::Load				(N,data,dwFlags);

	jmp	?Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z ; FTreeVisual::Load
?Load@FTreeVisual_ST@@UAEXPBDPAVIReader@@I@Z ENDP	; FTreeVisual_ST::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
_baseV$1$ = 8						; size = 4
_LOD$ = 8						; size = 4
?Render@FTreeVisual_ST@@UAEXM@Z PROC			; FTreeVisual_ST::Render
; _this$ = ecx

; 186  : 	inherited::Render			(LOD);

	fld	DWORD PTR _LOD$[esp-4]
	push	ebx
	push	ebp
	push	esi
	push	edi
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ebx, ecx
	call	?Render@FTreeVisual@@UAEXM@Z		; FTreeVisual::Render
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	edi, DWORD PTR [ebx+72]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 187  : 	RCache.set_Geometry			(rm_geom);

	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 224  : 	set_Format(_geom->dcl._get()->dcl);

	mov	eax, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [eax+8]

; 131  : 	if (decl != _decl)

	cmp	DWORD PTR [esi+592], edx
	je	SHORT $LN12@Render

; 132  : 	{
; 133  : 		PGO(Msg("PGO:v_format:%x", _decl));
; 134  : #ifdef DEBUG
; 135  : 		stat.decl++;
; 136  : #endif
; 137  : 		decl = _decl;

	mov	DWORD PTR [esi+592], edx

; 138  : 		CHK_DX(HW.pDevice->SetVertexDeclaration(decl));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+348]
$LN12@Render:

; 225  : 	set_Vertices(_geom->vb, _geom->vb_stride);

	mov	ebp, DWORD PTR [edi+12]
	mov	edx, DWORD PTR [edi+20]

; 172  : 	if ((vb != _vb) || (vb_stride != _vb_stride))

	cmp	DWORD PTR [esi+596], ebp
	jne	SHORT $LN16@Render
	cmp	DWORD PTR [esi+604], edx
	je	SHORT $LN15@Render
$LN16@Render:

; 173  : 	{
; 174  : 		PGO(Msg("PGO:VB:%x,%d", _vb, _vb_stride));
; 175  : #ifdef DEBUG
; 176  : 		stat.vb++;
; 177  : #endif
; 178  : 		vb = _vb;

	mov	DWORD PTR [esi+596], ebp

; 179  : 		vb_stride = _vb_stride;

	mov	DWORD PTR [esi+604], edx

; 180  : 		CHK_DX(HW.pDevice->SetStreamSource(0, vb, 0, vb_stride));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	push	0
	push	ebp
	mov	eax, DWORD PTR [eax+8]
	push	0
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+400]
$LN15@Render:

; 226  : 	set_Indices(_geom->ib);

	mov	edx, DWORD PTR [edi+16]

; 186  : 	if (ib != _ib)

	cmp	DWORD PTR [esi+600], edx
	je	SHORT $LN19@Render

; 187  : 	{
; 188  : 		PGO(Msg("PGO:IB:%x", _ib));
; 189  : #ifdef DEBUG
; 190  : 		stat.ib++;
; 191  : #endif
; 192  : 		ib = _ib;

	mov	DWORD PTR [esi+600], edx

; 193  : 		CHK_DX(HW.pDevice->SetIndices(ib));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+416]
$LN19@Render:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 188  : 	RCache.Render				(D3DPT_TRIANGLELIST,vBase,0,vCount,iBase,dwPrimitives);

	mov	eax, DWORD PTR [ebx+80]
	mov	esi, DWORD PTR [ebx+100]
	mov	ebp, DWORD PTR [ebx+92]
	mov	edi, DWORD PTR [ebx+84]
	mov	DWORD PTR _baseV$1$[esp+12], eax
	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 202  : 	constants.flush();

	lea	ecx, DWORD PTR [eax+608]
	inc	DWORD PTR [eax+9024]
	add	DWORD PTR [eax+9020], edi
	add	DWORD PTR [eax+9016], esi
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 172  : 		if (a_pixel.b_dirty || a_vertex.b_dirty)	flush_cache();

	cmp	DWORD PTR [ecx+4112], 0
	jne	SHORT $LN25@Render
	cmp	DWORD PTR [ecx+8240], 0
	je	SHORT $LN24@Render
$LN25@Render:
	call	DWORD PTR __imp_?flush_cache@R_constants@@QAEXXZ
$LN24@Render:
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 203  : 	CHK_DX(HW.pDevice->DrawIndexedPrimitive(T, baseV, startV, countV, startI, PC));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	esi
	push	ebp
	push	edi
	mov	eax, DWORD PTR [eax+8]
	push	0
	push	DWORD PTR _baseV$1$[esp+28]
	mov	ecx, DWORD PTR [eax]
	push	4
	push	eax
	call	DWORD PTR [ecx+328]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 189  : 	RCache.stat.r.s_flora.add	(vCount);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 27   : 	ICF		void	add(u32 _verts) { verts += _verts; dips++; }

	mov	eax, DWORD PTR [ebx+84]
	pop	edi
	pop	esi
	add	DWORD PTR [ecx+9056], eax
	inc	DWORD PTR [ecx+9060]
	pop	ebp
	pop	ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 190  : }

	ret	4
?Render@FTreeVisual_ST@@UAEXM@Z ENDP			; FTreeVisual_ST::Render
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
_pSrc$ = 8						; size = 4
?Copy@FTreeVisual_ST@@UAEXPAVIRender_Visual@@@Z PROC	; FTreeVisual_ST::Copy
; _this$ = ecx

; 193  : 	inherited::Copy				(pSrc);

	jmp	?Copy@FTreeVisual@@UAEXPAVIRender_Visual@@@Z ; FTreeVisual::Copy
?Copy@FTreeVisual_ST@@UAEXPAVIRender_Visual@@@Z ENDP	; FTreeVisual_ST::Copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
??0FTreeVisual_PM@@QAE@XZ PROC				; FTreeVisual_PM::FTreeVisual_PM
; _this$ = ecx

; 200  : {

	push	esi
	push	edi
	mov	edi, ecx

; 21   : {

	call	DWORD PTR __imp_??0IRender_Visual@@QAE@XZ
	lea	ecx, DWORD PTR [edi+68]
	call	DWORD PTR __imp_??0IRender_Mesh@@QAE@XZ

; 200  : {

	mov	DWORD PTR [edi], OFFSET ??_7FTreeVisual_PM@@6BIRender_Visual@@@

; 201  : 	pSWI						= 0;
; 202  : 	last_lod					= 0;
; 203  : }

	mov	eax, edi
	mov	DWORD PTR [edi+68], OFFSET ??_7FTreeVisual_PM@@6BIRender_Mesh@@@
	mov	DWORD PTR [edi+208], 0
	mov	DWORD PTR [edi+212], 0
	pop	edi
	pop	esi
	ret	0
??0FTreeVisual_PM@@QAE@XZ ENDP				; FTreeVisual_PM::FTreeVisual_PM
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
;	COMDAT ??_GFTreeVisual_PM@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GFTreeVisual_PM@@UAEPAXI@Z PROC			; FTreeVisual_PM::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 205  : {

	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+68]

; 25   : {

	mov	DWORD PTR [ecx], OFFSET ??_7FTreeVisual@@6BIRender_Mesh@@@
	mov	DWORD PTR [esi], OFFSET ??_7FTreeVisual@@6BIRender_Visual@@@

; 26   : }

	call	DWORD PTR __imp_??1IRender_Mesh@@UAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1IRender_Visual@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar
	push	216					; 000000d8H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN8@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GFTreeVisual_PM@@UAEPAXI@Z ENDP			; FTreeVisual_PM::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
??1FTreeVisual_PM@@UAE@XZ PROC				; FTreeVisual_PM::~FTreeVisual_PM
; _this$ = ecx

; 205  : {

	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+68]

; 25   : {

	mov	DWORD PTR [ecx], OFFSET ??_7FTreeVisual@@6BIRender_Mesh@@@
	mov	DWORD PTR [esi], OFFSET ??_7FTreeVisual@@6BIRender_Visual@@@

; 26   : }

	call	DWORD PTR __imp_??1IRender_Mesh@@UAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1IRender_Visual@@UAE@XZ
??1FTreeVisual_PM@@UAE@XZ ENDP				; FTreeVisual_PM::~FTreeVisual_PM
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
?Release@FTreeVisual_PM@@UAEXXZ PROC			; FTreeVisual_PM::Release
; _this$ = ecx

; 30   : 	IRender_Visual::Release	();

	jmp	DWORD PTR __imp_?Release@IRender_Visual@@UAEXXZ
?Release@FTreeVisual_PM@@UAEXXZ ENDP			; FTreeVisual_PM::Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
_N$ = 8							; size = 4
_data$ = 12						; size = 4
_dwFlags$ = 16						; size = 4
?Load@FTreeVisual_PM@@UAEXPBDPAVIReader@@I@Z PROC	; FTreeVisual_PM::Load
; _this$ = ecx

; 212  : {

	push	esi

; 213  : 	inherited::Load				(N,data,dwFlags);

	mov	esi, DWORD PTR _data$[esp]
	push	edi
	push	DWORD PTR _dwFlags$[esp+4]
	mov	edi, ecx
	push	esi
	push	DWORD PTR _N$[esp+12]
	call	?Load@FTreeVisual@@UAEXPBDPAVIReader@@I@Z ; FTreeVisual::Load

; 214  : 	R_ASSERT					(data->find_chunk(OGF_SWICONTAINER));

	cmp	BYTE PTR ?ignore_always@?3??Load@FTreeVisual_PM@@UAEXPBDPAVIReader@@I@Z@4_NA, 0
	jne	SHORT $LN2@Load
	push	0
	push	20					; 00000014H
	mov	ecx, esi
	call	DWORD PTR __imp_?find_chunk@?$IReaderBase@VIReader@@@@QAEIIPAH@Z
	test	eax, eax
	jne	SHORT $LN2@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??Load@FTreeVisual_PM@@UAEXPBDPAVIReader@@I@Z@4_NA
	push	OFFSET ??_C@_0BF@EPHJGBLH@FTreeVisual_PM?3?3Load@
	push	214					; 000000d6H
	push	OFFSET ??_C@_0DL@CECBDBFE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0CD@GMKBKFF@data?9?$DOfind_chunk?$CIOGF_SWICONTAIN@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN2@Load:

; 215  : 	{
; 216  : 		u32 ID					= data->r_u32				();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	lea	ecx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR ?RImplementation@@3VCRender@@A+884
	lea	eax, DWORD PTR [eax+ecx*8]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 217  : 		pSWI					= RImplementation.getSWI	(ID);

	mov	DWORD PTR [edi+208], eax
	pop	edi
	pop	esi

; 218  : 	}
; 219  : }

	ret	12					; 0000000cH
?Load@FTreeVisual_PM@@UAEXPBDPAVIReader@@I@Z ENDP	; FTreeVisual_PM::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
_PC$1$ = -4						; size = 4
tv611 = -4						; size = 4
tv550 = -4						; size = 4
__vb$1$ = 8						; size = 4
_countV$1$ = 8						; size = 4
_a$1 = 8						; size = 4
_LOD$ = 8						; size = 4
?Render@FTreeVisual_PM@@UAEXM@Z PROC			; FTreeVisual_PM::Render
; _this$ = ecx

; 221  : {

	push	ecx

; 222  : 	inherited::Render			(LOD);

	fld	DWORD PTR _LOD$[esp]
	push	ebx
	push	ebp
	push	esi
	push	edi
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edi, ecx
	call	?Render@FTreeVisual@@UAEXM@Z		; FTreeVisual::Render

; 223  : 	int lod_id					= last_lod;
; 224  : 	if (LOD>=0.f) {

	movss	xmm0, DWORD PTR _LOD$[esp+16]
	comiss	xmm0, DWORD PTR __real@00000000
	mov	ebx, DWORD PTR [edi+212]
	mov	ebp, DWORD PTR [edi+208]
	jb	SHORT $LN4@Render

; 225  : 		lod_id					= iFloor((1.f-LOD)*float(pSWI->count-1)+0.5f);

	mov	eax, DWORD PTR [ebp+4]
	sub	eax, 1
	mov	DWORD PTR tv611[esp+20], eax
	fild	DWORD PTR tv611[esp+20]
	jns	SHORT $LN36@Render
	fadd	DWORD PTR __real@4f800000
$LN36@Render:
	fld1
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ecx, 158				; 0000009eH
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 225  : 		lod_id					= iFloor((1.f-LOD)*float(pSWI->count-1)+0.5f);

	fsub	DWORD PTR _LOD$[esp+16]
	fmulp	ST(1), ST(0)
	fadd	DWORD PTR __real@3f000000
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 83   :     int a			= *(const int*)(&x);

	fstp	DWORD PTR _a$1[esp+16]

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	esi, DWORD PTR _a$1[esp+16]
	mov	eax, esi
	sar	eax, 23					; 00000017H

; 85   :     int r			= (((u32)(a) << 8) | (1U << 31)) >> exponent;

	mov	ebx, esi
	movzx	eax, al
	or	ebx, -8388608				; ff800000H
	sub	ecx, eax
	shl	ebx, 8
	shr	ebx, cl

; 86   :     exponent		+= 31-127;
; 87   :     {
; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	mov	eax, 1
	sub	ecx, 96					; 00000060H

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	mov	edx, esi
	shl	eax, cl
	dec	eax
	sar	edx, 31					; 0000001fH
	sar	eax, 8
	and	eax, esi
	neg	eax
	sbb	eax, eax
	inc	eax
	and	eax, edx

; 92   :         r			-=	(imask&a);

	sub	ebx, eax
	lea	eax, DWORD PTR [ecx+64]
	sar	eax, 31					; 0000001fH

; 93   :         r			&=	exponent;

	and	ebx, eax
	xor	ebx, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 226  : 		last_lod				= lod_id;

	mov	DWORD PTR [edi+212], ebx
$LN4@Render:

; 227  : 	}
; 228  : 	VERIFY						(lod_id>=0 && lod_id<int(pSWI->count));
; 229  : 	FSlideWindow& SW			= pSWI->sw[lod_id];

	mov	eax, DWORD PTR [ebp]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	ebp, DWORD PTR [edi+72]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 230  : 	RCache.set_Geometry			(rm_geom);

	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
	mov	DWORD PTR tv550[esp+20], eax
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 224  : 	set_Format(_geom->dcl._get()->dcl);

	mov	eax, DWORD PTR [ebp+8]
	mov	edx, DWORD PTR [eax+8]

; 131  : 	if (decl != _decl)

	cmp	DWORD PTR [esi+592], edx
	je	SHORT $LN18@Render

; 132  : 	{
; 133  : 		PGO(Msg("PGO:v_format:%x", _decl));
; 134  : #ifdef DEBUG
; 135  : 		stat.decl++;
; 136  : #endif
; 137  : 		decl = _decl;

	mov	DWORD PTR [esi+592], edx

; 138  : 		CHK_DX(HW.pDevice->SetVertexDeclaration(decl));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+348]
$LN18@Render:

; 225  : 	set_Vertices(_geom->vb, _geom->vb_stride);

	mov	eax, DWORD PTR [ebp+12]
	mov	edx, DWORD PTR [ebp+20]
	mov	DWORD PTR __vb$1$[esp+16], eax

; 172  : 	if ((vb != _vb) || (vb_stride != _vb_stride))

	cmp	DWORD PTR [esi+596], eax
	jne	SHORT $LN22@Render
	cmp	DWORD PTR [esi+604], edx
	je	SHORT $LN21@Render
$LN22@Render:

; 173  : 	{
; 174  : 		PGO(Msg("PGO:VB:%x,%d", _vb, _vb_stride));
; 175  : #ifdef DEBUG
; 176  : 		stat.vb++;
; 177  : #endif
; 178  : 		vb = _vb;

	mov	DWORD PTR [esi+596], eax

; 179  : 		vb_stride = _vb_stride;

	mov	DWORD PTR [esi+604], edx

; 180  : 		CHK_DX(HW.pDevice->SetStreamSource(0, vb, 0, vb_stride));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	push	0
	push	DWORD PTR __vb$1$[esp+24]
	mov	eax, DWORD PTR [eax+8]
	push	0
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+400]
$LN21@Render:

; 226  : 	set_Indices(_geom->ib);

	mov	edx, DWORD PTR [ebp+16]

; 186  : 	if (ib != _ib)

	cmp	DWORD PTR [esi+600], edx
	je	SHORT $LN25@Render

; 187  : 	{
; 188  : 		PGO(Msg("PGO:IB:%x", _ib));
; 189  : #ifdef DEBUG
; 190  : 		stat.ib++;
; 191  : #endif
; 192  : 		ib = _ib;

	mov	DWORD PTR [esi+600], edx

; 193  : 		CHK_DX(HW.pDevice->SetIndices(ib));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+416]
$LN25@Render:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 231  : 	RCache.Render				(D3DPT_TRIANGLELIST,vBase,0,SW.num_verts,iBase+SW.offset,SW.num_tris);

	mov	ebp, DWORD PTR tv550[esp+20]
	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	mov	esi, DWORD PTR [edi+92]
	mov	edi, DWORD PTR [edi+80]
	movzx	ecx, WORD PTR [ebp+ebx*8+4]
	add	esi, DWORD PTR [ebp+ebx*8]
	movzx	edx, WORD PTR [ebp+ebx*8+6]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 201  : 	stat.polys += PC;

	add	DWORD PTR [eax+9016], ecx
	inc	DWORD PTR [eax+9024]
	add	DWORD PTR [eax+9020], edx
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 172  : 		if (a_pixel.b_dirty || a_vertex.b_dirty)	flush_cache();

	cmp	DWORD PTR [eax+4720], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 231  : 	RCache.Render				(D3DPT_TRIANGLELIST,vBase,0,SW.num_verts,iBase+SW.offset,SW.num_tris);

	mov	DWORD PTR _PC$1$[esp+20], ecx
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 202  : 	constants.flush();

	lea	ecx, DWORD PTR [eax+608]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 231  : 	RCache.Render				(D3DPT_TRIANGLELIST,vBase,0,SW.num_verts,iBase+SW.offset,SW.num_tris);

	mov	DWORD PTR _countV$1$[esp+16], edx
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 172  : 		if (a_pixel.b_dirty || a_vertex.b_dirty)	flush_cache();

	jne	SHORT $LN31@Render
	cmp	DWORD PTR [ecx+8240], 0
	je	SHORT $LN30@Render
$LN31@Render:
	call	DWORD PTR __imp_?flush_cache@R_constants@@QAEXXZ
	mov	edx, DWORD PTR _countV$1$[esp+16]
$LN30@Render:
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 203  : 	CHK_DX(HW.pDevice->DrawIndexedPrimitive(T, baseV, startV, countV, startI, PC));

	push	DWORD PTR _PC$1$[esp+20]
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	esi
	push	edx
	push	0
	mov	eax, DWORD PTR [eax+8]
	push	edi
	push	4
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+328]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 232  : 	RCache.stat.r.s_flora.add	(SW.num_verts);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	movzx	eax, WORD PTR [ebp+ebx*8+6]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 27   : 	ICF		void	add(u32 _verts) { verts += _verts; dips++; }

	pop	edi
	pop	esi
	add	DWORD PTR [ecx+9056], eax
	inc	DWORD PTR [ecx+9060]
	pop	ebp
	pop	ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp

; 233  : }

	pop	ecx
	ret	4
?Render@FTreeVisual_PM@@UAEXM@Z ENDP			; FTreeVisual_PM::Render
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\FTreeVisual.cpp
_TEXT	SEGMENT
_pSrc$ = 8						; size = 4
?Copy@FTreeVisual_PM@@UAEXPAVIRender_Visual@@@Z PROC	; FTreeVisual_PM::Copy
; _this$ = ecx

; 235  : {

	push	edi

; 236  : 	inherited::Copy				(pSrc);

	push	DWORD PTR _pSrc$[esp]
	mov	edi, ecx
	call	?Copy@FTreeVisual@@UAEXPAVIRender_Visual@@@Z ; FTreeVisual::Copy

; 237  : 	FTreeVisual_PM	*pFrom		= dynamic_cast<FTreeVisual_PM*> (pSrc);

	push	0
	push	OFFSET ??_R0?AVFTreeVisual_PM@@@8
	push	OFFSET ??_R0?AVIRender_Visual@@@8
	push	0
	push	DWORD PTR _pSrc$[esp+16]
	call	___RTDynamicCast
	add	esp, 20					; 00000014H

; 238  : 	PCOPY						(pSWI);

	mov	eax, DWORD PTR [eax+208]
	mov	DWORD PTR [edi+208], eax
	pop	edi

; 239  : }

	ret	4
?Copy@FTreeVisual_PM@@UAEXPAVIRender_Visual@@@Z ENDP	; FTreeVisual_PM::Copy
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_EFTreeVisual_PM@@WEE@AEPAXI@Z
_TEXT	SEGMENT
??_EFTreeVisual_PM@@WEE@AEPAXI@Z PROC			; [thunk]:FTreeVisual_PM::`vector deleting destructor', COMDAT
	sub	ecx, 68					; 00000044H
	jmp	??_EFTreeVisual_PM@@UAEPAXI@Z
??_EFTreeVisual_PM@@WEE@AEPAXI@Z ENDP			; [thunk]:FTreeVisual_PM::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_EFTreeVisual@@WEE@AEPAXI@Z
_TEXT	SEGMENT
??_EFTreeVisual@@WEE@AEPAXI@Z PROC			; [thunk]:FTreeVisual::`vector deleting destructor', COMDAT
	sub	ecx, 68					; 00000044H
	jmp	??_EFTreeVisual@@UAEPAXI@Z
??_EFTreeVisual@@WEE@AEPAXI@Z ENDP			; [thunk]:FTreeVisual::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_EFTreeVisual_ST@@WEE@AEPAXI@Z
_TEXT	SEGMENT
??_EFTreeVisual_ST@@WEE@AEPAXI@Z PROC			; [thunk]:FTreeVisual_ST::`vector deleting destructor', COMDAT
	sub	ecx, 68					; 00000044H
	jmp	??_EFTreeVisual_ST@@UAEPAXI@Z
??_EFTreeVisual_ST@@WEE@AEPAXI@Z ENDP			; [thunk]:FTreeVisual_ST::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ?_set@shared_str@@QAEXPBD@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
?_set@shared_str@@QAEXPBD@Z PROC			; shared_str::_set, COMDAT
; _this$ = ecx

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	push	esi
	push	DWORD PTR _rhs$[esp]
	mov	esi, ecx
	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN2@set
	inc	DWORD PTR [eax]
$LN2@set:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN8@set
	dec	DWORD PTR [ecx]
$LN8@set:

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	DWORD PTR [esi], eax
	pop	esi
	ret	4
?_set@shared_str@@QAEXPBD@Z ENDP			; shared_str::_set
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??4shared_str@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??4shared_str@@QAEAAV0@PBD@Z PROC			; shared_str::operator=, COMDAT
; _this$ = ecx

; 63   : 	shared_str&			operator=	(str_c rhs)						{	_set(rhs);	return (shared_str&)*this;			}

	push	esi

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	push	DWORD PTR _rhs$[esp]

; 63   : 	shared_str&			operator=	(str_c rhs)						{	_set(rhs);	return (shared_str&)*this;			}

	mov	esi, ecx

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN4@operator
	inc	DWORD PTR [eax]
$LN4@operator:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN10@operator
	dec	DWORD PTR [ecx]
$LN10@operator:

; 63   : 	shared_str&			operator=	(str_c rhs)						{	_set(rhs);	return (shared_str&)*this;			}

	mov	DWORD PTR [esi], eax
	mov	eax, esi
	pop	esi
	ret	4
??4shared_str@@QAEAAV0@PBD@Z ENDP			; shared_str::operator=
_TEXT	ENDS
END
