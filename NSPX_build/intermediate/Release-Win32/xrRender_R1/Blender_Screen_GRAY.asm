; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\blender_screen_gray.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BM@EEOJHJCL@INTERNAL?3?5gray?9scale?5effect@ ; `string'
PUBLIC	??_R2CBlender_Screen_GRAY@@8			; CBlender_Screen_GRAY::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBlender_Screen_GRAY@@8		; CBlender_Screen_GRAY::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3CBlender_Screen_GRAY@@8			; CBlender_Screen_GRAY::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCBlender_Screen_GRAY@@@8		; CBlender_Screen_GRAY `RTTI Type Descriptor'
PUBLIC	??_R4CBlender_Screen_GRAY@@6B@			; CBlender_Screen_GRAY::`RTTI Complete Object Locator'
PUBLIC	??_7CBlender_Screen_GRAY@@6B@			; CBlender_Screen_GRAY::`vftable'
;	COMDAT ??_7CBlender_Screen_GRAY@@6B@
CONST	SEGMENT
??_7CBlender_Screen_GRAY@@6B@ DD FLAT:??_R4CBlender_Screen_GRAY@@6B@ ; CBlender_Screen_GRAY::`vftable'
	DD	FLAT:?getName@IBlender@@UAEPBDXZ
	DD	FLAT:?getComment@CBlender_Screen_GRAY@@UAEPBDXZ
	DD	FLAT:?Save@CBlender_Screen_GRAY@@UAEXAAVIWriter@@@Z
	DD	FLAT:?Load@CBlender_Screen_GRAY@@UAEXAAVIReader@@G@Z
	DD	FLAT:?canBeDetailed@IBlender@@UAEHXZ
	DD	FLAT:?canBeLMAPped@CBlender_Screen_GRAY@@UAEHXZ
	DD	FLAT:?Compile@CBlender_Screen_GRAY@@UAEXAAVCBlender_Compile@@@Z
	DD	FLAT:??_ECBlender_Screen_GRAY@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CBlender_Screen_GRAY@@6B@
rdata$r	SEGMENT
??_R4CBlender_Screen_GRAY@@6B@ DD 00H			; CBlender_Screen_GRAY::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBlender_Screen_GRAY@@@8
	DD	FLAT:??_R3CBlender_Screen_GRAY@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBlender_Screen_GRAY@@@8
data$rs	SEGMENT
??_R0?AVCBlender_Screen_GRAY@@@8 DD FLAT:??_7type_info@@6B@ ; CBlender_Screen_GRAY `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBlender_Screen_GRAY@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CBlender_Screen_GRAY@@8
rdata$r	SEGMENT
??_R3CBlender_Screen_GRAY@@8 DD 00H			; CBlender_Screen_GRAY::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBlender_Screen_GRAY@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBlender_Screen_GRAY@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBlender_Screen_GRAY@@8 DD FLAT:??_R0?AVCBlender_Screen_GRAY@@@8 ; CBlender_Screen_GRAY::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBlender_Screen_GRAY@@8
rdata$r	ENDS
;	COMDAT ??_R2CBlender_Screen_GRAY@@8
rdata$r	SEGMENT
??_R2CBlender_Screen_GRAY@@8 DD FLAT:??_R1A@?0A@EA@CBlender_Screen_GRAY@@8 ; CBlender_Screen_GRAY::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IBlender@@8
	DD	FLAT:??_R1A@?0A@EA@CPropertyBase@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BM@EEOJHJCL@INTERNAL?3?5gray?9scale?5effect@
CONST	SEGMENT
??_C@_0BM@EEOJHJCL@INTERNAL?3?5gray?9scale?5effect@ DB 'INTERNAL: gray-sc'
	DB	'ale effect', 00H				; `string'
PUBLIC	?Compile@CBlender_Screen_GRAY@@UAEXAAVCBlender_Compile@@@Z ; CBlender_Screen_GRAY::Compile
PUBLIC	?Load@CBlender_Screen_GRAY@@UAEXAAVIReader@@G@Z	; CBlender_Screen_GRAY::Load
PUBLIC	?Save@CBlender_Screen_GRAY@@UAEXAAVIWriter@@@Z	; CBlender_Screen_GRAY::Save
PUBLIC	??1CBlender_Screen_GRAY@@UAE@XZ			; CBlender_Screen_GRAY::~CBlender_Screen_GRAY
PUBLIC	??_GCBlender_Screen_GRAY@@UAEPAXI@Z		; CBlender_Screen_GRAY::`scalar deleting destructor'
PUBLIC	??0CBlender_Screen_GRAY@@QAE@XZ			; CBlender_Screen_GRAY::CBlender_Screen_GRAY
PUBLIC	?canBeLMAPped@CBlender_Screen_GRAY@@UAEHXZ	; CBlender_Screen_GRAY::canBeLMAPped
PUBLIC	?getComment@CBlender_Screen_GRAY@@UAEPBDXZ	; CBlender_Screen_GRAY::getComment
EXTRN	??_ECBlender_Screen_GRAY@@UAEPAXI@Z:PROC	; CBlender_Screen_GRAY::`vector deleting destructor'
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.h
;	COMDAT ?getComment@CBlender_Screen_GRAY@@UAEPBDXZ
_TEXT	SEGMENT
?getComment@CBlender_Screen_GRAY@@UAEPBDXZ PROC		; CBlender_Screen_GRAY::getComment, COMDAT
; _this$ = ecx

; 12   : 	virtual		LPCSTR		getComment()	{ return "INTERNAL: gray-scale effect"; }

	mov	eax, OFFSET ??_C@_0BM@EEOJHJCL@INTERNAL?3?5gray?9scale?5effect@
	ret	0
?getComment@CBlender_Screen_GRAY@@UAEPBDXZ ENDP		; CBlender_Screen_GRAY::getComment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.h
;	COMDAT ?canBeLMAPped@CBlender_Screen_GRAY@@UAEHXZ
_TEXT	SEGMENT
?canBeLMAPped@CBlender_Screen_GRAY@@UAEHXZ PROC		; CBlender_Screen_GRAY::canBeLMAPped, COMDAT
; _this$ = ecx

; 13   : 	virtual		BOOL		canBeLMAPped()	{ return FALSE; }

	xor	eax, eax
	ret	0
?canBeLMAPped@CBlender_Screen_GRAY@@UAEHXZ ENDP		; CBlender_Screen_GRAY::canBeLMAPped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
_TEXT	SEGMENT
??0CBlender_Screen_GRAY@@QAE@XZ PROC			; CBlender_Screen_GRAY::CBlender_Screen_GRAY
; _this$ = ecx

; 14   : {

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Screen_GRAY@@6B@

; 15   : 	description.CLS		= B_SCREEN_GRAY;
; 16   : }

	mov	eax, esi
	mov	DWORD PTR [esi+4], 1096359968		; 41592020H
	mov	DWORD PTR [esi+8], 1398753106		; 535f4752H
	pop	esi
	ret	0
??0CBlender_Screen_GRAY@@QAE@XZ ENDP			; CBlender_Screen_GRAY::CBlender_Screen_GRAY
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
;	COMDAT ??_GCBlender_Screen_GRAY@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBlender_Screen_GRAY@@UAEPAXI@Z PROC		; CBlender_Screen_GRAY::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 19   : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Screen_GRAY@@6B@

; 20   : 
; 21   : }

	call	DWORD PTR __imp_??1IBlender@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	324					; 00000144H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCBlender_Screen_GRAY@@UAEPAXI@Z ENDP		; CBlender_Screen_GRAY::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
_TEXT	SEGMENT
??1CBlender_Screen_GRAY@@UAE@XZ PROC			; CBlender_Screen_GRAY::~CBlender_Screen_GRAY
; _this$ = ecx

; 19   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CBlender_Screen_GRAY@@6B@

; 20   : 
; 21   : }

	jmp	DWORD PTR __imp_??1IBlender@@UAE@XZ
??1CBlender_Screen_GRAY@@UAE@XZ ENDP			; CBlender_Screen_GRAY::~CBlender_Screen_GRAY
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
?Save@CBlender_Screen_GRAY@@UAEXAAVIWriter@@@Z PROC	; CBlender_Screen_GRAY::Save
; _this$ = ecx

; 25   : 	IBlender::Save	(fs);

	jmp	DWORD PTR __imp_?Save@IBlender@@UAEXAAVIWriter@@@Z
?Save@CBlender_Screen_GRAY@@UAEXAAVIWriter@@@Z ENDP	; CBlender_Screen_GRAY::Save
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
_version$ = 12						; size = 2
?Load@CBlender_Screen_GRAY@@UAEXAAVIReader@@G@Z PROC	; CBlender_Screen_GRAY::Load
; _this$ = ecx

; 30   : 	IBlender::Load	(fs,version);

	jmp	DWORD PTR __imp_?Load@IBlender@@UAEXAAVIReader@@G@Z
?Load@CBlender_Screen_GRAY@@UAEXAAVIReader@@G@Z ENDP	; CBlender_Screen_GRAY::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\blenders\Blender_Recorder.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_C$ = 8							; size = 4
?Compile@CBlender_Screen_GRAY@@UAEXAAVCBlender_Compile@@@Z PROC ; CBlender_Screen_GRAY::Compile
; _this$ = ecx

; 34   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 35   : 	IBlender::Compile		(C);

	mov	esi, DWORD PTR _C$[esp+12]
	mov	ebx, ecx
	push	edi
	push	esi
	mov	DWORD PTR _this$1$[esp+24], ebx
	call	DWORD PTR __imp_?Compile@IBlender@@UAEXAAVCBlender_Compile@@@Z

; 36   : 	C.PassBegin		();

	mov	ecx, esi
	call	DWORD PTR __imp_?PassBegin@CBlender_Compile@@QAEXXZ

; 37   : 	{
; 38   : 		C.PassSET_ZB			(FALSE,FALSE);

	push	0
	push	0
	push	0
	mov	ecx, esi
	call	DWORD PTR __imp_?PassSET_ZB@CBlender_Compile@@QAEXHHH@Z

; 39   : 		C.PassSET_Blend		(FALSE,D3DBLEND_ONE,D3DBLEND_ZERO,	FALSE,0);

	push	0
	push	0
	push	1
	push	2
	push	0
	mov	ecx, esi
	call	DWORD PTR __imp_?PassSET_Blend@CBlender_Compile@@QAEXHIIHI@Z

; 40   : 		C.PassSET_LightFog	(FALSE,FALSE);

	push	0
	push	0
	mov	ecx, esi
	call	DWORD PTR __imp_?PassSET_LightFog@CBlender_Compile@@QAEXHH@Z

; 42   : 		C.R().SetRS		(D3DRS_TEXTUREFACTOR,color_rgba(76+105,150+105,29+105,0));

	push	11927430				; 00b5ff86H
	push	60					; 0000003cH
; File I:\Vitalya\mine\NSProjectX\xrEngine\blenders\Blender_Recorder.h

; 48   : 	CSimulator& R() { return RS; }

	lea	ecx, DWORD PTR [esi+64]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp

; 42   : 		C.R().SetRS		(D3DRS_TEXTUREFACTOR,color_rgba(76+105,150+105,29+105,0));

	call	DWORD PTR __imp_?SetRS@CSimulator@@QAEXII@Z

; 43   : 
; 44   : 		// Stage0 - Base texture
; 45   : 		C.StageBegin		();

	mov	ecx, esi
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 46   : 		{
; 47   : 			C.StageSET_Address	(D3DTADDRESS_CLAMP);

	push	3
	mov	ecx, esi
	call	DWORD PTR __imp_?StageSET_Address@CBlender_Compile@@QAEXI@Z

; 48   : 			C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_ADD,			D3DTA_DIFFUSE);

	push	0
	push	7
	push	2
	mov	ecx, esi
	call	DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z

; 49   : 			C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_ADD,			D3DTA_DIFFUSE);

	push	0
	push	7
	push	2
	mov	ecx, esi
	call	DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z

; 50   : 			C.Stage_Texture		(oT_Name);

	mov	ebp, DWORD PTR __imp_?Stage_Texture@CBlender_Compile@@QAEXPBDIIII@Z
	lea	eax, DWORD PTR [ebx+196]
	push	2
	push	2
	push	2
	push	1
	push	eax
	mov	ecx, esi
	call	ebp

; 51   : 			C.Stage_Matrix		(oT_xform,	0);

	lea	eax, DWORD PTR [ebx+260]
	mov	ecx, esi
	mov	ebx, DWORD PTR __imp_?Stage_Matrix@CBlender_Compile@@QAEXPBDH@Z
	push	0
	push	eax
	call	ebx

; 52   : 			C.Stage_Constant	("$null");

	mov	edi, DWORD PTR __imp_?Stage_Constant@CBlender_Compile@@QAEXPBD@Z
	mov	ecx, esi
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	call	edi

; 53   : 		}
; 54   : 		C.StageEnd			();

	mov	ecx, esi
	mov	esi, DWORD PTR __imp_?StageEnd@CBlender_Compile@@QAEXXZ
	call	esi

; 55   : 
; 56   : 		// Stage1 - Base texture
; 57   : 		C.StageBegin		();

	mov	ecx, DWORD PTR _C$[esp+16]
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 58   : 		{
; 59   : 			C.StageSET_Address	(D3DTADDRESS_CLAMP);

	mov	ecx, DWORD PTR _C$[esp+16]
	push	3
	call	DWORD PTR __imp_?StageSET_Address@CBlender_Compile@@QAEXI@Z

; 60   : 			C.StageSET_Color	(D3DTA_CURRENT,	  D3DTOP_DOTPRODUCT3,	D3DTA_TFACTOR);

	mov	ecx, DWORD PTR _C$[esp+16]
	push	3
	push	24					; 00000018H
	push	1
	call	DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z

; 61   : 			C.StageSET_Alpha	(D3DTA_CURRENT,	  D3DTOP_DOTPRODUCT3,	D3DTA_TFACTOR);

	push	3
	push	24					; 00000018H
	push	1
	mov	ecx, DWORD PTR _C$[esp+28]
	call	DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z

; 62   : 			C.Stage_Texture		(oT_Name);

	mov	eax, DWORD PTR _this$1$[esp+20]
	mov	ecx, DWORD PTR _C$[esp+16]
	add	eax, 196				; 000000c4H
	push	2
	push	2
	push	2
	push	1
	push	eax
	call	ebp

; 63   : 			C.Stage_Matrix		(oT_xform,	0);

	mov	eax, DWORD PTR _this$1$[esp+20]
	mov	ebp, DWORD PTR _C$[esp+16]
	add	eax, 260				; 00000104H
	push	0
	push	eax
	mov	ecx, ebp
	call	ebx

; 64   : 			C.Stage_Constant	("$null");

	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, ebp
	call	edi

; 65   : 		}
; 66   : 		C.StageEnd			();

	mov	ecx, ebp
	call	esi

; 67   : 	}
; 68   : 	C.PassEnd			();

	mov	ecx, ebp
	call	DWORD PTR __imp_?PassEnd@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 69   : }

	pop	ecx
	ret	4
?Compile@CBlender_Screen_GRAY@@UAEXAAVCBlender_Compile@@@Z ENDP ; CBlender_Screen_GRAY::Compile
_TEXT	ENDS
END
