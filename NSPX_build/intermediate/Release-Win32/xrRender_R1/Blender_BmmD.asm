; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\blender_bmmd.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BI@DDOMDOBG@LEVEL?3?5Implicit?$CK?$CKdetail@ ; `string'
PUBLIC	??_C@_0BJ@KEGKNGAI@detail?2detail_grnd_grass@	; `string'
PUBLIC	??_C@_0BL@OIEFDNLP@detail?2detail_grnd_asphalt@	; `string'
PUBLIC	??_C@_0BJ@CADHLPDP@detail?2detail_grnd_earth@	; `string'
PUBLIC	??_C@_0BK@KBPALGEA@detail?2detail_grnd_yantar@	; `string'
PUBLIC	??_C@_0L@HLJGMHJK@Detail?5map@			; `string'
PUBLIC	??_C@_04FABLJDN@Name@				; `string'
PUBLIC	??_C@_09MKLAHOHG@Transform@			; `string'
PUBLIC	??_C@_04JJDEEOAG@R2?9R@				; `string'
PUBLIC	??_C@_04KOIBKIBC@R2?9G@				; `string'
PUBLIC	??_C@_04NDPGFMFH@R2?9B@				; `string'
PUBLIC	??_C@_04PINLAPJE@R2?9A@				; `string'
PUBLIC	??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@	; `string'
PUBLIC	??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@ ; `string'
PUBLIC	??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@ ; `string'
PUBLIC	??_C@_0BK@PIKCNJKB@xrPID_MATRIX?$DN?$DNxrPREAD?$CIfs?$CJ@ ; `string'
PUBLIC	??_C@_0CO@BDAKELHH@Not?5enought?5textures?5for?5shader@ ; `string'
PUBLIC	??_C@_0BH@CJFLALJA@CBlender_BmmD?3?3Compile@	; `string'
PUBLIC	??_C@_07HPBLOBFE@impl_dt@			; `string'
PUBLIC	??_C@_06GMJOKNLF@s_base@			; `string'
PUBLIC	??_C@_06LBGPDNGG@s_lmap@			; `string'
PUBLIC	??_C@_08HKJIABFJ@s_detail@			; `string'
PUBLIC	??_C@_09PNJHBAHM@add_point@			; `string'
PUBLIC	??_C@_0L@GGPGIJBN@impl_point@			; `string'
PUBLIC	??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@ ; `string'
PUBLIC	??_C@_05OCPJJFDB@s_att@				; `string'
PUBLIC	??_C@_08FJPLAIEP@add_spot@			; `string'
PUBLIC	??_C@_09FMKANJIP@impl_spot@			; `string'
PUBLIC	??_C@_0BM@EOCKFCCB@internal?2internal_light_att@ ; `string'
PUBLIC	??_C@_0CA@EOOCFOEF@internal?2internal_light_attclip@ ; `string'
PUBLIC	??_C@_06OOFNNAGB@impl_l@			; `string'
PUBLIC	??_R2CBlender_BmmD@@8				; CBlender_BmmD::`RTTI Base Class Array'
PUBLIC	??_R2IBlender@@8				; IBlender::`RTTI Base Class Array'
PUBLIC	??_R2CPropertyBase@@8				; CPropertyBase::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBlender_BmmD@@8			; CBlender_BmmD::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IBlender@@8			; IBlender::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CPropertyBase@@8			; CPropertyBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3IBlender@@8				; IBlender::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVIBlender@@@8				; IBlender `RTTI Type Descriptor'
PUBLIC	??_R3CPropertyBase@@8				; CPropertyBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCPropertyBase@@@8			; CPropertyBase `RTTI Type Descriptor'
PUBLIC	??_R3CBlender_BmmD@@8				; CBlender_BmmD::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCBlender_BmmD@@@8			; CBlender_BmmD `RTTI Type Descriptor'
PUBLIC	??_R4CBlender_BmmD@@6B@				; CBlender_BmmD::`RTTI Complete Object Locator'
PUBLIC	??_C@_0P@PLOPPKHB@xrPREAD_MARKER@		; `string'
PUBLIC	??_C@_0DB@CNPOFPKJ@I?3?2Vitalya?2mine?2NSProjectX?2xrEn@ ; `string'
PUBLIC	??_C@_0BM@KGILKBEF@xrPID_MARKER?5?$DN?$DN?5xrPREAD?$CIfs?$CJ@ ; `string'
PUBLIC	?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA ; `xrPREAD_MARKER'::`4'::ignore_always
PUBLIC	??_C@_05CAGGJGBB@$null@				; `string'
PUBLIC	??_7CBlender_BmmD@@6B@				; CBlender_BmmD::`vftable'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getName@IBlender@@UAEPBDXZ:PROC		; IBlender::getName
EXTRN	__imp_?getName@IBlender@@UAEPBDXZ:PROC
EXTRN	__imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z:PROC
EXTRN	__imp_?r_End@CBlender_Compile@@QAEXXZ:PROC
EXTRN	__imp_?r_Sampler@CBlender_Compile@@QAEIPBD0_NIIII@Z:PROC
EXTRN	__imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z:PROC
EXTRN	__imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z:PROC
EXTRN	__imp_?fatal@xrDebug@@QAAXPBDH00ZZ:PROC
EXTRN	__imp_?PassEnd@CBlender_Compile@@QAEXXZ:PROC
EXTRN	__imp_?StageEnd@CBlender_Compile@@QAEXXZ:PROC
EXTRN	__imp_?StageSET_TMC@CBlender_Compile@@QAEXPBD00H@Z:PROC
EXTRN	__imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z:PROC
EXTRN	__imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z:PROC
EXTRN	__imp_?StageBegin@CBlender_Compile@@QAEXXZ:PROC
EXTRN	__imp_?PassSET_LightFog@CBlender_Compile@@QAEXHH@Z:PROC
EXTRN	__imp_?PassSET_Blend_SET@CBlender_Compile@@QAEXHI@Z:PROC
EXTRN	__imp_?PassSET_ZB@CBlender_Compile@@QAEXHHH@Z:PROC
EXTRN	__imp_?PassBegin@CBlender_Compile@@QAEXXZ:PROC
EXTRN	__imp_?Compile@IBlender@@UAEXAAVCBlender_Compile@@@Z:PROC
EXTRN	__imp_?advance@IReader@@QAEXH@Z:PROC
EXTRN	__imp_?r@IReader@@QAEXPAXH@Z:PROC
EXTRN	__imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ:PROC
EXTRN	__imp_?skip_stringZ@IReader@@QAEXXZ:PROC
EXTRN	__imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z:PROC
EXTRN	__imp_?Debug@@3VxrDebug@@A:QWORD
EXTRN	__imp_?Load@IBlender@@UAEXAAVIReader@@G@Z:PROC
EXTRN	__imp_?w_u32@IWriter@@QAEXI@Z:PROC
EXTRN	__imp_?w_stringZ@IWriter@@QAEXPBD@Z:PROC
EXTRN	__imp_?Save@IBlender@@UAEXAAVIWriter@@@Z:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp_??1IBlender@@UAE@XZ:PROC
EXTRN	__imp_??0IBlender@@QAE@XZ:PROC
;	COMDAT ?ignore_always@?DL@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?DL@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_BmmD::Load'::`59'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?DE@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?DE@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_BmmD::Load'::`52'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CN@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?CN@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_BmmD::Load'::`45'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CG@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?CG@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_BmmD::Load'::`38'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BP@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BP@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_BmmD::Load'::`31'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BI@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BI@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_BmmD::Load'::`24'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?P@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?P@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_BmmD::Load'::`15'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?7??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?7??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_BmmD::Load'::`8'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA DB 01H DUP (?) ; `xrPREAD_MARKER'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ??_7CBlender_BmmD@@6B@
CONST	SEGMENT
??_7CBlender_BmmD@@6B@ DD FLAT:??_R4CBlender_BmmD@@6B@	; CBlender_BmmD::`vftable'
	DD	FLAT:?getName@IBlender@@UAEPBDXZ
	DD	FLAT:?getComment@CBlender_BmmD@@UAEPBDXZ
	DD	FLAT:?Save@CBlender_BmmD@@UAEXAAVIWriter@@@Z
	DD	FLAT:?Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z
	DD	FLAT:?canBeDetailed@CBlender_BmmD@@UAEHXZ
	DD	FLAT:?canBeLMAPped@CBlender_BmmD@@UAEHXZ
	DD	FLAT:?Compile@CBlender_BmmD@@UAEXAAVCBlender_Compile@@@Z
	DD	FLAT:??_ECBlender_BmmD@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_05CAGGJGBB@$null@
CONST	SEGMENT
??_C@_05CAGGJGBB@$null@ DB '$null', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KGILKBEF@xrPID_MARKER?5?$DN?$DN?5xrPREAD?$CIfs?$CJ@
CONST	SEGMENT
??_C@_0BM@KGILKBEF@xrPID_MARKER?5?$DN?$DN?5xrPREAD?$CIfs?$CJ@ DB 'xrPID_M'
	DB	'ARKER == xrPREAD(fs)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@CNPOFPKJ@I?3?2Vitalya?2mine?2NSProjectX?2xrEn@
CONST	SEGMENT
??_C@_0DB@CNPOFPKJ@I?3?2Vitalya?2mine?2NSProjectX?2xrEn@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\xrEngine\properties.h', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PLOPPKHB@xrPREAD_MARKER@
CONST	SEGMENT
??_C@_0P@PLOPPKHB@xrPREAD_MARKER@ DB 'xrPREAD_MARKER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R4CBlender_BmmD@@6B@
rdata$r	SEGMENT
??_R4CBlender_BmmD@@6B@ DD 00H				; CBlender_BmmD::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBlender_BmmD@@@8
	DD	FLAT:??_R3CBlender_BmmD@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBlender_BmmD@@@8
data$rs	SEGMENT
??_R0?AVCBlender_BmmD@@@8 DD FLAT:??_7type_info@@6B@	; CBlender_BmmD `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBlender_BmmD@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CBlender_BmmD@@8
rdata$r	SEGMENT
??_R3CBlender_BmmD@@8 DD 00H				; CBlender_BmmD::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBlender_BmmD@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPropertyBase@@@8
data$rs	SEGMENT
??_R0?AVCPropertyBase@@@8 DD FLAT:??_7type_info@@6B@	; CPropertyBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPropertyBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CPropertyBase@@8
rdata$r	SEGMENT
??_R3CPropertyBase@@8 DD 00H				; CPropertyBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CPropertyBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIBlender@@@8
data$rs	SEGMENT
??_R0?AVIBlender@@@8 DD FLAT:??_7type_info@@6B@		; IBlender `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIBlender@@', 00H
data$rs	ENDS
;	COMDAT ??_R3IBlender@@8
rdata$r	SEGMENT
??_R3IBlender@@8 DD 00H					; IBlender::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IBlender@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPropertyBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPropertyBase@@8 DD FLAT:??_R0?AVCPropertyBase@@@8 ; CPropertyBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPropertyBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IBlender@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IBlender@@8 DD FLAT:??_R0?AVIBlender@@@8	; IBlender::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IBlender@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBlender_BmmD@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBlender_BmmD@@8 DD FLAT:??_R0?AVCBlender_BmmD@@@8 ; CBlender_BmmD::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBlender_BmmD@@8
rdata$r	ENDS
;	COMDAT ??_R2CPropertyBase@@8
rdata$r	SEGMENT
??_R2CPropertyBase@@8 DD FLAT:??_R1A@?0A@EA@CPropertyBase@@8 ; CPropertyBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R2IBlender@@8
rdata$r	SEGMENT
??_R2IBlender@@8 DD FLAT:??_R1A@?0A@EA@IBlender@@8	; IBlender::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CPropertyBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CBlender_BmmD@@8
rdata$r	SEGMENT
??_R2CBlender_BmmD@@8 DD FLAT:??_R1A@?0A@EA@CBlender_BmmD@@8 ; CBlender_BmmD::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IBlender@@8
	DD	FLAT:??_R1A@?0A@EA@CPropertyBase@@8
rdata$r	ENDS
;	COMDAT ??_C@_06OOFNNAGB@impl_l@
CONST	SEGMENT
??_C@_06OOFNNAGB@impl_l@ DB 'impl_l', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@EOOCFOEF@internal?2internal_light_attclip@
CONST	SEGMENT
??_C@_0CA@EOOCFOEF@internal?2internal_light_attclip@ DB 'internal\interna'
	DB	'l_light_attclip', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EOCKFCCB@internal?2internal_light_att@
CONST	SEGMENT
??_C@_0BM@EOCKFCCB@internal?2internal_light_att@ DB 'internal\internal_li'
	DB	'ght_att', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09FMKANJIP@impl_spot@
CONST	SEGMENT
??_C@_09FMKANJIP@impl_spot@ DB 'impl_spot', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FJPLAIEP@add_spot@
CONST	SEGMENT
??_C@_08FJPLAIEP@add_spot@ DB 'add_spot', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OCPJJFDB@s_att@
CONST	SEGMENT
??_C@_05OCPJJFDB@s_att@ DB 's_att', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@
CONST	SEGMENT
??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@ DB 'internal\interna'
	DB	'l_light_attpoint', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GGPGIJBN@impl_point@
CONST	SEGMENT
??_C@_0L@GGPGIJBN@impl_point@ DB 'impl_point', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PNJHBAHM@add_point@
CONST	SEGMENT
??_C@_09PNJHBAHM@add_point@ DB 'add_point', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HKJIABFJ@s_detail@
CONST	SEGMENT
??_C@_08HKJIABFJ@s_detail@ DB 's_detail', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LBGPDNGG@s_lmap@
CONST	SEGMENT
??_C@_06LBGPDNGG@s_lmap@ DB 's_lmap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GMJOKNLF@s_base@
CONST	SEGMENT
??_C@_06GMJOKNLF@s_base@ DB 's_base', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HPBLOBFE@impl_dt@
CONST	SEGMENT
??_C@_07HPBLOBFE@impl_dt@ DB 'impl_dt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CJFLALJA@CBlender_BmmD?3?3Compile@
CONST	SEGMENT
??_C@_0BH@CJFLALJA@CBlender_BmmD?3?3Compile@ DB 'CBlender_BmmD::Compile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BDAKELHH@Not?5enought?5textures?5for?5shader@
CONST	SEGMENT
??_C@_0CO@BDAKELHH@Not?5enought?5textures?5for?5shader@ DB 'Not enought t'
	DB	'extures for shader, base tex: %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PIKCNJKB@xrPID_MATRIX?$DN?$DNxrPREAD?$CIfs?$CJ@
CONST	SEGMENT
??_C@_0BK@PIKCNJKB@xrPID_MATRIX?$DN?$DNxrPREAD?$CIfs?$CJ@ DB 'xrPID_MATRI'
	DB	'X==xrPREAD(fs)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@
CONST	SEGMENT
??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@ DB 'xrPID_TEXT'
	DB	'URE==xrPREAD(fs)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
CONST	SEGMENT
??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\layers\xrRender\Blender_BmmD.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@
CONST	SEGMENT
??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@ DB 'CBlender_BmmD::Load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04PINLAPJE@R2?9A@
CONST	SEGMENT
??_C@_04PINLAPJE@R2?9A@ DB 'R2-A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NDPGFMFH@R2?9B@
CONST	SEGMENT
??_C@_04NDPGFMFH@R2?9B@ DB 'R2-B', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KOIBKIBC@R2?9G@
CONST	SEGMENT
??_C@_04KOIBKIBC@R2?9G@ DB 'R2-G', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04JJDEEOAG@R2?9R@
CONST	SEGMENT
??_C@_04JJDEEOAG@R2?9R@ DB 'R2-R', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09MKLAHOHG@Transform@
CONST	SEGMENT
??_C@_09MKLAHOHG@Transform@ DB 'Transform', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FABLJDN@Name@
CONST	SEGMENT
??_C@_04FABLJDN@Name@ DB 'Name', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HLJGMHJK@Detail?5map@
CONST	SEGMENT
??_C@_0L@HLJGMHJK@Detail?5map@ DB 'Detail map', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KBPALGEA@detail?2detail_grnd_yantar@
CONST	SEGMENT
??_C@_0BK@KBPALGEA@detail?2detail_grnd_yantar@ DB 'detail\detail_grnd_yan'
	DB	'tar', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CADHLPDP@detail?2detail_grnd_earth@
CONST	SEGMENT
??_C@_0BJ@CADHLPDP@detail?2detail_grnd_earth@ DB 'detail\detail_grnd_eart'
	DB	'h', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OIEFDNLP@detail?2detail_grnd_asphalt@
CONST	SEGMENT
??_C@_0BL@OIEFDNLP@detail?2detail_grnd_asphalt@ DB 'detail\detail_grnd_as'
	DB	'phalt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KEGKNGAI@detail?2detail_grnd_grass@
CONST	SEGMENT
??_C@_0BJ@KEGKNGAI@detail?2detail_grnd_grass@ DB 'detail\detail_grnd_gras'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DDOMDOBG@LEVEL?3?5Implicit?$CK?$CKdetail@
CONST	SEGMENT
??_C@_0BI@DDOMDOBG@LEVEL?3?5Implicit?$CK?$CKdetail@ DB 'LEVEL: Implicit**'
	DB	'detail', 00H				; `string'
CONST	ENDS
PUBLIC	?xrPWRITE_MARKER@@YAXAAVIWriter@@PBD@Z		; xrPWRITE_MARKER
PUBLIC	?xrPWRITE@@YAXAAVIWriter@@IPBDPBXI@Z		; xrPWRITE
PUBLIC	?xrPREAD_MARKER@@YAXAAVIReader@@@Z		; xrPREAD_MARKER
PUBLIC	?xrPREAD@@YAIAAVIReader@@@Z			; xrPREAD
PUBLIC	??Dshared_str@@QBEPBDXZ				; shared_str::operator*
PUBLIC	??1shared_str@@QAE@XZ				; shared_str::~shared_str
PUBLIC	?_dec@shared_str@@IAEXXZ			; shared_str::_dec
PUBLIC	??0shared_str@@QAE@ABV0@@Z			; shared_str::shared_str
PUBLIC	?_set@shared_str@@QAEXABV1@@Z			; shared_str::_set
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<shared_str> > >
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEXH@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::_Verify_offset
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator+=
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAE@PAVshared_str@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEABVshared_str@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator*
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator+=
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAE@PAVshared_str@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >
PUBLIC	?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@2@XZ ; std::vector<shared_str,xalloc<shared_str> >::begin
PUBLIC	?size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QBEIXZ ; std::vector<shared_str,xalloc<shared_str> >::size
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEAAVshared_str@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator*
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator+
PUBLIC	?size@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QBEIXZ ; xr_vector<shared_str,xalloc<shared_str> >::size
PUBLIC	??A?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEAAVshared_str@@I@Z ; xr_vector<shared_str,xalloc<shared_str> >::operator[]
PUBLIC	?Compile@CBlender_BmmD@@UAEXAAVCBlender_Compile@@@Z ; CBlender_BmmD::Compile
PUBLIC	?Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z	; CBlender_BmmD::Load
PUBLIC	?Save@CBlender_BmmD@@UAEXAAVIWriter@@@Z		; CBlender_BmmD::Save
PUBLIC	??1CBlender_BmmD@@UAE@XZ			; CBlender_BmmD::~CBlender_BmmD
PUBLIC	??_GCBlender_BmmD@@UAEPAXI@Z			; CBlender_BmmD::`scalar deleting destructor'
PUBLIC	??0CBlender_BmmD@@QAE@XZ			; CBlender_BmmD::CBlender_BmmD
PUBLIC	?canBeLMAPped@CBlender_BmmD@@UAEHXZ		; CBlender_BmmD::canBeLMAPped
PUBLIC	?canBeDetailed@CBlender_BmmD@@UAEHXZ		; CBlender_BmmD::canBeDetailed
PUBLIC	?getComment@CBlender_BmmD@@UAEPBDXZ		; CBlender_BmmD::getComment
PUBLIC	__real@00000000
PUBLIC	__real@00800000
PUBLIC	__real@33d6bf95
PUBLIC	__real@34531c5e
PUBLIC	__real@3727c5ac
PUBLIC	__real@37b2ba28
PUBLIC	__real@38000100
PUBLIC	__real@38800100
PUBLIC	__real@38c9116d
PUBLIC	__real@38d1b717
PUBLIC	__real@3949116d
PUBLIC	__real@39c00180
PUBLIC	__real@39e38e39
PUBLIC	__real@39e87975
PUBLIC	__real@3a800000
PUBLIC	__real@3a83126f
PUBLIC	__real@3b000000
PUBLIC	__real@3b03126f
PUBLIC	__real@3b808081
PUBLIC	__real@3ba3d70a
PUBLIC	__real@3c0efa36
PUBLIC	__real@3c23d70a
PUBLIC	__real@3c8efa36
PUBLIC	__real@3ca3d70a
PUBLIC	__real@3d072b02
PUBLIC	__real@3d0ef241
PUBLIC	__real@3d4a4588
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3d888889
PUBLIC	__real@3daa0000
PUBLIC	__real@3daaaaab
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e22f983
PUBLIC	__real@3e2aaaab
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e800000
PUBLIC	__real@3e99999a
PUBLIC	__real@3eaa7efa
PUBLIC	__real@3eaaaaab
PUBLIC	__real@3eb2b8c3
PUBLIC	__real@3f000000
PUBLIC	__real@3f004000
PUBLIC	__real@3f040000
PUBLIC	__real@3f169696
PUBLIC	__real@3f19999a
PUBLIC	__real@3f20d97c
PUBLIC	__real@3f2aaaab
PUBLIC	__real@3f333333
PUBLIC	__real@3f400000
PUBLIC	__real@3f400c4b
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f59999a
PUBLIC	__real@3f666666
PUBLIC	__real@3f7d70a4
PUBLIC	__real@3f7fff58
PUBLIC	__real@3f800000
PUBLIC	__real@3f8ccccd
PUBLIC	__real@3f99999a
PUBLIC	__real@3fc00000
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3fefc00000000000
PUBLIC	__real@3ffeb852
PUBLIC	__real@40000000
PUBLIC	__real@40200000
PUBLIC	__real@40400000
PUBLIC	__real@40490fdb
PUBLIC	__real@40800000
PUBLIC	__real@40900000
PUBLIC	__real@40a00000
PUBLIC	__real@40c90fdb
PUBLIC	__real@40d55555
PUBLIC	__real@40e00000
PUBLIC	__real@41000000
PUBLIC	__real@41200000
PUBLIC	__real@41440000
PUBLIC	__real@417e0000
PUBLIC	__real@41800000
PUBLIC	__real@41880000
PUBLIC	__real@41f26c9b
PUBLIC	__real@42000000
PUBLIC	__real@42300000
PUBLIC	__real@42480000
PUBLIC	__real@427f0000
PUBLIC	__real@42800000
PUBLIC	__real@42b40000
PUBLIC	__real@42c00000
PUBLIC	__real@42c80000
PUBLIC	__real@42f00000
PUBLIC	__real@42ff0000
PUBLIC	__real@42ff8000
PUBLIC	__real@43160000
PUBLIC	__real@4347ffbe
PUBLIC	__real@43480000
PUBLIC	__real@434f0000
PUBLIC	__real@437f0000
PUBLIC	__real@437f8000
PUBLIC	__real@43800000
PUBLIC	__real@43960000
PUBLIC	__real@43b40000
PUBLIC	__real@43bf4000
PUBLIC	__real@43e38e3a
PUBLIC	__real@43fa0000
PUBLIC	__real@44160000
PUBLIC	__real@44800000
PUBLIC	__real@44fffe00
PUBLIC	__real@450d0400
PUBLIC	__real@451c4000
PUBLIC	__real@452aa955
PUBLIC	__real@45800000
PUBLIC	__real@45e38e3a
PUBLIC	__real@461c4000
PUBLIC	__real@46800000
PUBLIC	__real@46fffe00
PUBLIC	__real@4e800000
PUBLIC	__real@4f800000
PUBLIC	__real@7f7fffff
PUBLIC	__real@80000000
PUBLIC	__real@bf000000
PUBLIC	__real@bf169696
PUBLIC	__real@bf800000
PUBLIC	__real@bffeb852
PUBLIC	__real@c0000000
PUBLIC	__real@c347ffbe
PUBLIC	__real@c61c4000
PUBLIC	__real@ff7fffff
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??_ECBlender_BmmD@@UAEPAXI@Z:PROC		; CBlender_BmmD::`vector deleting destructor'
EXTRN	__CIasin:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___RTCastToVoid:PROC
EXTRN	___RTDynamicCast:PROC
EXTRN	__alloca_probe_16:PROC
EXTRN	__chkstk:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __real@ff7fffff
CONST	SEGMENT
__real@ff7fffff DD 0ff7fffffr			; -3.40282e+38
CONST	ENDS
;	COMDAT __real@c61c4000
CONST	SEGMENT
__real@c61c4000 DD 0c61c4000r			; -10000
CONST	ENDS
;	COMDAT __real@c347ffbe
CONST	SEGMENT
__real@c347ffbe DD 0c347ffber			; -199.999
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@bffeb852
CONST	SEGMENT
__real@bffeb852 DD 0bffeb852r			; -1.99
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bf169696
CONST	SEGMENT
__real@bf169696 DD 0bf169696r			; -0.588235
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@80000000
CONST	SEGMENT
__real@80000000 DD 080000000r			; -0
CONST	ENDS
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+09
CONST	ENDS
;	COMDAT __real@4e800000
CONST	SEGMENT
__real@4e800000 DD 04e800000r			; 1.07374e+09
CONST	ENDS
;	COMDAT __real@46fffe00
CONST	SEGMENT
__real@46fffe00 DD 046fffe00r			; 32767
CONST	ENDS
;	COMDAT __real@46800000
CONST	SEGMENT
__real@46800000 DD 046800000r			; 16384
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@45e38e3a
CONST	SEGMENT
__real@45e38e3a DD 045e38e3ar			; 7281.78
CONST	ENDS
;	COMDAT __real@45800000
CONST	SEGMENT
__real@45800000 DD 045800000r			; 4096
CONST	ENDS
;	COMDAT __real@452aa955
CONST	SEGMENT
__real@452aa955 DD 0452aa955r			; 2730.58
CONST	ENDS
;	COMDAT __real@451c4000
CONST	SEGMENT
__real@451c4000 DD 0451c4000r			; 2500
CONST	ENDS
;	COMDAT __real@450d0400
CONST	SEGMENT
__real@450d0400 DD 0450d0400r			; 2256.25
CONST	ENDS
;	COMDAT __real@44fffe00
CONST	SEGMENT
__real@44fffe00 DD 044fffe00r			; 2047.94
CONST	ENDS
;	COMDAT __real@44800000
CONST	SEGMENT
__real@44800000 DD 044800000r			; 1024
CONST	ENDS
;	COMDAT __real@44160000
CONST	SEGMENT
__real@44160000 DD 044160000r			; 600
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@43e38e3a
CONST	SEGMENT
__real@43e38e3a DD 043e38e3ar			; 455.111
CONST	ENDS
;	COMDAT __real@43bf4000
CONST	SEGMENT
__real@43bf4000 DD 043bf4000r			; 382.5
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@43960000
CONST	SEGMENT
__real@43960000 DD 043960000r			; 300
CONST	ENDS
;	COMDAT __real@43800000
CONST	SEGMENT
__real@43800000 DD 043800000r			; 256
CONST	ENDS
;	COMDAT __real@437f8000
CONST	SEGMENT
__real@437f8000 DD 0437f8000r			; 255.5
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@434f0000
CONST	SEGMENT
__real@434f0000 DD 0434f0000r			; 207
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@4347ffbe
CONST	SEGMENT
__real@4347ffbe DD 04347ffber			; 199.999
CONST	ENDS
;	COMDAT __real@43160000
CONST	SEGMENT
__real@43160000 DD 043160000r			; 150
CONST	ENDS
;	COMDAT __real@42ff8000
CONST	SEGMENT
__real@42ff8000 DD 042ff8000r			; 127.75
CONST	ENDS
;	COMDAT __real@42ff0000
CONST	SEGMENT
__real@42ff0000 DD 042ff0000r			; 127.5
CONST	ENDS
;	COMDAT __real@42f00000
CONST	SEGMENT
__real@42f00000 DD 042f00000r			; 120
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42c00000
CONST	SEGMENT
__real@42c00000 DD 042c00000r			; 96
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@427f0000
CONST	SEGMENT
__real@427f0000 DD 0427f0000r			; 63.75
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@42300000
CONST	SEGMENT
__real@42300000 DD 042300000r			; 44
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@41f26c9b
CONST	SEGMENT
__real@41f26c9b DD 041f26c9br			; 30.303
CONST	ENDS
;	COMDAT __real@41880000
CONST	SEGMENT
__real@41880000 DD 041880000r			; 17
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@417e0000
CONST	SEGMENT
__real@417e0000 DD 0417e0000r			; 15.875
CONST	ENDS
;	COMDAT __real@41440000
CONST	SEGMENT
__real@41440000 DD 041440000r			; 12.25
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40e00000
CONST	SEGMENT
__real@40e00000 DD 040e00000r			; 7
CONST	ENDS
;	COMDAT __real@40d55555
CONST	SEGMENT
__real@40d55555 DD 040d55555r			; 6.66667
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40900000
CONST	SEGMENT
__real@40900000 DD 040900000r			; 4.5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40200000
CONST	SEGMENT
__real@40200000 DD 040200000r			; 2.5
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ffeb852
CONST	SEGMENT
__real@3ffeb852 DD 03ffeb852r			; 1.99
CONST	ENDS
;	COMDAT __real@3fefc00000000000
CONST	SEGMENT
__real@3fefc00000000000 DQ 03fefc00000000000r	; 0.992188
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3f99999a
CONST	SEGMENT
__real@3f99999a DD 03f99999ar			; 1.2
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7fff58
CONST	SEGMENT
__real@3f7fff58 DD 03f7fff58r			; 0.99999
CONST	ENDS
;	COMDAT __real@3f7d70a4
CONST	SEGMENT
__real@3f7d70a4 DD 03f7d70a4r			; 0.99
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f59999a
CONST	SEGMENT
__real@3f59999a DD 03f59999ar			; 0.85
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f400c4b
CONST	SEGMENT
__real@3f400c4b DD 03f400c4br			; 0.750188
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f2aaaab
CONST	SEGMENT
__real@3f2aaaab DD 03f2aaaabr			; 0.666667
CONST	ENDS
;	COMDAT __real@3f20d97c
CONST	SEGMENT
__real@3f20d97c DD 03f20d97cr			; 0.628319
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3f169696
CONST	SEGMENT
__real@3f169696 DD 03f169696r			; 0.588235
CONST	ENDS
;	COMDAT __real@3f040000
CONST	SEGMENT
__real@3f040000 DD 03f040000r			; 0.515625
CONST	ENDS
;	COMDAT __real@3f004000
CONST	SEGMENT
__real@3f004000 DD 03f004000r			; 0.500977
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3eb2b8c3
CONST	SEGMENT
__real@3eb2b8c3 DD 03eb2b8c3r			; 0.349066
CONST	ENDS
;	COMDAT __real@3eaaaaab
CONST	SEGMENT
__real@3eaaaaab DD 03eaaaaabr			; 0.333333
CONST	ENDS
;	COMDAT __real@3eaa7efa
CONST	SEGMENT
__real@3eaa7efa DD 03eaa7efar			; 0.333
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3e2aaaab
CONST	SEGMENT
__real@3e2aaaab DD 03e2aaaabr			; 0.166667
CONST	ENDS
;	COMDAT __real@3e22f983
CONST	SEGMENT
__real@3e22f983 DD 03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3daaaaab
CONST	SEGMENT
__real@3daaaaab DD 03daaaaabr			; 0.0833333
CONST	ENDS
;	COMDAT __real@3daa0000
CONST	SEGMENT
__real@3daa0000 DD 03daa0000r			; 0.0830078
CONST	ENDS
;	COMDAT __real@3d888889
CONST	SEGMENT
__real@3d888889 DD 03d888889r			; 0.0666667
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3d4a4588
CONST	SEGMENT
__real@3d4a4588 DD 03d4a4588r			; 0.0493827
CONST	ENDS
;	COMDAT __real@3d0ef241
CONST	SEGMENT
__real@3d0ef241 DD 03d0ef241r			; 0.034899
CONST	ENDS
;	COMDAT __real@3d072b02
CONST	SEGMENT
__real@3d072b02 DD 03d072b02r			; 0.033
CONST	ENDS
;	COMDAT __real@3ca3d70a
CONST	SEGMENT
__real@3ca3d70a DD 03ca3d70ar			; 0.02
CONST	ENDS
;	COMDAT __real@3c8efa36
CONST	SEGMENT
__real@3c8efa36 DD 03c8efa36r			; 0.0174533
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@3c0efa36
CONST	SEGMENT
__real@3c0efa36 DD 03c0efa36r			; 0.00872665
CONST	ENDS
;	COMDAT __real@3ba3d70a
CONST	SEGMENT
__real@3ba3d70a DD 03ba3d70ar			; 0.005
CONST	ENDS
;	COMDAT __real@3b808081
CONST	SEGMENT
__real@3b808081 DD 03b808081r			; 0.00392157
CONST	ENDS
;	COMDAT __real@3b03126f
CONST	SEGMENT
__real@3b03126f DD 03b03126fr			; 0.002
CONST	ENDS
;	COMDAT __real@3b000000
CONST	SEGMENT
__real@3b000000 DD 03b000000r			; 0.00195312
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@3a800000
CONST	SEGMENT
__real@3a800000 DD 03a800000r			; 0.000976562
CONST	ENDS
;	COMDAT __real@39e87975
CONST	SEGMENT
__real@39e87975 DD 039e87975r			; 0.00044341
CONST	ENDS
;	COMDAT __real@39e38e39
CONST	SEGMENT
__real@39e38e39 DD 039e38e39r			; 0.000434028
CONST	ENDS
;	COMDAT __real@39c00180
CONST	SEGMENT
__real@39c00180 DD 039c00180r			; 0.000366222
CONST	ENDS
;	COMDAT __real@3949116d
CONST	SEGMENT
__real@3949116d DD 03949116dr			; 0.000191753
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@38c9116d
CONST	SEGMENT
__real@38c9116d DD 038c9116dr			; 9.58767e-05
CONST	ENDS
;	COMDAT __real@38800100
CONST	SEGMENT
__real@38800100 DD 038800100r			; 6.1037e-05
CONST	ENDS
;	COMDAT __real@38000100
CONST	SEGMENT
__real@38000100 DD 038000100r			; 3.05185e-05
CONST	ENDS
;	COMDAT __real@37b2ba28
CONST	SEGMENT
__real@37b2ba28 DD 037b2ba28r			; 2.13059e-05
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-05
CONST	ENDS
;	COMDAT __real@34531c5e
CONST	SEGMENT
__real@34531c5e DD 034531c5er			; 1.96612e-07
CONST	ENDS
;	COMDAT __real@33d6bf95
CONST	SEGMENT
__real@33d6bf95 DD 033d6bf95r			; 1e-07
CONST	ENDS
;	COMDAT __real@00800000
CONST	SEGMENT
__real@00800000 DD 000800000r			; 1.17549e-38
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\blender_BmmD.h
;	COMDAT ?getComment@CBlender_BmmD@@UAEPBDXZ
_TEXT	SEGMENT
?getComment@CBlender_BmmD@@UAEPBDXZ PROC		; CBlender_BmmD::getComment, COMDAT
; _this$ = ecx

; 19   : 	virtual		LPCSTR		getComment()	{ return "LEVEL: Implicit**detail";	}

	mov	eax, OFFSET ??_C@_0BI@DDOMDOBG@LEVEL?3?5Implicit?$CK?$CKdetail@
	ret	0
?getComment@CBlender_BmmD@@UAEPBDXZ ENDP		; CBlender_BmmD::getComment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\blender_BmmD.h
;	COMDAT ?canBeDetailed@CBlender_BmmD@@UAEHXZ
_TEXT	SEGMENT
?canBeDetailed@CBlender_BmmD@@UAEHXZ PROC		; CBlender_BmmD::canBeDetailed, COMDAT
; _this$ = ecx

; 20   : 	virtual		BOOL		canBeDetailed()	{ return TRUE; }

	mov	eax, 1
	ret	0
?canBeDetailed@CBlender_BmmD@@UAEHXZ ENDP		; CBlender_BmmD::canBeDetailed
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\blender_BmmD.h
;	COMDAT ?canBeLMAPped@CBlender_BmmD@@UAEHXZ
_TEXT	SEGMENT
?canBeLMAPped@CBlender_BmmD@@UAEHXZ PROC		; CBlender_BmmD::canBeLMAPped, COMDAT
; _this$ = ecx

; 21   : 	virtual		BOOL		canBeLMAPped()	{ return TRUE; }

	mov	eax, 1
	ret	0
?canBeLMAPped@CBlender_BmmD@@UAEHXZ ENDP		; CBlender_BmmD::canBeLMAPped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
_TEXT	SEGMENT
??0CBlender_BmmD@@QAE@XZ PROC				; CBlender_BmmD::CBlender_BmmD
; _this$ = ecx

; 15   : {

	push	ebx
	push	esi
	push	edi
	mov	ebx, ecx
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [ebx], OFFSET ??_7CBlender_BmmD@@6B@

; 16   : 	description.CLS		= B_BmmD;
; 17   : 	strcpy				(oT2_Name,	"$null");
; 18   : 	strcpy				(oT2_xform,	"$null");
; 19   : 	description.version	= 3;
; 20   : 	strcpy				(oR_Name,	"detail\\detail_grnd_grass");	//"$null");

	lea	edi, DWORD PTR [ebx+452]
	mov	DWORD PTR [ebx+4], 1869374496		; 6f6c6420H
	mov	ecx, 6
	mov	DWORD PTR [ebx+8], 1114467652		; 426d6d44H
	mov	esi, OFFSET ??_C@_0BJ@KEGKNGAI@detail?2detail_grnd_grass@
	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [ebx+324], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [ebx+328], ax
	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [ebx+388], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [ebx+392], ax
	mov	eax, 3
	mov	WORD PTR [ebx+176], ax

; 21   : 	strcpy				(oG_Name,	"detail\\detail_grnd_asphalt");	//"$null");
; 22   : 	strcpy				(oB_Name,	"detail\\detail_grnd_earth");	//"$null");
; 23   : 	strcpy				(oA_Name,	"detail\\detail_grnd_yantar");	//"$null");
; 24   : }

	mov	eax, ebx
	rep movsd
	mov	ecx, 6
	movsb
	lea	edi, DWORD PTR [ebx+516]
	mov	esi, OFFSET ??_C@_0BL@OIEFDNLP@detail?2detail_grnd_asphalt@
	rep movsd
	mov	ecx, 6
	movsw
	movsb
	lea	edi, DWORD PTR [ebx+580]
	mov	esi, OFFSET ??_C@_0BJ@CADHLPDP@detail?2detail_grnd_earth@
	rep movsd
	mov	ecx, 6
	movsb
	lea	edi, DWORD PTR [ebx+644]
	mov	esi, OFFSET ??_C@_0BK@KBPALGEA@detail?2detail_grnd_yantar@
	rep movsd
	movsw
	pop	edi
	pop	esi
	pop	ebx
	ret	0
??0CBlender_BmmD@@QAE@XZ ENDP				; CBlender_BmmD::CBlender_BmmD
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
;	COMDAT ??_GCBlender_BmmD@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBlender_BmmD@@UAEPAXI@Z PROC			; CBlender_BmmD::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 27   : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_BmmD@@6B@

; 28   : }

	call	DWORD PTR __imp_??1IBlender@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	708					; 000002c4H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCBlender_BmmD@@UAEPAXI@Z ENDP			; CBlender_BmmD::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
_TEXT	SEGMENT
??1CBlender_BmmD@@UAE@XZ PROC				; CBlender_BmmD::~CBlender_BmmD
; _this$ = ecx

; 27   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CBlender_BmmD@@6B@

; 28   : }

	jmp	DWORD PTR __imp_??1IBlender@@UAE@XZ
??1CBlender_BmmD@@UAE@XZ ENDP				; CBlender_BmmD::~CBlender_BmmD
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
?Save@CBlender_BmmD@@UAEXAAVIWriter@@@Z PROC		; CBlender_BmmD::Save
; _this$ = ecx

; 31   : {

	push	ebx
	push	esi

; 32   : 	IBlender::Save	(fs);

	mov	esi, DWORD PTR _fs$[esp+4]
	push	edi
	push	esi
	mov	edi, ecx
	call	DWORD PTR __imp_?Save@IBlender@@UAEXAAVIWriter@@@Z
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	push	0
	mov	ecx, esi
	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_0L@HLJGMHJK@Detail?5map@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 101  : 	fs.w_u32(ID);

	push	3
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 34   : 	xrPWRITE_PROP	(fs,"Name",				xrPID_TEXTURE,	oT2_Name);

	lea	ebx, DWORD PTR [edi+324]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_04FABLJDN@Name@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN9@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	64					; 00000040H
	push	ebx
	call	DWORD PTR [eax+12]
$LN9@Save:

; 101  : 	fs.w_u32(ID);

	push	1
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 35   : 	xrPWRITE_PROP	(fs,"Transform",		xrPID_MATRIX,	oT2_xform);

	lea	ebx, DWORD PTR [edi+388]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_09MKLAHOHG@Transform@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN12@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	64					; 00000040H
	push	ebx
	call	DWORD PTR [eax+12]
$LN12@Save:

; 101  : 	fs.w_u32(ID);

	push	3
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 36   : 	xrPWRITE_PROP	(fs,"R2-R",				xrPID_TEXTURE,	oR_Name);

	lea	ebx, DWORD PTR [edi+452]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_04JJDEEOAG@R2?9R@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN15@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	64					; 00000040H
	push	ebx
	call	DWORD PTR [eax+12]
$LN15@Save:

; 101  : 	fs.w_u32(ID);

	push	3
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 37   : 	xrPWRITE_PROP	(fs,"R2-G",				xrPID_TEXTURE,	oG_Name);

	lea	ebx, DWORD PTR [edi+516]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_04KOIBKIBC@R2?9G@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN18@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	64					; 00000040H
	push	ebx
	call	DWORD PTR [eax+12]
$LN18@Save:

; 101  : 	fs.w_u32(ID);

	push	3
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 38   : 	xrPWRITE_PROP	(fs,"R2-B",				xrPID_TEXTURE,	oB_Name);

	lea	ebx, DWORD PTR [edi+580]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_04NDPGFMFH@R2?9B@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN21@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	64					; 00000040H
	push	ebx
	call	DWORD PTR [eax+12]
$LN21@Save:

; 101  : 	fs.w_u32(ID);

	push	3
	mov	ecx, esi
	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_04PINLAPJE@R2?9A@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 39   : 	xrPWRITE_PROP	(fs,"R2-A",				xrPID_TEXTURE,	oA_Name);

	add	edi, 644				; 00000284H
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 103  : 	if (data && size)	fs.w(data, size);

	je	SHORT $LN24@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	64					; 00000040H
	push	edi
	call	DWORD PTR [eax+12]
$LN24@Save:
	pop	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 40   : }

	pop	esi
	pop	ebx
	ret	4
?Save@CBlender_BmmD@@UAEXAAVIWriter@@@Z ENDP		; CBlender_BmmD::Save
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
_version$ = 12						; size = 2
?Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z PROC		; CBlender_BmmD::Load
; _this$ = ecx

; 43   : {

	push	ebx
	push	ebp
	push	esi

; 44   : 	IBlender::Load	(fs,version);

	mov	esi, DWORD PTR _version$[esp+8]
	mov	ebx, ecx
	push	edi
	mov	edi, DWORD PTR _fs$[esp+12]
	push	esi
	push	edi
	call	DWORD PTR __imp_?Load@IBlender@@UAEXAAVIReader@@G@Z

; 45   : 	if (version<3)	{

	mov	ebp, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	cmp	si, 3
	jae	$LN104@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 124  : 	R_ASSERT(xrPID_MARKER == xrPREAD(fs));

	cmp	BYTE PTR ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA, 0 ; `xrPREAD_MARKER'::`4'::ignore_always
	jne	SHORT $LN70@Load

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ

; 124  : 	R_ASSERT(xrPID_MARKER == xrPREAD(fs));

	test	esi, esi
	je	SHORT $LN70@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA ; `xrPREAD_MARKER'::`4'::ignore_always
	push	OFFSET ??_C@_0P@PLOPPKHB@xrPREAD_MARKER@
	push	124					; 0000007cH
	push	OFFSET ??_C@_0DB@CNPOFPKJ@I?3?2Vitalya?2mine?2NSProjectX?2xrEn@
	push	OFFSET ??_C@_0BM@KGILKBEF@xrPID_MARKER?5?$DN?$DN?5xrPREAD?$CIfs?$CJ@
	call	ebp
$LN70@Load:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 47   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oT2_Name);

	cmp	BYTE PTR ?ignore_always@?7??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN2@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 47   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oT2_Name);

	cmp	esi, 3
	je	SHORT $LN2@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?7??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@
	push	47					; 0000002fH
	push	OFFSET ??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebp
$LN2@Load:
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebx+324]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 48   : 		xrPREAD_PROP	(fs,xrPID_MATRIX,	oT2_xform);

	cmp	BYTE PTR ?ignore_always@?P@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN7@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 48   : 		xrPREAD_PROP	(fs,xrPID_MATRIX,	oT2_xform);

	cmp	esi, 1
	je	SHORT $LN7@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?P@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@
	push	48					; 00000030H
	push	OFFSET ??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BK@PIKCNJKB@xrPID_MATRIX?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebp
$LN7@Load:
	lea	eax, DWORD PTR [ebx+388]

; 57   : 	}
; 58   : }

	mov	ecx, edi
	push	64					; 00000040H
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	8
$LN104@Load:
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 124  : 	R_ASSERT(xrPID_MARKER == xrPREAD(fs));

	cmp	BYTE PTR ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA, 0 ; `xrPREAD_MARKER'::`4'::ignore_always
	jne	SHORT $LN102@Load

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ

; 124  : 	R_ASSERT(xrPID_MARKER == xrPREAD(fs));

	test	esi, esi
	je	SHORT $LN102@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA ; `xrPREAD_MARKER'::`4'::ignore_always
	push	OFFSET ??_C@_0P@PLOPPKHB@xrPREAD_MARKER@
	push	124					; 0000007cH
	push	OFFSET ??_C@_0DB@CNPOFPKJ@I?3?2Vitalya?2mine?2NSProjectX?2xrEn@
	push	OFFSET ??_C@_0BM@KGILKBEF@xrPID_MARKER?5?$DN?$DN?5xrPREAD?$CIfs?$CJ@
	call	ebp
$LN102@Load:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 51   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oT2_Name);

	cmp	BYTE PTR ?ignore_always@?BI@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN12@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 51   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oT2_Name);

	cmp	esi, 3
	je	SHORT $LN12@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BI@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@
	push	51					; 00000033H
	push	OFFSET ??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebp
$LN12@Load:
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebx+324]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 52   : 		xrPREAD_PROP	(fs,xrPID_MATRIX,	oT2_xform);

	cmp	BYTE PTR ?ignore_always@?BP@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN17@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 52   : 		xrPREAD_PROP	(fs,xrPID_MATRIX,	oT2_xform);

	cmp	esi, 1
	je	SHORT $LN17@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BP@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@
	push	52					; 00000034H
	push	OFFSET ??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BK@PIKCNJKB@xrPID_MATRIX?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebp
$LN17@Load:
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebx+388]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 53   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oR_Name);

	cmp	BYTE PTR ?ignore_always@?CG@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN22@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 53   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oR_Name);

	cmp	esi, 3
	je	SHORT $LN22@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?CG@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@
	push	53					; 00000035H
	push	OFFSET ??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebp
$LN22@Load:
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebx+452]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 54   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oG_Name);

	cmp	BYTE PTR ?ignore_always@?CN@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN27@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 54   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oG_Name);

	cmp	esi, 3
	je	SHORT $LN27@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?CN@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@
	push	54					; 00000036H
	push	OFFSET ??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebp
$LN27@Load:
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebx+516]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 55   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oB_Name);

	cmp	BYTE PTR ?ignore_always@?DE@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN32@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 55   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oB_Name);

	cmp	esi, 3
	je	SHORT $LN32@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DE@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@
	push	55					; 00000037H
	push	OFFSET ??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebp
$LN32@Load:
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebx+580]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 56   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oA_Name);

	cmp	BYTE PTR ?ignore_always@?DL@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN37@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 56   : 		xrPREAD_PROP	(fs,xrPID_TEXTURE,	oA_Name);

	cmp	esi, 3
	je	SHORT $LN37@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DL@??Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BE@NHPANJIB@CBlender_BmmD?3?3Load@
	push	56					; 00000038H
	push	OFFSET ??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebp
$LN37@Load:
	lea	eax, DWORD PTR [ebx+644]

; 57   : 	}
; 58   : }

	mov	ecx, edi
	push	64					; 00000040H
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	8
?Load@CBlender_BmmD@@UAEXAAVIReader@@G@Z ENDP		; CBlender_BmmD::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_C$ = 8							; size = 4
?Compile@CBlender_BmmD@@UAEXAAVCBlender_Compile@@@Z PROC ; CBlender_BmmD::Compile
; _this$ = ecx

; 65   : {

	push	ecx
	push	ebp
	push	esi
	push	edi

; 66   : 	IBlender::Compile		(C);

	mov	edi, DWORD PTR _C$[esp+12]
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$1$[esp+20], esi
	call	DWORD PTR __imp_?Compile@IBlender@@UAEXAAVCBlender_Compile@@@Z

; 67   : 	if (C.bEditor)	{

	cmp	DWORD PTR [edi+44], 0
	je	$LN4@Compile

; 68   : 		C.PassBegin		();

	mov	ecx, edi
	call	DWORD PTR __imp_?PassBegin@CBlender_Compile@@QAEXXZ

; 69   : 		{
; 70   : 			C.PassSET_ZB		(TRUE,TRUE);

	push	0
	push	1
	push	1
	mov	ecx, edi
	call	DWORD PTR __imp_?PassSET_ZB@CBlender_Compile@@QAEXHHH@Z

; 71   : 			C.PassSET_Blend_SET	();

	push	0
	push	0
	mov	ecx, edi
	call	DWORD PTR __imp_?PassSET_Blend_SET@CBlender_Compile@@QAEXHI@Z

; 72   : 			C.PassSET_LightFog	(TRUE,TRUE);

	push	1
	push	1
	mov	ecx, edi
	call	DWORD PTR __imp_?PassSET_LightFog@CBlender_Compile@@QAEXHH@Z

; 73   : 			
; 74   : 			// Stage1 - Base texture
; 75   : 			C.StageBegin		();

	mov	ecx, edi
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 76   : 			C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_MODULATE,		D3DTA_DIFFUSE);   

	mov	ebp, DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z
	mov	ecx, edi
	push	0
	push	4
	push	2
	call	ebp

; 77   : 			C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_MODULATE,		D3DTA_DIFFUSE);

	push	0
	push	4
	push	2
	mov	ecx, edi
	call	DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z

; 78   : 			C.StageSET_TMC		(oT_Name,oT_xform,"$null",0);

	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	lea	eax, DWORD PTR [esi+260]
	mov	ecx, edi
	mov	edi, DWORD PTR __imp_?StageSET_TMC@CBlender_Compile@@QAEXPBD00H@Z
	push	eax
	lea	eax, DWORD PTR [esi+196]
	push	eax
	call	edi

; 79   : 			C.StageEnd			();

	mov	ecx, DWORD PTR _C$[esp+12]
	mov	esi, DWORD PTR __imp_?StageEnd@CBlender_Compile@@QAEXXZ
	call	esi

; 80   : 			
; 81   : 			// Stage2 - Second texture
; 82   : 			C.StageBegin		();

	mov	ecx, DWORD PTR _C$[esp+12]
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 83   : 			C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_MODULATE2X,	D3DTA_CURRENT);

	mov	ecx, DWORD PTR _C$[esp+12]
	push	1
	push	5
	push	2
	call	ebp

; 84   : 			C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG2,	D3DTA_CURRENT);

	mov	ebp, DWORD PTR _C$[esp+12]
	mov	ecx, ebp
	push	1
	push	3
	push	2
	call	DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z

; 85   : 			C.StageSET_TMC		(oT2_Name,oT2_xform,"$null",0);

	mov	ecx, DWORD PTR _this$1$[esp+16]
	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	lea	eax, DWORD PTR [ecx+388]
	push	eax
	lea	eax, DWORD PTR [ecx+324]
	mov	ecx, ebp
	push	eax
	call	edi

; 86   : 			C.StageEnd			();

	mov	ecx, ebp
	call	esi

; 87   : 		}
; 88   : 		C.PassEnd			();

	mov	ecx, ebp
	call	DWORD PTR __imp_?PassEnd@CBlender_Compile@@QAEXXZ

; 125  : 			C.r_End			();
; 126  : 			break;
; 127  : 		}
; 128  : 	}
; 129  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ecx
	ret	4
$LN4@Compile:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	sub	eax, ecx
	sar	eax, 2
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 90   : 		if (C.L_textures.size()<2)	Debug.fatal	(DEBUG_INFO,"Not enought textures for shader, base tex: %s",*C.L_textures[0]);

	cmp	eax, 2
	jae	SHORT $LN6@Compile
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 65   : 	str_c				operator*	() const						{	return p_?p_->value:0;							}

	mov	ecx, DWORD PTR [ecx]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 90   : 		if (C.L_textures.size()<2)	Debug.fatal	(DEBUG_INFO,"Not enought textures for shader, base tex: %s",*C.L_textures[0]);

	lea	eax, DWORD PTR [ecx+12]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, eax
	push	ecx
	push	OFFSET ??_C@_0CO@BDAKELHH@Not?5enought?5textures?5for?5shader@
	push	OFFSET ??_C@_0BH@CJFLALJA@CBlender_BmmD?3?3Compile@
	push	90					; 0000005aH
	push	OFFSET ??_C@_0DM@LEPKPNAE@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	DWORD PTR __imp_?Debug@@3VxrDebug@@A
	call	DWORD PTR __imp_?fatal@xrDebug@@QAAXPBDH00ZZ
	add	esp, 24					; 00000018H
$LN6@Compile:

; 91   : 		switch (C.iElement)

	mov	eax, DWORD PTR [edi+60]
	cmp	eax, 4
	ja	$LN2@Compile
	jmp	DWORD PTR $LN174@Compile[eax*4]
$LN7@Compile:

; 125  : 			C.r_End			();
; 126  : 			break;
; 127  : 		}
; 128  : 	}
; 129  : }

	push	0
	push	0
	push	1
	push	2
	push	0
	push	1
	push	1
	push	1
	push	OFFSET ??_C@_07HPBLOBFE@impl_dt@
	push	OFFSET ??_C@_07HPBLOBFE@impl_dt@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z
	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [edi]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z
	mov	eax, DWORD PTR [edi]
	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	add	eax, 4
	mov	ecx, esp
	push	eax
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z
	push	2
	push	2
	push	2
	push	1
	push	0
	lea	eax, DWORD PTR [esi+324]
	mov	ecx, edi
	push	eax
	push	OFFSET ??_C@_08HKJIABFJ@s_detail@
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBD0_NIIII@Z
	mov	ecx, edi
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ecx
	ret	4
$LN9@Compile:

; 92   : 		{
; 93   : 		case SE_R1_NORMAL_HQ:	
; 94   : 			C.r_Pass		("impl_dt",	"impl_dt",TRUE);
; 95   : 			C.r_Sampler		("s_base",	C.L_textures[0]);
; 96   : 			C.r_Sampler		("s_lmap",	C.L_textures[1]);
; 97   : 			C.r_Sampler		("s_detail",oT2_Name);
; 98   : 			C.r_End			();
; 99   : 			break;
; 100  : 		case SE_R1_NORMAL_LQ:
; 101  : 			C.r_Pass		("impl_dt",	"impl_dt",TRUE);
; 102  : 			C.r_Sampler		("s_base",	C.L_textures[0]);
; 103  : 			C.r_Sampler		("s_lmap",	C.L_textures[1]);
; 104  : 			C.r_Sampler		("s_detail",oT2_Name);
; 105  : 			C.r_End			();
; 106  : 			break;
; 107  : 		case SE_R1_LPOINT:
; 108  : 			C.r_Pass		("impl_point","add_point",FALSE,TRUE,FALSE,TRUE,D3DBLEND_ONE,D3DBLEND_ONE,TRUE);

	push	0
	push	1
	push	2
	push	2
	push	1
	push	0
	push	1
	push	0
	push	OFFSET ??_C@_09PNJHBAHM@add_point@
	push	OFFSET ??_C@_0L@GGPGIJBN@impl_point@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z

; 109  : 			C.r_Sampler		("s_base",	C.L_textures[0]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [edi]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 110  : 			C.r_Sampler_clf	("s_lmap",	TEX_POINT_ATT		);

	mov	esi, DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z
	mov	ecx, edi
	push	0
	push	OFFSET ??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	call	esi

; 111  : 			C.r_Sampler_clf	("s_att",	TEX_POINT_ATT		);

	push	0
	push	OFFSET ??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@
	push	OFFSET ??_C@_05OCPJJFDB@s_att@
	mov	ecx, edi
	call	esi

; 125  : 			C.r_End			();
; 126  : 			break;
; 127  : 		}
; 128  : 	}
; 129  : }

	mov	ecx, edi
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ecx
	ret	4
$LN10@Compile:

; 112  : 			C.r_End			();
; 113  : 			break;
; 114  : 		case SE_R1_LSPOT:
; 115  : 			C.r_Pass		("impl_spot","add_spot",FALSE,TRUE,FALSE,TRUE,D3DBLEND_ONE,D3DBLEND_ONE,TRUE);

	push	0
	push	1
	push	2
	push	2
	push	1
	push	0
	push	1
	push	0
	push	OFFSET ??_C@_08FJPLAIEP@add_spot@
	push	OFFSET ??_C@_09FMKANJIP@impl_spot@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z

; 116  : 			C.r_Sampler		("s_base",	C.L_textures[0]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [edi]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 117  : 			C.r_Sampler_clf	("s_lmap",	"internal\\internal_light_att",		true);

	mov	esi, DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z
	mov	ecx, edi
	push	1
	push	OFFSET ??_C@_0BM@EOCKFCCB@internal?2internal_light_att@
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	call	esi

; 118  : 			C.r_Sampler_clf	("s_att",	TEX_SPOT_ATT		);

	push	0
	push	OFFSET ??_C@_0CA@EOOCFOEF@internal?2internal_light_attclip@
	push	OFFSET ??_C@_05OCPJJFDB@s_att@
	mov	ecx, edi
	call	esi

; 125  : 			C.r_End			();
; 126  : 			break;
; 127  : 		}
; 128  : 	}
; 129  : }

	mov	ecx, edi
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ecx
	ret	4
$LN11@Compile:

; 119  : 			C.r_End			();
; 120  : 			break;
; 121  : 		case SE_R1_LMODELS:
; 122  : 			C.r_Pass		("impl_l","impl_l",FALSE);

	push	0
	push	0
	push	1
	push	2
	push	0
	push	1
	push	1
	push	0
	push	OFFSET ??_C@_06OOFNNAGB@impl_l@
	push	OFFSET ??_C@_06OOFNNAGB@impl_l@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z

; 123  : 			C.r_Sampler		("s_base",C.L_textures[0]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [edi]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR [edi]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 124  : 			C.r_Sampler		("s_lmap",C.L_textures[1]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	add	eax, 4
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 124  : 			C.r_Sampler		("s_lmap",C.L_textures[1]);

	mov	ecx, esp
	push	eax
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 125  : 			C.r_End			();
; 126  : 			break;
; 127  : 		}
; 128  : 	}
; 129  : }

	mov	ecx, edi
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
$LN2@Compile:
	pop	edi
	pop	esi
	pop	ebp
	pop	ecx
	ret	4
$LN174@Compile:
	DD	$LN7@Compile
	DD	$LN7@Compile
	DD	$LN9@Compile
	DD	$LN10@Compile
	DD	$LN11@Compile
?Compile@CBlender_BmmD@@UAEXAAVCBlender_Compile@@@Z ENDP ; CBlender_BmmD::Compile
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ??A?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEAAVshared_str@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEAAVshared_str@@I@Z PROC ; xr_vector<shared_str,xalloc<shared_str> >::operator[], COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [ecx+eax*4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 138  : 	reference operator[]		(size_type _Pos)					{ {VERIFY(_Pos<size());} return (*(begin() + _Pos)); }

	ret	4
??A?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEAAVshared_str@@I@Z ENDP ; xr_vector<shared_str,xalloc<shared_str> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?size@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QBEIXZ
_TEXT	SEGMENT
?size@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QBEIXZ PROC ; xr_vector<shared_str,xalloc<shared_str> >::size, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 125  : 	u32		size				() const							{ return (u32)inherited::size();} 

	ret	0
?size@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QBEIXZ ENDP ; xr_vector<shared_str,xalloc<shared_str> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator+, COMDAT
; _this$ = ecx

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	lea	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 303  :         _Vector_iterator _Tmp = *this;
; 304  :         _Tmp += _Off; // TRANSITION, LLVM-49342
; 305  :         return _Tmp;
; 306  :     }

	ret	8
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator+
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEAAVshared_str@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEAAVshared_str@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator*, COMDAT
; _this$ = ecx

; 261  :         return const_cast<reference>(_Mybase::operator*());

	mov	eax, DWORD PTR [ecx]

; 262  :     }

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEAAVshared_str@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QBEIXZ PROC ; std::vector<shared_str,xalloc<shared_str> >::size, COMDAT
; _this$ = ecx

; 1535 :         auto& _My_data = _Mypair._Myval2;
; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1537 :     }

	ret	0
?size@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QBEIXZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@2@XZ PROC ; std::vector<shared_str,xalloc<shared_str> >::begin, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1462 :         auto& _My_data = _Mypair._Myval2;
; 1463 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));
; 1464 :     }

	ret	4
?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@2@XZ ENDP ; std::vector<shared_str,xalloc<shared_str> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAE@PAVshared_str@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
___param0$ = 8						; size = 4
___param1$dead$ = 12					; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAE@PAVshared_str@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	eax, DWORD PTR ___param0$[esp-4]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAE@PAVshared_str@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator+=, COMDAT
; _this$ = ecx

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	shl	eax, 2
	add	DWORD PTR [ecx], eax

; 298  :         _Mybase::operator+=(_Off);
; 299  :         return *this;

	mov	eax, ecx

; 300  :     }

	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEABVshared_str@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEABVshared_str@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator*, COMDAT
; _this$ = ecx

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());
; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");
; 49   :         _STL_VERIFY(
; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	eax, DWORD PTR [ecx]

; 54   :     }

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEABVshared_str@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAE@PAVshared_str@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$dead$ = 12					; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAE@PAVshared_str@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	eax, DWORD PTR __Parg$[esp-4]
	mov	DWORD PTR [ecx], eax

; 42   :         this->_Adopt(_Pvector);
; 43   :     }

	mov	eax, ecx
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAE@PAVshared_str@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator+=, COMDAT
; _this$ = ecx

; 118  :         _Verify_offset(_Off);
; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	shl	eax, 2
	add	DWORD PTR [ecx], eax

; 120  :         return *this;

	mov	eax, ecx

; 121  :     }

	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEXH@Z
_TEXT	SEGMENT
__Off$dead$ = 8						; size = 4
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEXH@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::_Verify_offset, COMDAT
; _this$dead$ = ecx

; 102  : #if _ITERATOR_DEBUG_LEVEL == 0
; 103  :         (void) _Off;
; 104  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 105  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());
; 106  :         _STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");
; 107  :         if (_Off < 0) {
; 108  :             _STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");
; 109  :         }
; 110  : 
; 111  :         if (_Off > 0) {
; 112  :             _STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");
; 113  :         }
; 114  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 115  :     }

	ret	4
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@QBEXH@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<shared_str> > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
??$addressof@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<shared_str> > >, COMDAT
; __Val$ = ecx

; 253  :     return __builtin_addressof(_Val);

	mov	eax, ecx

; 254  : }

	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Vshared_str@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<shared_str> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$dead$ = ecx

; 989  :     _CONSTEXPR20_CONTAINER void _Adopt(const void*) noexcept {}

	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ?_set@shared_str@@QAEXABV1@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
?_set@shared_str@@QAEXABV1@@Z PROC			; shared_str::_set, COMDAT
; _this$ = ecx

; 53   : 	void				_set		(shared_str const &rhs)			{	str_value* v = rhs.p_; if (0!=v) v->dwReference++; _dec(); p_ = v;							}

	mov	eax, DWORD PTR _rhs$[esp-4]
	mov	edx, ecx
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN2@set
	inc	DWORD PTR [eax]
$LN2@set:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR [edx]
	test	ecx, ecx
	je	SHORT $LN8@set
	dec	DWORD PTR [ecx]
$LN8@set:

; 53   : 	void				_set		(shared_str const &rhs)			{	str_value* v = rhs.p_; if (0!=v) v->dwReference++; _dec(); p_ = v;							}

	mov	DWORD PTR [edx], eax
	ret	4
?_set@shared_str@@QAEXABV1@@Z ENDP			; shared_str::_set
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??0shared_str@@QAE@ABV0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??0shared_str@@QAE@ABV0@@Z PROC				; shared_str::shared_str, COMDAT
; _this$ = ecx

; 53   : 	void				_set		(shared_str const &rhs)			{	str_value* v = rhs.p_; if (0!=v) v->dwReference++; _dec(); p_ = v;							}

	mov	eax, DWORD PTR _rhs$[esp-4]

; 59   : 						shared_str	(shared_str const &rhs)			{	p_ = 0;	_set(rhs);								}

	mov	DWORD PTR [ecx], 0

; 53   : 	void				_set		(shared_str const &rhs)			{	str_value* v = rhs.p_; if (0!=v) v->dwReference++; _dec(); p_ = v;							}

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN11@shared_str
	inc	DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	test	edx, edx
	je	SHORT $LN11@shared_str
	dec	DWORD PTR [edx]
$LN11@shared_str:

; 59   : 						shared_str	(shared_str const &rhs)			{	p_ = 0;	_set(rhs);								}

	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	ret	4
??0shared_str@@QAE@ABV0@@Z ENDP				; shared_str::shared_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ?_dec@shared_str@@IAEXXZ
_TEXT	SEGMENT
?_dec@shared_str@@IAEXXZ PROC				; shared_str::_dec, COMDAT
; _this$ = ecx

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN3@dec
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@dec
	mov	DWORD PTR [ecx], 0
$LN3@dec:
	ret	0
?_dec@shared_str@@IAEXXZ ENDP				; shared_str::_dec
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??1shared_str@@QAE@XZ
_TEXT	SEGMENT
??1shared_str@@QAE@XZ PROC				; shared_str::~shared_str, COMDAT
; _this$ = ecx

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN5@shared_str
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@shared_str
	mov	DWORD PTR [ecx], 0
$LN5@shared_str:

; 60   : 						~shared_str	()								{	_dec();											}

	ret	0
??1shared_str@@QAE@XZ ENDP				; shared_str::~shared_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??Dshared_str@@QBEPBDXZ
_TEXT	SEGMENT
??Dshared_str@@QBEPBDXZ PROC				; shared_str::operator*, COMDAT
; _this$ = ecx

; 65   : 	str_c				operator*	() const						{	return p_?p_->value:0;							}

	mov	eax, DWORD PTR [ecx]
	lea	ecx, DWORD PTR [eax+12]
	neg	eax
	sbb	eax, eax
	and	eax, ecx
	ret	0
??Dshared_str@@QBEPBDXZ ENDP				; shared_str::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
;	COMDAT ?xrPREAD@@YAIAAVIReader@@@Z
_TEXT	SEGMENT
?xrPREAD@@YAIAAVIReader@@@Z PROC			; xrPREAD, COMDAT
; _fs$ = ecx

; 117  : {

	push	esi
	push	edi
	mov	edi, ecx

; 118  : 	u32 T = fs.r_u32();

	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ

; 120  : 	return		T;

	pop	edi
	mov	eax, esi
	pop	esi

; 121  : }

	ret	0
?xrPREAD@@YAIAAVIReader@@@Z ENDP			; xrPREAD
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
;	COMDAT ?xrPREAD_MARKER@@YAXAAVIReader@@@Z
_TEXT	SEGMENT
?xrPREAD_MARKER@@YAXAAVIReader@@@Z PROC			; xrPREAD_MARKER, COMDAT
; _fs$ = ecx

; 124  : 	R_ASSERT(xrPID_MARKER == xrPREAD(fs));

	cmp	BYTE PTR ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA, 0 ; `xrPREAD_MARKER'::`4'::ignore_always
	push	edi
	mov	edi, ecx
	jne	SHORT $LN2@xrPREAD_MA

; 118  : 	u32 T = fs.r_u32();

	push	esi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ

; 124  : 	R_ASSERT(xrPID_MARKER == xrPREAD(fs));

	test	esi, esi
	pop	esi
	je	SHORT $LN2@xrPREAD_MA
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA ; `xrPREAD_MARKER'::`4'::ignore_always
	push	OFFSET ??_C@_0P@PLOPPKHB@xrPREAD_MARKER@
	push	124					; 0000007cH
	push	OFFSET ??_C@_0DB@CNPOFPKJ@I?3?2Vitalya?2mine?2NSProjectX?2xrEn@
	push	OFFSET ??_C@_0BM@KGILKBEF@xrPID_MARKER?5?$DN?$DN?5xrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN2@xrPREAD_MA:

; 125  : }

	pop	edi
	ret	0
?xrPREAD_MARKER@@YAXAAVIReader@@@Z ENDP			; xrPREAD_MARKER
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
;	COMDAT ?xrPWRITE@@YAXAAVIWriter@@IPBDPBXI@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?xrPWRITE@@YAXAAVIWriter@@IPBDPBXI@Z PROC		; xrPWRITE, COMDAT
; _fs$ = ecx
; _ID$ = edx

; 100  : {

	push	esi

; 101  : 	fs.w_u32(ID);

	push	edx
	mov	esi, ecx
	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	DWORD PTR _name$[esp]
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	mov	edx, DWORD PTR _data$[esp]
	test	edx, edx
	je	SHORT $LN2@xrPWRITE
	mov	ecx, DWORD PTR _size$[esp]
	test	ecx, ecx
	je	SHORT $LN2@xrPWRITE
	mov	eax, DWORD PTR [esi]
	push	ecx
	push	edx
	mov	ecx, esi
	call	DWORD PTR [eax+12]
$LN2@xrPWRITE:

; 104  : }

	pop	esi
	ret	0
?xrPWRITE@@YAXAAVIWriter@@IPBDPBXI@Z ENDP		; xrPWRITE
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
;	COMDAT ?xrPWRITE_MARKER@@YAXAAVIWriter@@PBD@Z
_TEXT	SEGMENT
?xrPWRITE_MARKER@@YAXAAVIWriter@@PBD@Z PROC		; xrPWRITE_MARKER, COMDAT
; _fs$ = ecx
; _name$ = edx

; 106  : {

	push	esi
	push	edi

; 101  : 	fs.w_u32(ID);

	push	0

; 106  : {

	mov	esi, edx
	mov	edi, ecx

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	esi
	mov	ecx, edi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z
	pop	edi
	pop	esi

; 107  : 	xrPWRITE(fs, xrPID_MARKER, name, 0, 0);
; 108  : }

	ret	0
?xrPWRITE_MARKER@@YAXAAVIWriter@@PBD@Z ENDP		; xrPWRITE_MARKER
_TEXT	ENDS
END
