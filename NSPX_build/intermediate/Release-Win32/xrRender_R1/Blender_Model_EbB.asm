; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\blender_model_ebb.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BA@KGLJAPNG@MODEL?3?5env?$FObase@	; `string'
PUBLIC	??_C@_0BJ@KCBKHDJE@CBlender_Model_EbB?3?3Load@	; `string'
PUBLIC	??_C@_0EB@FEBPNJNH@I?3?2Vitalya?2mine?2NSProjectX?2laye@ ; `string'
PUBLIC	??_C@_0N@HMGMJMKM@model_env_hq@			; `string'
PUBLIC	??_C@_0BA@KMBCAHDL@$user$projector@		; `string'
PUBLIC	??_C@_0N@HLGFDEHA@model_env_lq@			; `string'
PUBLIC	??_C@_0BA@CHNPMDJB@model_def_point@		; `string'
PUBLIC	??_C@_0P@HBJADFCE@model_def_spot@		; `string'
PUBLIC	??_C@_0BB@IEACFODB@model_def_shadow@		; `string'
PUBLIC	??_C@_0N@IMEFDHE@model_shadow@			; `string'
PUBLIC	??_R2CBlender_Model_EbB@@8			; CBlender_Model_EbB::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBlender_Model_EbB@@8		; CBlender_Model_EbB::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3CBlender_Model_EbB@@8			; CBlender_Model_EbB::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCBlender_Model_EbB@@@8			; CBlender_Model_EbB `RTTI Type Descriptor'
PUBLIC	??_R4CBlender_Model_EbB@@6B@			; CBlender_Model_EbB::`RTTI Complete Object Locator'
PUBLIC	??_7CBlender_Model_EbB@@6B@			; CBlender_Model_EbB::`vftable'
;	COMDAT ?ignore_always@?BG@??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BG@??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Model_EbB::Load'::`22'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?M@??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?M@??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Model_EbB::Load'::`12'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?4??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?4??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Model_EbB::Load'::`5'::ignore_always
_BSS	ENDS
;	COMDAT ??_7CBlender_Model_EbB@@6B@
CONST	SEGMENT
??_7CBlender_Model_EbB@@6B@ DD FLAT:??_R4CBlender_Model_EbB@@6B@ ; CBlender_Model_EbB::`vftable'
	DD	FLAT:?getName@IBlender@@UAEPBDXZ
	DD	FLAT:?getComment@CBlender_Model_EbB@@UAEPBDXZ
	DD	FLAT:?Save@CBlender_Model_EbB@@UAEXAAVIWriter@@@Z
	DD	FLAT:?Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z
	DD	FLAT:?canBeDetailed@IBlender@@UAEHXZ
	DD	FLAT:?canBeLMAPped@CBlender_Model_EbB@@UAEHXZ
	DD	FLAT:?Compile@CBlender_Model_EbB@@UAEXAAVCBlender_Compile@@@Z
	DD	FLAT:??_ECBlender_Model_EbB@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CBlender_Model_EbB@@6B@
rdata$r	SEGMENT
??_R4CBlender_Model_EbB@@6B@ DD 00H			; CBlender_Model_EbB::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBlender_Model_EbB@@@8
	DD	FLAT:??_R3CBlender_Model_EbB@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBlender_Model_EbB@@@8
data$rs	SEGMENT
??_R0?AVCBlender_Model_EbB@@@8 DD FLAT:??_7type_info@@6B@ ; CBlender_Model_EbB `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBlender_Model_EbB@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CBlender_Model_EbB@@8
rdata$r	SEGMENT
??_R3CBlender_Model_EbB@@8 DD 00H			; CBlender_Model_EbB::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBlender_Model_EbB@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBlender_Model_EbB@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBlender_Model_EbB@@8 DD FLAT:??_R0?AVCBlender_Model_EbB@@@8 ; CBlender_Model_EbB::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBlender_Model_EbB@@8
rdata$r	ENDS
;	COMDAT ??_R2CBlender_Model_EbB@@8
rdata$r	SEGMENT
??_R2CBlender_Model_EbB@@8 DD FLAT:??_R1A@?0A@EA@CBlender_Model_EbB@@8 ; CBlender_Model_EbB::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IBlender@@8
	DD	FLAT:??_R1A@?0A@EA@CPropertyBase@@8
rdata$r	ENDS
;	COMDAT ??_C@_0N@IMEFDHE@model_shadow@
CONST	SEGMENT
??_C@_0N@IMEFDHE@model_shadow@ DB 'model_shadow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IEACFODB@model_def_shadow@
CONST	SEGMENT
??_C@_0BB@IEACFODB@model_def_shadow@ DB 'model_def_shadow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HBJADFCE@model_def_spot@
CONST	SEGMENT
??_C@_0P@HBJADFCE@model_def_spot@ DB 'model_def_spot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CHNPMDJB@model_def_point@
CONST	SEGMENT
??_C@_0BA@CHNPMDJB@model_def_point@ DB 'model_def_point', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HLGFDEHA@model_env_lq@
CONST	SEGMENT
??_C@_0N@HLGFDEHA@model_env_lq@ DB 'model_env_lq', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KMBCAHDL@$user$projector@
CONST	SEGMENT
??_C@_0BA@KMBCAHDL@$user$projector@ DB '$user$projector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HMGMJMKM@model_env_hq@
CONST	SEGMENT
??_C@_0N@HMGMJMKM@model_env_hq@ DB 'model_env_hq', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@FEBPNJNH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
CONST	SEGMENT
??_C@_0EB@FEBPNJNH@I?3?2Vitalya?2mine?2NSProjectX?2laye@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KCBKHDJE@CBlender_Model_EbB?3?3Load@
CONST	SEGMENT
??_C@_0BJ@KCBKHDJE@CBlender_Model_EbB?3?3Load@ DB 'CBlender_Model_EbB::Lo'
	DB	'ad', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KGLJAPNG@MODEL?3?5env?$FObase@
CONST	SEGMENT
??_C@_0BA@KGLJAPNG@MODEL?3?5env?$FObase@ DB 'MODEL: env^base', 00H ; `string'
PUBLIC	?Compile@CBlender_Model_EbB@@UAEXAAVCBlender_Compile@@@Z ; CBlender_Model_EbB::Compile
PUBLIC	?Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z	; CBlender_Model_EbB::Load
PUBLIC	?Save@CBlender_Model_EbB@@UAEXAAVIWriter@@@Z	; CBlender_Model_EbB::Save
PUBLIC	??1CBlender_Model_EbB@@UAE@XZ			; CBlender_Model_EbB::~CBlender_Model_EbB
PUBLIC	??_GCBlender_Model_EbB@@UAEPAXI@Z		; CBlender_Model_EbB::`scalar deleting destructor'
PUBLIC	??0CBlender_Model_EbB@@QAE@XZ			; CBlender_Model_EbB::CBlender_Model_EbB
PUBLIC	?canBeLMAPped@CBlender_Model_EbB@@UAEHXZ	; CBlender_Model_EbB::canBeLMAPped
PUBLIC	?getComment@CBlender_Model_EbB@@UAEPBDXZ	; CBlender_Model_EbB::getComment
EXTRN	??_ECBlender_Model_EbB@@UAEPAXI@Z:PROC		; CBlender_Model_EbB::`vector deleting destructor'
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\blender_Model_EbB.h
;	COMDAT ?getComment@CBlender_Model_EbB@@UAEPBDXZ
_TEXT	SEGMENT
?getComment@CBlender_Model_EbB@@UAEPBDXZ PROC		; CBlender_Model_EbB::getComment, COMDAT
; _this$ = ecx

; 16   : 	virtual		LPCSTR		getComment()	{ return "MODEL: env^base";	}

	mov	eax, OFFSET ??_C@_0BA@KGLJAPNG@MODEL?3?5env?$FObase@
	ret	0
?getComment@CBlender_Model_EbB@@UAEPBDXZ ENDP		; CBlender_Model_EbB::getComment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\blender_Model_EbB.h
;	COMDAT ?canBeLMAPped@CBlender_Model_EbB@@UAEHXZ
_TEXT	SEGMENT
?canBeLMAPped@CBlender_Model_EbB@@UAEHXZ PROC		; CBlender_Model_EbB::canBeLMAPped, COMDAT
; _this$ = ecx

; 17   : 	virtual		BOOL		canBeLMAPped()	{ return FALSE; }

	xor	eax, eax
	ret	0
?canBeLMAPped@CBlender_Model_EbB@@UAEHXZ ENDP		; CBlender_Model_EbB::canBeLMAPped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
_TEXT	SEGMENT
??0CBlender_Model_EbB@@QAE@XZ PROC			; CBlender_Model_EbB::CBlender_Model_EbB
; _this$ = ecx

; 15   : {

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Model_EbB@@6B@

; 17   : 	description.version	= 0x1;

	mov	eax, 1
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 52   : 	xrP_BOOL() : value(FALSE) {}

	mov	DWORD PTR [esi+452], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 17   : 	description.version	= 0x1;

	mov	WORD PTR [esi+176], ax
	mov	DWORD PTR [esi+4], 1279615554		; 4c456242H
	mov	DWORD PTR [esi+8], 1297040453		; 4d4f4445H

; 18   : 	strcpy				(oT2_Name,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+324], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+328], ax

; 19   : 	strcpy				(oT2_xform,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+388], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+392], ax

; 20   : 	oBlend.value		= FALSE;
; 21   : }

	mov	eax, esi
	pop	esi
	ret	0
??0CBlender_Model_EbB@@QAE@XZ ENDP			; CBlender_Model_EbB::CBlender_Model_EbB
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
;	COMDAT ??_GCBlender_Model_EbB@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBlender_Model_EbB@@UAEPAXI@Z PROC			; CBlender_Model_EbB::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 24   : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Model_EbB@@6B@

; 25   : 	
; 26   : }

	call	DWORD PTR __imp_??1IBlender@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	456					; 000001c8H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCBlender_Model_EbB@@UAEPAXI@Z ENDP			; CBlender_Model_EbB::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
_TEXT	SEGMENT
??1CBlender_Model_EbB@@UAE@XZ PROC			; CBlender_Model_EbB::~CBlender_Model_EbB
; _this$ = ecx

; 24   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CBlender_Model_EbB@@6B@

; 25   : 	
; 26   : }

	jmp	DWORD PTR __imp_??1IBlender@@UAE@XZ
??1CBlender_Model_EbB@@UAE@XZ ENDP			; CBlender_Model_EbB::~CBlender_Model_EbB
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
?Save@CBlender_Model_EbB@@UAEXAAVIWriter@@@Z PROC	; CBlender_Model_EbB::Save
; _this$ = ecx

; 29   : {

	push	ebx
	push	esi

; 30   : 	description.version	= 0x1;
; 31   : 	IBlender::Save	(fs);

	mov	esi, DWORD PTR _fs$[esp+4]
	mov	eax, 1
	push	edi
	mov	edi, ecx
	push	esi
	mov	WORD PTR [edi+176], ax
	call	DWORD PTR __imp_?Save@IBlender@@UAEXAAVIWriter@@@Z
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	push	0
	mov	ecx, esi
	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_0BA@KHCMMLLL@Environment?5map@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 101  : 	fs.w_u32(ID);

	push	3
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 33   : 	xrPWRITE_PROP	(fs,"Name",				xrPID_TEXTURE,	oT2_Name);

	lea	ebx, DWORD PTR [edi+324]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_04FABLJDN@Name@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN9@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	64					; 00000040H
	push	ebx
	call	DWORD PTR [eax+12]
$LN9@Save:

; 101  : 	fs.w_u32(ID);

	push	1
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 34   : 	xrPWRITE_PROP	(fs,"Transform",		xrPID_MATRIX,	oT2_xform);

	lea	ebx, DWORD PTR [edi+388]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_09MKLAHOHG@Transform@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN12@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	64					; 00000040H
	push	ebx
	call	DWORD PTR [eax+12]
$LN12@Save:

; 101  : 	fs.w_u32(ID);

	push	6
	mov	ecx, esi
	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_0M@IHIJOGDO@Alpha?9Blend@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 35   : 	xrPWRITE_PROP	(fs,"Alpha-Blend",		xrPID_BOOL,		oBlend);

	add	edi, 452				; 000001c4H
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 103  : 	if (data && size)	fs.w(data, size);

	je	SHORT $LN15@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	4
	push	edi
	call	DWORD PTR [eax+12]
$LN15@Save:
	pop	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 36   : }

	pop	esi
	pop	ebx
	ret	4
?Save@CBlender_Model_EbB@@UAEXAAVIWriter@@@Z ENDP	; CBlender_Model_EbB::Save
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
_version$ = 12						; size = 2
?Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z PROC	; CBlender_Model_EbB::Load
; _this$ = ecx

; 39   : {

	push	ebx
	push	ebp
	push	esi
	push	edi

; 40   : 	IBlender::Load	(fs,version);

	push	DWORD PTR _version$[esp+12]
	mov	edi, DWORD PTR _fs$[esp+16]
	mov	ebp, ecx
	push	edi
	call	DWORD PTR __imp_?Load@IBlender@@UAEXAAVIReader@@G@Z
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 124  : 	R_ASSERT(xrPID_MARKER == xrPREAD(fs));

	cmp	BYTE PTR ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA, 0 ; `xrPREAD_MARKER'::`4'::ignore_always
	mov	ebx, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	jne	SHORT $LN29@Load

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ

; 124  : 	R_ASSERT(xrPID_MARKER == xrPREAD(fs));

	test	esi, esi
	je	SHORT $LN29@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA ; `xrPREAD_MARKER'::`4'::ignore_always
	push	OFFSET ??_C@_0P@PLOPPKHB@xrPREAD_MARKER@
	push	124					; 0000007cH
	push	OFFSET ??_C@_0DB@CNPOFPKJ@I?3?2Vitalya?2mine?2NSProjectX?2xrEn@
	push	OFFSET ??_C@_0BM@KGILKBEF@xrPID_MARKER?5?$DN?$DN?5xrPREAD?$CIfs?$CJ@
	call	ebx
$LN29@Load:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 42   : 	xrPREAD_PROP	(fs,xrPID_TEXTURE,	oT2_Name);

	cmp	BYTE PTR ?ignore_always@?4??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN2@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 42   : 	xrPREAD_PROP	(fs,xrPID_TEXTURE,	oT2_Name);

	cmp	esi, 3
	je	SHORT $LN2@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?4??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BJ@KCBKHDJE@CBlender_Model_EbB?3?3Load@
	push	42					; 0000002aH
	push	OFFSET ??_C@_0EB@FEBPNJNH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebx
$LN2@Load:
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebp+324]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 43   : 	xrPREAD_PROP	(fs,xrPID_MATRIX,	oT2_xform);

	cmp	BYTE PTR ?ignore_always@?M@??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN7@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 43   : 	xrPREAD_PROP	(fs,xrPID_MATRIX,	oT2_xform);

	cmp	esi, 1
	je	SHORT $LN7@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?M@??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BJ@KCBKHDJE@CBlender_Model_EbB?3?3Load@
	push	43					; 0000002bH
	push	OFFSET ??_C@_0EB@FEBPNJNH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BK@PIKCNJKB@xrPID_MATRIX?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebx
$LN7@Load:
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebp+388]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 44   : 	if (version>=0x1)	{

	cmp	WORD PTR _version$[esp+12], 1
	jb	SHORT $LN69@Load

; 45   : 		xrPREAD_PROP	(fs,xrPID_BOOL,	oBlend);

	cmp	BYTE PTR ?ignore_always@?BG@??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN12@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 45   : 		xrPREAD_PROP	(fs,xrPID_BOOL,	oBlend);

	cmp	esi, 6
	je	SHORT $LN12@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BG@??Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BJ@KCBKHDJE@CBlender_Model_EbB?3?3Load@
	push	45					; 0000002dH
	push	OFFSET ??_C@_0EB@FEBPNJNH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebx
$LN12@Load:
	push	4
	lea	eax, DWORD PTR [ebp+452]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z
$LN69@Load:

; 46   : 	}
; 47   : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	8
?Load@CBlender_Model_EbB@@UAEXAAVIReader@@G@Z ENDP	; CBlender_Model_EbB::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_C$ = 8							; size = 4
?Compile@CBlender_Model_EbB@@UAEXAAVCBlender_Compile@@@Z PROC ; CBlender_Model_EbB::Compile
; _this$ = ecx

; 51   : {

	push	ecx
	push	ebx
	push	ebp

; 52   : 	IBlender::Compile		(C);

	mov	ebp, DWORD PTR _C$[esp+8]
	push	esi
	push	edi
	mov	esi, ecx
	push	ebp
	mov	DWORD PTR _this$1$[esp+24], esi
	call	DWORD PTR __imp_?Compile@IBlender@@UAEXAAVCBlender_Compile@@@Z

; 53   : 	if (C.bEditor)	{

	cmp	DWORD PTR [ebp+44], 0
	je	$LN4@Compile

; 54   : 		C.PassBegin		();

	mov	ecx, ebp
	call	DWORD PTR __imp_?PassBegin@CBlender_Compile@@QAEXXZ

; 55   : 		{
; 56   : 			if (oBlend.value)	{ C.PassSET_ZB		(TRUE,FALSE);	C.PassSET_Blend_BLEND	(); }

	cmp	DWORD PTR [esi+452], 0
	mov	ecx, ebp
	push	0
	je	SHORT $LN6@Compile
	push	0
	push	1
	call	DWORD PTR __imp_?PassSET_ZB@CBlender_Compile@@QAEXHHH@Z
	push	0
	push	0
	mov	ecx, ebp
	call	DWORD PTR __imp_?PassSET_Blend_BLEND@CBlender_Compile@@QAEXHI@Z
	jmp	SHORT $LN7@Compile
$LN6@Compile:

; 57   : 			else				{ C.PassSET_ZB		(TRUE,TRUE);	C.PassSET_Blend_SET		(); }

	push	1
	push	1
	call	DWORD PTR __imp_?PassSET_ZB@CBlender_Compile@@QAEXHHH@Z
	push	0
	push	0
	mov	ecx, ebp
	call	DWORD PTR __imp_?PassSET_Blend_SET@CBlender_Compile@@QAEXHI@Z
$LN7@Compile:

; 58   : 			C.PassSET_LightFog	(TRUE,TRUE);

	push	1
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?PassSET_LightFog@CBlender_Compile@@QAEXHH@Z

; 59   : 			
; 60   : 			// Stage1 - Env texture
; 61   : 			C.StageBegin		();

	mov	ecx, ebp
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 62   : 			C.StageSET_Address	(D3DTADDRESS_CLAMP);

	push	3
	mov	ecx, ebp
	call	DWORD PTR __imp_?StageSET_Address@CBlender_Compile@@QAEXI@Z

; 63   : 			C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,		D3DTA_DIFFUSE);

	mov	ebx, DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z
	mov	ecx, ebp
	push	0
	push	2
	push	2
	call	ebx

; 64   : 			C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,		D3DTA_DIFFUSE);

	mov	edi, DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z
	mov	ecx, ebp
	push	0
	push	2
	push	2
	call	edi

; 65   : 			C.StageSET_TMC		(oT2_Name, oT2_xform, "$null", 0);

	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	lea	eax, DWORD PTR [esi+388]
	mov	ecx, ebp
	push	eax
	lea	eax, DWORD PTR [esi+324]
	mov	esi, DWORD PTR __imp_?StageSET_TMC@CBlender_Compile@@QAEXPBD00H@Z
	push	eax
	call	esi

; 66   : 			C.StageEnd			();

	mov	ecx, ebp
	mov	ebp, DWORD PTR __imp_?StageEnd@CBlender_Compile@@QAEXXZ
	call	ebp

; 67   : 			
; 68   : 			// Stage2 - Base texture
; 69   : 			C.StageBegin		();

	mov	ecx, DWORD PTR _C$[esp+16]
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 70   : 			C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_BLENDTEXTUREALPHA,	D3DTA_CURRENT);

	mov	ecx, DWORD PTR _C$[esp+16]
	push	1
	push	13					; 0000000dH
	push	2
	call	ebx

; 71   : 			C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,		D3DTA_CURRENT);

	mov	ecx, DWORD PTR _C$[esp+16]
	push	1
	push	2
	push	2
	call	edi

; 72   : 			C.StageSET_TMC		(oT_Name, oT_xform, "$null", 0);

	mov	ecx, DWORD PTR _this$1$[esp+20]
	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	lea	eax, DWORD PTR [ecx+260]
	push	eax
	lea	eax, DWORD PTR [ecx+196]
	mov	ecx, DWORD PTR _C$[esp+28]
	push	eax
	call	esi

; 73   : 			C.StageEnd			();

	mov	esi, DWORD PTR _C$[esp+16]
	mov	ecx, esi
	call	ebp

; 74   : 
; 75   : 			// Stage3 - Lighting - should work on all 2tex hardware
; 76   : 			C.StageBegin		();

	mov	ecx, esi
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 77   : 			C.StageSET_Color	(D3DTA_DIFFUSE,	  D3DTOP_MODULATE,			D3DTA_CURRENT);

	push	1
	push	4
	push	0
	mov	ecx, esi
	call	ebx

; 78   : 			C.StageSET_Alpha	(D3DTA_DIFFUSE,	  D3DTOP_SELECTARG2,		D3DTA_CURRENT);

	push	1
	push	3
	push	0
	mov	ecx, esi
	call	edi

; 79   : 			C.Stage_Texture		("$null"	);

	push	2
	push	2
	push	2
	push	1
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, esi
	call	DWORD PTR __imp_?Stage_Texture@CBlender_Compile@@QAEXPBDIIII@Z

; 80   : 			C.Stage_Matrix		("$null",	0);

	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, esi
	call	DWORD PTR __imp_?Stage_Matrix@CBlender_Compile@@QAEXPBDH@Z

; 81   : 			C.Stage_Constant	("$null"	);

	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, esi
	call	DWORD PTR __imp_?Stage_Constant@CBlender_Compile@@QAEXPBD@Z

; 82   : 			C.StageEnd			();

	mov	ecx, esi
	call	ebp

; 83   : 		}
; 84   : 		C.PassEnd			();

	mov	ecx, esi
	call	DWORD PTR __imp_?PassEnd@CBlender_Compile@@QAEXXZ

; 129  : 			C.r_End				();
; 130  : 			break;
; 131  : 		}
; 132  : 	}
; 133  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN4@Compile:

; 85   : 	} else {
; 86   : 		LPCSTR	vsname			= 0;
; 87   : 		LPCSTR	psname			= 0;
; 88   : 		switch (C.iElement)

	mov	eax, DWORD PTR [ebp+60]
	cmp	eax, 4
	ja	$LN2@Compile
	jmp	DWORD PTR $LN86@Compile[eax*4]
$LN8@Compile:

; 89   : 		{
; 90   : 		case SE_R1_NORMAL_HQ:	
; 91   : 			vsname = psname =	"model_env_hq"; 
; 92   : 			if (oBlend.value)	C.r_Pass	(vsname,psname,TRUE,TRUE,FALSE,TRUE,D3DBLEND_SRCALPHA,	D3DBLEND_INVSRCALPHA,	TRUE,0);

	cmp	DWORD PTR [esi+452], 0
	mov	ecx, ebp
	push	0
	je	SHORT $LN9@Compile
	push	1
	push	6
	push	5
	push	1
	push	0
	jmp	SHORT $LN87@Compile
$LN9@Compile:

; 93   : 			else				C.r_Pass	(vsname,psname,TRUE);

	push	0
	push	1
	push	2
	push	0
	push	1
$LN87@Compile:

; 94   : 			C.r_Sampler			("s_base",	C.L_textures[0]);

	push	1
	push	1
	push	OFFSET ??_C@_0N@HMGMJMKM@model_env_hq@
	push	OFFSET ??_C@_0N@HMGMJMKM@model_env_hq@
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z
	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [ebp]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 95   : 			C.r_Sampler			("s_env",	oT2_Name,false,D3DTADDRESS_CLAMP);

	push	2
	push	2
	push	2
	push	3
	push	0
	lea	eax, DWORD PTR [esi+324]
	mov	ecx, ebp
	push	eax
	push	OFFSET ??_C@_05EOBMEGEC@s_env@
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBD0_NIIII@Z

; 96   : 			C.r_Sampler_clf		("s_lmap",	"$user$projector",true);

	push	1
	push	OFFSET ??_C@_0BA@KMBCAHDL@$user$projector@
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z

; 129  : 			C.r_End				();
; 130  : 			break;
; 131  : 		}
; 132  : 	}
; 133  : }

	mov	ecx, ebp
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN11@Compile:

; 97   : 			C.r_End				();
; 98   : 			break;
; 99   : 		case SE_R1_NORMAL_LQ:
; 100  : 			vsname = psname =	"model_env_lq"; 
; 101  : 			if (oBlend.value)	C.r_Pass	(vsname,psname,TRUE,TRUE,FALSE,TRUE,D3DBLEND_SRCALPHA,	D3DBLEND_INVSRCALPHA,	TRUE,0);

	cmp	DWORD PTR [esi+452], 0
	mov	ecx, ebp
	push	0
	je	SHORT $LN12@Compile
	push	1
	push	6
	push	5
	push	1
	push	0
	jmp	SHORT $LN89@Compile
$LN12@Compile:

; 102  : 			else				C.r_Pass	(vsname,psname,TRUE);

	push	0
	push	1
	push	2
	push	0
	push	1
$LN89@Compile:

; 103  : 			C.r_Sampler			("s_base",	C.L_textures[0]);

	push	1
	push	1
	push	OFFSET ??_C@_0N@HLGFDEHA@model_env_lq@
	push	OFFSET ??_C@_0N@HLGFDEHA@model_env_lq@
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z
	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [ebp]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 104  : 			C.r_Sampler			("s_env",	oT2_Name,false,D3DTADDRESS_CLAMP);

	push	2
	push	2
	push	2
	push	3
	push	0
	lea	eax, DWORD PTR [esi+324]
	mov	ecx, ebp
	push	eax
	push	OFFSET ??_C@_05EOBMEGEC@s_env@
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBD0_NIIII@Z

; 129  : 			C.r_End				();
; 130  : 			break;
; 131  : 		}
; 132  : 	}
; 133  : }

	mov	ecx, ebp
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN14@Compile:

; 105  : 			C.r_End				();
; 106  : 			break;
; 107  : 		case SE_R1_LPOINT:
; 108  : 			vsname				= "model_def_point";
; 109  : 			psname				= "add_point";
; 110  : 			C.r_Pass			(vsname,psname,FALSE,TRUE,FALSE,TRUE,D3DBLEND_ONE, D3DBLEND_ONE,TRUE);

	push	0
	push	1
	push	2
	push	2
	push	1
	push	0
	push	1
	push	0
	push	OFFSET ??_C@_09PNJHBAHM@add_point@
	push	OFFSET ??_C@_0BA@CHNPMDJB@model_def_point@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z

; 111  : 			C.r_Sampler			("s_base",	C.L_textures[0]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [ebp]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 112  : 			C.r_Sampler_clf		("s_lmap",	TEX_POINT_ATT);

	mov	esi, DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z
	mov	ecx, ebp
	push	0
	push	OFFSET ??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	call	esi

; 113  : 			C.r_Sampler_clf		("s_att",	TEX_POINT_ATT);

	push	0
	push	OFFSET ??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@
	push	OFFSET ??_C@_05OCPJJFDB@s_att@
	mov	ecx, ebp
	call	esi

; 129  : 			C.r_End				();
; 130  : 			break;
; 131  : 		}
; 132  : 	}
; 133  : }

	mov	ecx, ebp
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN15@Compile:

; 114  : 			C.r_End				();
; 115  : 			break;
; 116  : 		case SE_R1_LSPOT:
; 117  : 			vsname				= "model_def_spot";
; 118  : 			psname				= "add_spot";
; 119  : 			C.r_Pass			(vsname,psname,FALSE,TRUE,FALSE,TRUE,D3DBLEND_ONE, D3DBLEND_ONE,TRUE);

	push	0
	push	1
	push	2
	push	2
	push	1
	push	0
	push	1
	push	0
	push	OFFSET ??_C@_08FJPLAIEP@add_spot@
	push	OFFSET ??_C@_0P@HBJADFCE@model_def_spot@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z

; 120  : 			C.r_Sampler			("s_base",	C.L_textures[0]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [ebp]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 121  : 			C.r_Sampler_clf		("s_lmap",	"internal\\internal_light_att",		true);

	mov	esi, DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z
	mov	ecx, ebp
	push	1
	push	OFFSET ??_C@_0BM@EOCKFCCB@internal?2internal_light_att@
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	call	esi

; 122  : 			C.r_Sampler_clf		("s_att",	TEX_SPOT_ATT);

	push	0
	push	OFFSET ??_C@_0CA@EOOCFOEF@internal?2internal_light_attclip@
	push	OFFSET ??_C@_05OCPJJFDB@s_att@
	mov	ecx, ebp
	call	esi

; 129  : 			C.r_End				();
; 130  : 			break;
; 131  : 		}
; 132  : 	}
; 133  : }

	mov	ecx, ebp
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN16@Compile:

; 123  : 			C.r_End				();
; 124  : 			break;
; 125  : 		case SE_R1_LMODELS:
; 126  : 			vsname				= "model_def_shadow";
; 127  : 			psname				= "model_shadow";
; 128  : 			C.r_Pass			(vsname,psname,FALSE,FALSE,FALSE,TRUE,D3DBLEND_ZERO,D3DBLEND_SRCCOLOR,FALSE,0);

	push	0
	push	0
	push	3
	push	1
	push	1
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0N@IMEFDHE@model_shadow@
	push	OFFSET ??_C@_0BB@IEACFODB@model_def_shadow@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z

; 129  : 			C.r_End				();
; 130  : 			break;
; 131  : 		}
; 132  : 	}
; 133  : }

	mov	ecx, ebp
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
$LN2@Compile:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
	npad	1
$LN86@Compile:
	DD	$LN8@Compile
	DD	$LN11@Compile
	DD	$LN14@Compile
	DD	$LN15@Compile
	DD	$LN16@Compile
?Compile@CBlender_Model_EbB@@UAEXAAVCBlender_Compile@@@Z ENDP ; CBlender_Model_EbB::Compile
_TEXT	ENDS
END
