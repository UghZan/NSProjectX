; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\detailmanager.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0O@EKJDCOAB@level?4details@		; `string'
PUBLIC	??_C@_07DJIBDFPO@$level$@			; `string'
PUBLIC	??_C@_0BF@GLPAKFBM@CDetailManager?3?3Load@	; `string'
PUBLIC	??_C@_0DN@KFPJDCKL@I?3?2Vitalya?2mine?2NSProjectX?2laye@ ; `string'
PUBLIC	??_C@_0BO@OFEMNCKJ@dtH?4version?5?$DN?$DN?5DETAIL_VERSION@ ; `string'
PUBLIC	??_C@_0BC@HMFDBOCL@swing_normal_amp1@		; `string'
PUBLIC	??_C@_07CAOCFMEH@details@			; `string'
PUBLIC	??_C@_0BC@FHHOENOI@swing_normal_amp2@		; `string'
PUBLIC	??_C@_0BC@PGBDJDCO@swing_normal_rot1@		; `string'
PUBLIC	??_C@_0BC@NNDOMAON@swing_normal_rot2@		; `string'
PUBLIC	??_C@_0BD@HHENNFJP@swing_normal_speed@		; `string'
PUBLIC	??_C@_0BA@LGNGELGN@swing_fast_amp1@		; `string'
PUBLIC	??_C@_0BA@JNPLBIKO@swing_fast_amp2@		; `string'
PUBLIC	??_C@_0BA@DMJGMGGI@swing_fast_rot1@		; `string'
PUBLIC	??_C@_0BA@BHLLJFKL@swing_fast_rot2@		; `string'
PUBLIC	??_C@_0BB@OIDILEGP@swing_fast_speed@		; `string'
PUBLIC	??_R2CDetailManager@@8				; CDetailManager::`RTTI Base Class Array'
PUBLIC	??_R2CDetail@@8					; CDetail::`RTTI Base Class Array'
PUBLIC	??_R2IRender_DetailModel@@8			; IRender_DetailModel::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDetailManager@@8			; CDetailManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CDetail@@8			; CDetail::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IRender_DetailModel@@8		; IRender_DetailModel::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3CDetailManager@@8				; CDetailManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCDetailManager@@@8			; CDetailManager `RTTI Type Descriptor'
PUBLIC	??_R3IRender_DetailModel@@8			; IRender_DetailModel::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVIRender_DetailModel@@@8			; IRender_DetailModel `RTTI Type Descriptor'
PUBLIC	??_R3CDetail@@8					; CDetail::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCDetail@@@8				; CDetail `RTTI Type Descriptor'
PUBLIC	??_R4CDetailManager@@6B@			; CDetailManager::`RTTI Complete Object Locator'
PUBLIC	??_R4CDetail@@6B@				; CDetail::`RTTI Complete Object Locator'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_7CDetail@@6B@				; CDetail::`vftable'
PUBLIC	??_7CDetailManager@@6B@				; CDetailManager::`vftable'
EXTRN	__imp_?r_chunk_safe@?$IReaderBase@VIReader@@@@QAEHIPAXI@Z:PROC
EXTRN	__imp_??0IRender_DetailModel@@QAE@XZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_??1IRender_DetailModel@@UAE@XZ:PROC
EXTRN	__imp_?mem_alloc@xrMemory@@QAEPAXI@Z:PROC
EXTRN	__imp_?Leave@xrCriticalSection@@QAEXXZ:PROC
EXTRN	__imp_?Enter@xrCriticalSection@@QAEXXZ:PROC
EXTRN	__imp_?Fidentity@@3U?$_matrix@M@@A:ZWORD
EXTRN	__imp_?set_xform_world@CBackend@@QAEXABU?$_matrix@M@@@Z:PROC
EXTRN	__imp_?RCache@@3VCBackend@@A:BYTE
EXTRN	__imp_?set_CullMode@CBackend@@QAEXI@Z:PROC
EXTRN	__imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A:DWORD
EXTRN	__imp_?Environment@IGame_Persistent@@QAEAAVCEnvironment@@XZ:PROC
EXTRN	__imp_?psDeviceFlags@@3U?$_flags@I@@A:DWORD
EXTRN	__imp_?GetElapsed_ticks@CTimer@@QBE_KXZ:PROC
EXTRN	__imp_?End@CStatTimer@@QAEXXZ:PROC
EXTRN	__imp_?Random@@3VCRandom@@A:DWORD
EXTRN	__imp_?testSAABB@CFrustum@@QBE?AW4EFC_Visible@@AAU?$_vector3@M@@MPBMAAI@Z:PROC
EXTRN	__imp_?g_bEnableStatGather@@3HA:DWORD
EXTRN	__imp_?QPC@CPU@@YA_KXZ:PROC
EXTRN	__imp_?Start@CTimerBase@@QAEXXZ:PROC
EXTRN	__imp_?Start@CTimer@@QAEXXZ:PROC
EXTRN	__imp_?Begin@CStatTimer@@QAEXXZ:PROC
EXTRN	__imp_?CreateFromMatrix@CFrustum@@QAEXAAU?$_matrix@M@@I@Z:PROC
EXTRN	__imp_?Device@@3VCRenderDevice@@A:BYTE
EXTRN	__imp_?r_close@CLocatorAPI@@QAEXAAPAVIReader@@@Z:PROC
EXTRN	__imp_?pSettings@@3PAVCInifile@@A:DWORD
EXTRN	__imp_?r_float@CInifile@@QAEMPBD0@Z:PROC
EXTRN	__imp_?HW@@3VCHW@@A:BYTE
EXTRN	__imp_?pointer@IReader@@QBEPAXXZ:PROC
EXTRN	__imp_?close@IReader@@QAEXXZ:PROC
EXTRN	__imp_?open_chunk@IReader@@QAEPAV1@I@Z:PROC
EXTRN	__imp_?r_open@CLocatorAPI@@QAEPAVIReader@@PBD@Z:PROC
EXTRN	__imp_?update_path@CLocatorAPI@@QAEPBDAAY0CAI@DPBD1@Z:PROC
EXTRN	__imp_?xr_FS@@3PAVCLocatorAPI@@A:DWORD
EXTRN	__imp_?exist@CLocatorAPI@@QAEPBUfile@1@PBD0@Z:PROC
EXTRN	__imp_?_inc@?$resptr_base@USGeometry@@@@IAEXXZ:PROC
EXTRN	__imp_?_get@?$resptr_base@USGeometry@@@@QBEPAUSGeometry@@XZ:PROC
EXTRN	__imp_?_set@?$resptr_base@USGeometry@@@@QAEXPAUSGeometry@@@Z:PROC
EXTRN	__imp_?_set@?$resptr_base@USGeometry@@@@QAEXABV1@@Z:PROC
EXTRN	__imp_??1xrCriticalSection@@QAE@XZ:PROC
EXTRN	__imp_??0xrCriticalSection@@QAE@XZ:PROC
EXTRN	__imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ:PROC
EXTRN	__imp_?mem_free@xrMemory@@QAEXPAX@Z:PROC
EXTRN	__imp_?Memory@@3VxrMemory@@A:BYTE
EXTRN	__imp_??1xrXRC@@QAE@XZ:PROC
EXTRN	__imp_??0xrXRC@@QAE@XZ:PROC
;	COMDAT ?ignore_always@?6??Load@CDetailManager@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?6??Load@CDetailManager@@QAEXXZ@4_NA DB 01H DUP (?) ; `CDetailManager::Load'::`7'::ignore_always
_BSS	ENDS
;	COMDAT ??_7CDetailManager@@6B@
CONST	SEGMENT
??_7CDetailManager@@6B@ DD FLAT:??_R4CDetailManager@@6B@ ; CDetailManager::`vftable'
	DD	FLAT:??_ECDetailManager@@UAEPAXI@Z
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
?magic4x4@@3PAY03HA DD 00H				; magic4x4
	DD	0eH
	DD	03H
	DD	0dH
	DD	0bH
	DD	05H
	DD	08H
	DD	06H
	DD	0cH
	DD	02H
	DD	0fH
	DD	01H
	DD	07H
	DD	09H
	DD	04H
	DD	0aH
CONST	ENDS
;	COMDAT ??_7CDetail@@6B@
CONST	SEGMENT
??_7CDetail@@6B@ DD FLAT:??_R4CDetail@@6B@		; CDetail::`vftable'
	DD	FLAT:?transfer@CDetail@@UAEXAAU?$_matrix@M@@PAUfvfVertexOut@IRender_DetailModel@@IPAGIMM@Z
	DD	FLAT:?transfer@CDetail@@UAEXAAU?$_matrix@M@@PAUfvfVertexOut@IRender_DetailModel@@IPAGI@Z
	DD	FLAT:??_ECDetail@@UAEPAXI@Z
	DD	FLAT:?Unload@CDetail@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R4CDetail@@6B@
rdata$r	SEGMENT
??_R4CDetail@@6B@ DD 00H				; CDetail::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDetail@@@8
	DD	FLAT:??_R3CDetail@@8
rdata$r	ENDS
;	COMDAT ??_R4CDetailManager@@6B@
rdata$r	SEGMENT
??_R4CDetailManager@@6B@ DD 00H				; CDetailManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDetailManager@@@8
	DD	FLAT:??_R3CDetailManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDetail@@@8
data$rs	SEGMENT
??_R0?AVCDetail@@@8 DD FLAT:??_7type_info@@6B@		; CDetail `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDetail@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CDetail@@8
rdata$r	SEGMENT
??_R3CDetail@@8 DD 00H					; CDetail::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CDetail@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRender_DetailModel@@@8
data$rs	SEGMENT
??_R0?AVIRender_DetailModel@@@8 DD FLAT:??_7type_info@@6B@ ; IRender_DetailModel `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRender_DetailModel@@', 00H
data$rs	ENDS
;	COMDAT ??_R3IRender_DetailModel@@8
rdata$r	SEGMENT
??_R3IRender_DetailModel@@8 DD 00H			; IRender_DetailModel::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IRender_DetailModel@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDetailManager@@@8
data$rs	SEGMENT
??_R0?AVCDetailManager@@@8 DD FLAT:??_7type_info@@6B@	; CDetailManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDetailManager@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CDetailManager@@8
rdata$r	SEGMENT
??_R3CDetailManager@@8 DD 00H				; CDetailManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDetailManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRender_DetailModel@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRender_DetailModel@@8 DD FLAT:??_R0?AVIRender_DetailModel@@@8 ; IRender_DetailModel::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRender_DetailModel@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDetail@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDetail@@8 DD FLAT:??_R0?AVCDetail@@@8	; CDetail::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDetail@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDetailManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDetailManager@@8 DD FLAT:??_R0?AVCDetailManager@@@8 ; CDetailManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDetailManager@@8
rdata$r	ENDS
;	COMDAT ??_R2IRender_DetailModel@@8
rdata$r	SEGMENT
??_R2IRender_DetailModel@@8 DD FLAT:??_R1A@?0A@EA@IRender_DetailModel@@8 ; IRender_DetailModel::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R2CDetail@@8
rdata$r	SEGMENT
??_R2CDetail@@8 DD FLAT:??_R1A@?0A@EA@CDetail@@8	; CDetail::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IRender_DetailModel@@8
rdata$r	ENDS
;	COMDAT ??_R2CDetailManager@@8
rdata$r	SEGMENT
??_R2CDetailManager@@8 DD FLAT:??_R1A@?0A@EA@CDetailManager@@8 ; CDetailManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_C@_0BB@OIDILEGP@swing_fast_speed@
CONST	SEGMENT
??_C@_0BB@OIDILEGP@swing_fast_speed@ DB 'swing_fast_speed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BHLLJFKL@swing_fast_rot2@
CONST	SEGMENT
??_C@_0BA@BHLLJFKL@swing_fast_rot2@ DB 'swing_fast_rot2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DMJGMGGI@swing_fast_rot1@
CONST	SEGMENT
??_C@_0BA@DMJGMGGI@swing_fast_rot1@ DB 'swing_fast_rot1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JNPLBIKO@swing_fast_amp2@
CONST	SEGMENT
??_C@_0BA@JNPLBIKO@swing_fast_amp2@ DB 'swing_fast_amp2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LGNGELGN@swing_fast_amp1@
CONST	SEGMENT
??_C@_0BA@LGNGELGN@swing_fast_amp1@ DB 'swing_fast_amp1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HHENNFJP@swing_normal_speed@
CONST	SEGMENT
??_C@_0BD@HHENNFJP@swing_normal_speed@ DB 'swing_normal_speed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NNDOMAON@swing_normal_rot2@
CONST	SEGMENT
??_C@_0BC@NNDOMAON@swing_normal_rot2@ DB 'swing_normal_rot2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGBDJDCO@swing_normal_rot1@
CONST	SEGMENT
??_C@_0BC@PGBDJDCO@swing_normal_rot1@ DB 'swing_normal_rot1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FHHOENOI@swing_normal_amp2@
CONST	SEGMENT
??_C@_0BC@FHHOENOI@swing_normal_amp2@ DB 'swing_normal_amp2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CAOCFMEH@details@
CONST	SEGMENT
??_C@_07CAOCFMEH@details@ DB 'details', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HMFDBOCL@swing_normal_amp1@
CONST	SEGMENT
??_C@_0BC@HMFDBOCL@swing_normal_amp1@ DB 'swing_normal_amp1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OFEMNCKJ@dtH?4version?5?$DN?$DN?5DETAIL_VERSION@
CONST	SEGMENT
??_C@_0BO@OFEMNCKJ@dtH?4version?5?$DN?$DN?5DETAIL_VERSION@ DB 'dtH.versio'
	DB	'n == DETAIL_VERSION', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@KFPJDCKL@I?3?2Vitalya?2mine?2NSProjectX?2laye@
CONST	SEGMENT
??_C@_0DN@KFPJDCKL@I?3?2Vitalya?2mine?2NSProjectX?2laye@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\layers\xrRender\DetailManager.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GLPAKFBM@CDetailManager?3?3Load@
CONST	SEGMENT
??_C@_0BF@GLPAKFBM@CDetailManager?3?3Load@ DB 'CDetailManager::Load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DJIBDFPO@$level$@
CONST	SEGMENT
??_C@_07DJIBDFPO@$level$@ DB '$level$', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EKJDCOAB@level?4details@
CONST	SEGMENT
??_C@_0O@EKJDCOAB@level?4details@ DB 'level.details', 00H ; `string'
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??_I@YGXPAXIIP6EX0@Z@Z				; `vector destructor iterator'
PUBLIC	??0CacheSlot1@CDetailManager@@QAE@XZ		; CDetailManager::CacheSlot1::CacheSlot1
PUBLIC	?clear@vis_data@@QAEXXZ				; vis_data::clear
PUBLIC	?invalidate@?$_box3@M@@QAEAAV1@XZ		; _box3<float>::invalidate
PUBLIC	?max@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::max
PUBLIC	?set@?$_vector3@M@@QAEAAU1@MMM@Z		; _vector3<float>::set
PUBLIC	??0Slot@CDetailManager@@QAE@XZ			; CDetailManager::Slot::Slot
PUBLIC	??1SlotPart@CDetailManager@@QAE@XZ		; CDetailManager::SlotPart::~SlotPart
PUBLIC	??1?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAE@XZ ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::~xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >
PUBLIC	??1?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::~vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >
PUBLIC	?_Tidy@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXXZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Tidy
PUBLIC	?_Getal@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEAAV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QAEAAV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ ; std::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1>::_Get_first
PUBLIC	?deallocate@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEXPAPAUSlotItem@CDetailManager@@I@Z ; xalloc<CDetailManager::SlotItem *>::deallocate
PUBLIC	??$xr_free@PAUSlotItem@CDetailManager@@@@YAXAAPAPAUSlotItem@CDetailManager@@@Z ; xr_free<CDetailManager::SlotItem *>
PUBLIC	?_Destroy@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@0@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Destroy
PUBLIC	??$_Destroy_range@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@YAXPAPAUSlotItem@CDetailManager@@QAPAU12@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z ; std::_Destroy_range<xalloc<CDetailManager::SlotItem *> >
PUBLIC	??$_Unfancy@PAUSlotItem@CDetailManager@@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@@Z ; std::_Unfancy<CDetailManager::SlotItem *>
PUBLIC	??$destroy@PAUSlotItem@CDetailManager@@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@@Z ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::destroy<CDetailManager::SlotItem *>
PUBLIC	?destroy@?$xalloc@PAUSlotItem@CDetailManager@@@@QAEXPAPAUSlotItem@CDetailManager@@@Z ; xalloc<CDetailManager::SlotItem *>::destroy
PUBLIC	??$_Destroy_in_place@PAPAUSlotItem@CDetailManager@@@std@@YAXAAPAPAUSlotItem@CDetailManager@@@Z ; std::_Destroy_in_place<CDetailManager::SlotItem * *>
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	??0SlotPart@CDetailManager@@QAE@XZ		; CDetailManager::SlotPart::SlotPart
PUBLIC	??0?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAE@XZ ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >
PUBLIC	??0?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >
PUBLIC	?_Alloc_proxy@_Container_base0@std@@QAEXABU_Fake_allocator@2@@Z ; std::_Container_base0::_Alloc_proxy
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1>::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1><>
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >
PUBLIC	??0?$xalloc@PAUSlotItem@CDetailManager@@@@QAE@XZ ; xalloc<CDetailManager::SlotItem *>::xalloc<CDetailManager::SlotItem *>
PUBLIC	??0?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@XZ ; resptr_core<SGeometry,resptrcode_geom>::resptr_core<SGeometry,resptrcode_geom>
PUBLIC	??1?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@XZ ; resptr_core<SGeometry,resptrcode_geom>::~resptr_core<SGeometry,resptrcode_geom>
PUBLIC	??1?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@QAE@XZ ; resptr_core<R_constant,resptr_base<R_constant> >::~resptr_core<R_constant,resptr_base<R_constant> >
PUBLIC	?_dec@?$resptr_base@UR_constant@@@@IAEXXZ	; resptr_base<R_constant>::_dec
PUBLIC	??$xr_delete@UR_constant@@@@YAXAAPAUR_constant@@@Z ; xr_delete<R_constant>
PUBLIC	??R?$xr_special_free@$0A@UR_constant@@@@QAEXAAPAUR_constant@@@Z ; xr_special_free<0,R_constant>::operator()
PUBLIC	??_GR_constant@@QAEPAXI@Z			; R_constant::`scalar deleting destructor'
PUBLIC	??1R_constant@@QAE@XZ				; R_constant::~R_constant
PUBLIC	??4?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAEAAV0@ABV0@@Z ; resptr_core<SGeometry,resptrcode_geom>::operator=
PUBLIC	??0?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@PAUSGeometry@@_N@Z ; resptr_core<SGeometry,resptrcode_geom>::resptr_core<SGeometry,resptrcode_geom>
PUBLIC	?UseVS@CDetailManager@@QAE_NXZ			; CDetailManager::UseVS
PUBLIC	?randI@CRandom@@QAEHHH@Z			; CRandom::randI
PUBLIC	?randI@CRandom@@QAEHH@Z				; CRandom::randI
PUBLIC	?randI@CRandom@@QAEHXZ				; CRandom::randI
PUBLIC	?is@?$_flags@I@@QBEHI@Z				; _flags<unsigned int>::is
PUBLIC	?MT_SYNC@CDetailManager@@QAEXXZ			; CDetailManager::MT_SYNC
PUBLIC	?iFloor@@YAHM@Z					; iFloor
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	??0_Fake_proxy_ptr_impl@std@@QAE@ABU_Fake_allocator@1@ABU_Container_base0@1@@Z ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl
PUBLIC	?_Release@_Fake_proxy_ptr_impl@std@@QAEXXZ	; std::_Fake_proxy_ptr_impl::_Release
PUBLIC	??$construct@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV3@@Z ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::construct<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>
PUBLIC	??$forward@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAAAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z ; std::forward<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>
PUBLIC	??$_Emplace_back@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEXAAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_back<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>
PUBLIC	??$_Uninitialized_copy@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@0PAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ; std::_Uninitialized_copy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??$forward@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YA$$QAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@AAV1@@Z ; std::forward<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??$_Ucopy@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV2@00@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Ucopy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *>
PUBLIC	??$?0V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@$$V@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1><xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??0?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAE@ABV0@@Z ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	?select_on_container_copy_construction@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SA?AV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@ABV3@@Z ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::select_on_container_copy_construction
PUBLIC	?_Buy_raw@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXI@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Buy_raw
PUBLIC	??1?$_Tidy_guard@V?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@@std@@QAE@XZ ; std::_Tidy_guard<std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::~_Tidy_guard<std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
PUBLIC	??0?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@ABV01@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??0?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAE@ABV0@@Z ; xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	?construct@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@ABV2@@Z ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::construct
PUBLIC	??0?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAE@XZ ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1><>
PUBLIC	??$construct@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V1@@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@$$QAV3@@Z ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::construct<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
PUBLIC	??$forward@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV1@@Z ; std::forward<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
PUBLIC	?_Tidy@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXXZ ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Tidy
PUBLIC	??0?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??1?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::~vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??0?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAE@XZ ; xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??$_Destroy_in_place@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAXAAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ; std::_Destroy_in_place<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *>
PUBLIC	??$_Emplace_back@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEX$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Emplace_back<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
PUBLIC	??$move@AAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV1@@Z ; std::move<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > &>
PUBLIC	??$construct@PAUSlotItem@CDetailManager@@PAU12@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@$$QAPAU34@@Z ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::construct<CDetailManager::SlotItem *,CDetailManager::SlotItem *>
PUBLIC	??$forward@PAUSlotItem@CDetailManager@@@std@@YA$$QAPAUSlotItem@CDetailManager@@AAPAU12@@Z ; std::forward<CDetailManager::SlotItem *>
PUBLIC	??$construct@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@$$V@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::construct<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
PUBLIC	?destroy@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::destroy
PUBLIC	??$_Get_unwrapped@ABQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA?A_TABQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ; std::_Get_unwrapped<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > * const &>
PUBLIC	??$_Uninitialized_move@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAV1@0PAV1@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z ; std::_Uninitialized_move<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > *,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
PUBLIC	??$xr_alloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z ; xr_alloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
PUBLIC	??$_Destroy_in_place@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YAXAAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ; std::_Destroy_in_place<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > *>
PUBLIC	??$_Emplace_back@PAUSlotItem@CDetailManager@@@?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEX$$QAPAUSlotItem@CDetailManager@@@Z ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::_Emplace_back<CDetailManager::SlotItem *>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXXZ ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Emplace_back<>
PUBLIC	??$_Emplace_back@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEX$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_back<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	??$destroy@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::destroy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	?max_size@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEIXZ ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QBEABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ ; std::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1>::_Get_first
PUBLIC	?max_size@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAIABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::max_size
PUBLIC	?capacity@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QBEIXZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::capacity
PUBLIC	?_Umove_if_noexcept1@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@00U?$integral_constant@_N$00@2@@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Umove_if_noexcept1
PUBLIC	?_Getal@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Getal
PUBLIC	?allocate@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@IPBX@Z ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::allocate
PUBLIC	?destroy@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::destroy
PUBLIC	?max_size@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QBEIXZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::max_size
PUBLIC	?_Umove_if_noexcept@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@00@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Umove_if_noexcept
PUBLIC	?_Calculate_growth@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEII@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@II@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Change_array
PUBLIC	?_Xlength@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@CAXXZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Xlength
PUBLIC	??0?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::~_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@XZ ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::~_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@PAPAUSlotItem@CDetailManager@@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::~_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@XZ ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::_Release
PUBLIC	??$xr_alloc@PAUSlotItem@CDetailManager@@@@YAPAPAUSlotItem@CDetailManager@@I@Z ; xr_alloc<CDetailManager::SlotItem *>
PUBLIC	??$_Get_unwrapped@ABQAPAUSlotItem@CDetailManager@@@std@@YA?A_TABQAPAUSlotItem@CDetailManager@@@Z ; std::_Get_unwrapped<CDetailManager::SlotItem * * const &>
PUBLIC	??$_Uninitialized_move@PAPAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@YAPAPAUSlotItem@CDetailManager@@QAPAU12@0PAPAU12@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z ; std::_Uninitialized_move<CDetailManager::SlotItem * *,xalloc<CDetailManager::SlotItem *> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV1@IAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z ; std::_Uninitialized_value_construct_n<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
PUBLIC	??$xr_alloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@I@Z ; xr_alloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	??$xr_free@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@YAXAAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ; xr_free<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	??$_Get_unwrapped@ABQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA?A_TABQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ; std::_Get_unwrapped<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * * const &>
PUBLIC	??$_Uninitialized_move@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@0PAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ; std::_Uninitialized_move<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??$_Destroy_range@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ; std::_Destroy_range<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
PUBLIC	??$destroy@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::destroy<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
PUBLIC	??$_Unfancy@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV1@@Z ; std::_Unfancy<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
PUBLIC	??$move@AAPAUSlotItem@CDetailManager@@@std@@YA$$QAPAUSlotItem@CDetailManager@@AAPAU12@@Z ; std::move<CDetailManager::SlotItem * &>
PUBLIC	??$_To_address@PAPAUSlotItem@CDetailManager@@@std@@YA?A_PABQAPAUSlotItem@CDetailManager@@@Z ; std::_To_address<CDetailManager::SlotItem * *>
PUBLIC	??$_Copy_memmove@PAPAUSlotItem@CDetailManager@@PAPAU12@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@00@Z ; std::_Copy_memmove<CDetailManager::SlotItem * *,CDetailManager::SlotItem * *>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	?max_size@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEIXZ ; xalloc<CDetailManager::SlotItem *>::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QBEABV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ ; std::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1>::_Get_first
PUBLIC	?max_size@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEIXZ ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QBEABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Get_first
PUBLIC	?max_size@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAIABV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::max_size
PUBLIC	?capacity@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::capacity
PUBLIC	?_Umove_if_noexcept1@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@00U?$integral_constant@_N$00@2@@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Umove_if_noexcept1
PUBLIC	?_Getal@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEABV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Getal
PUBLIC	?max_size@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAIABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::max_size
PUBLIC	?capacity@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QBEIXZ ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::capacity
PUBLIC	?_Umove_if_noexcept1@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@00U?$integral_constant@_N$00@2@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Umove_if_noexcept1
PUBLIC	?_Getal@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Getal
PUBLIC	?allocate@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEPAPAUSlotItem@CDetailManager@@IPBX@Z ; xalloc<CDetailManager::SlotItem *>::allocate
PUBLIC	?construct@?$xalloc@PAUSlotItem@CDetailManager@@@@QAEXPAPAUSlotItem@CDetailManager@@ABQAU23@@Z ; xalloc<CDetailManager::SlotItem *>::construct
PUBLIC	?max_size@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::max_size
PUBLIC	?_Umove@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEPAPAUSlotItem@CDetailManager@@PAPAU34@00@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Umove
PUBLIC	?_Umove_if_noexcept@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@00@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Umove_if_noexcept
PUBLIC	?_Calculate_growth@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEII@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXQAPAUSlotItem@CDetailManager@@II@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@CAXXZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Xlength
PUBLIC	??0?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAE@XZ ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
PUBLIC	?_Ufill@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV3@IU_Value_init_tag@2@@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Ufill
PUBLIC	?_Orphan_range@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@0@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Orphan_range
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
PUBLIC	?allocate@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@IPBX@Z ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::allocate
PUBLIC	?deallocate@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@I@Z ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::deallocate
PUBLIC	?construct@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@ABQAV2@@Z ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::construct
PUBLIC	?max_size@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QBEIXZ ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::max_size
PUBLIC	?_Umove@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV3@00@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Umove
PUBLIC	?_Umove_if_noexcept@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@00@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@0@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEII@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@II@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@CAXXZ ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Xlength
PUBLIC	??R?$xr_special_free@$00VCDetail@@@@QAEXAAPAVCDetail@@@Z ; xr_special_free<1,CDetail>::operator()
PUBLIC	??_GCDetail@@UAEPAXI@Z				; CDetail::`scalar deleting destructor'
PUBLIC	??0CDetail@@QAE@XZ				; CDetail::CDetail
PUBLIC	??$xr_free@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@YAXAAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ; xr_free<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
PUBLIC	??$_Destroy_range@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAV1@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z ; std::_Destroy_range<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
PUBLIC	??$_Move_unchecked@PAPAUSlotItem@CDetailManager@@PAPAU12@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@00@Z ; std::_Move_unchecked<CDetailManager::SlotItem * *,CDetailManager::SlotItem * *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1>::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1><>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >
PUBLIC	??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Emplace_reallocate<CDetailManager::SlotItem * const &>
PUBLIC	??$construct@PAUSlotItem@CDetailManager@@ABQAU12@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@ABQAU34@@Z ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::construct<CDetailManager::SlotItem *,CDetailManager::SlotItem * const &>
PUBLIC	??$forward@ABQAUSlotItem@CDetailManager@@@std@@YAABQAUSlotItem@CDetailManager@@ABQAU12@@Z ; std::forward<CDetailManager::SlotItem * const &>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Resize<std::_Value_init_tag>
PUBLIC	??$xr_free@USlotItem@CDetailManager@@@@YAXAAPAUSlotItem@CDetailManager@@@Z ; xr_free<CDetailManager::SlotItem>
PUBLIC	??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_reallocate<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	??$construct@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAV1@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@$$QAPAV3@@Z ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::construct<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	??$_Unfancy@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV1@@Z ; std::_Unfancy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	??$forward@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z ; std::forward<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	??$move@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z ; std::move<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>
PUBLIC	??$xr_delete@VCDetail@@@@YAXAAPAVCDetail@@@Z	; xr_delete<CDetail>
PUBLIC	??$xr_new@VCDetail@@@@YAPAVCDetail@@XZ		; xr_new<CDetail>
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEXH@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::_Verify_offset
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator+=
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEXH@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::_Verify_offset
PUBLIC	?_Get_first@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QAEAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ ; std::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1>::_Get_first
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator+=
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator+=
PUBLIC	?size@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::size
PUBLIC	?deallocate@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::deallocate
PUBLIC	?clear@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXXZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::clear
PUBLIC	?_Destroy@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@0@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Destroy
PUBLIC	?_Getal@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Getal
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator+
PUBLIC	?_Get_first@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAEAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Get_first
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEABV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator*
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator+=
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >
PUBLIC	?erase@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@0@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::erase
PUBLIC	?_Orphan_range@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEXPAPAUSlotItem@CDetailManager@@0@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Orphan_range
PUBLIC	?size@?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QBEIXZ ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::size
PUBLIC	??A?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAEAAPAUSlotItem@CDetailManager@@I@Z ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::operator[]
PUBLIC	??0?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
PUBLIC	?begin@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@2@XZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::begin
PUBLIC	?_Tidy@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXXZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Tidy
PUBLIC	?clear_and_free@?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEXXZ ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::clear_and_free
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAE@PAPAUSlotItem@CDetailManager@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEABQAUSlotItem@CDetailManager@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator*
PUBLIC	?_Orphan_range@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@0@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Orphan_range
PUBLIC	?_Getal@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Getal
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEAAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator*
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator+
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAE@PAPAUSlotItem@CDetailManager@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >
PUBLIC	?distance_to_sqr@?$_vector3@M@@QBEMABU1@@Z	; _vector3<float>::distance_to_sqr
PUBLIC	??0?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@QAE@XZ ; resptr_core<R_constant,resptr_base<R_constant> >::resptr_core<R_constant,resptr_base<R_constant> >
PUBLIC	?data@?$_box3@M@@QBEPBMXZ			; _box3<float>::data
PUBLIC	??$_Emplace_back_with_unused_capacity@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAE?A_TABQAUSlotItem@CDetailManager@@@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Emplace_back_with_unused_capacity<CDetailManager::SlotItem * const &>
PUBLIC	??$emplace_back@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?A_TABQAUSlotItem@CDetailManager@@@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::emplace_back<CDetailManager::SlotItem * const &>
PUBLIC	?push_back@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEXABQAUSlotItem@CDetailManager@@@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::push_back
PUBLIC	?begin@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@XZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::begin
PUBLIC	?end@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@XZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::end
PUBLIC	?empty@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBE_NXZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::empty
PUBLIC	?clear_not_free@?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAEXXZ ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::clear_not_free
PUBLIC	??0?$svector@PAVCDetail@@$0EA@@@QAE@XZ		; svector<CDetail *,64>::svector<CDetail *,64>
PUBLIC	?begin@?$svector@PAVCDetail@@$0EA@@@QAEPAPAVCDetail@@XZ ; svector<CDetail *,64>::begin
PUBLIC	?end@?$svector@PAVCDetail@@$0EA@@@QAEPAPAVCDetail@@XZ ; svector<CDetail *,64>::end
PUBLIC	?size@?$svector@PAVCDetail@@$0EA@@@QBEIXZ	; svector<CDetail *,64>::size
PUBLIC	?clear@?$svector@PAVCDetail@@$0EA@@@QAEXXZ	; svector<CDetail *,64>::clear
PUBLIC	?push_back@?$svector@PAVCDetail@@$0EA@@@QAEXPAVCDetail@@@Z ; svector<CDetail *,64>::push_back
PUBLIC	??A?$svector@PAVCDetail@@$0EA@@@QAEAAPAVCDetail@@I@Z ; svector<CDetail *,64>::operator[]
PUBLIC	??1?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::~vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
PUBLIC	?resize@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXI@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::resize
PUBLIC	??0?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAE@XZ ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
PUBLIC	?clear@?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEXXZ ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::clear
PUBLIC	??A?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEAAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::operator[]
PUBLIC	??0?$svector@PAUSlot@CDetailManager@@$0JGB@@@QAE@XZ ; svector<CDetailManager::Slot *,2401>::svector<CDetailManager::Slot *,2401>
PUBLIC	??0?$poolSS@USlotItem@CDetailManager@@$0BAAA@@@QAE@XZ ; poolSS<CDetailManager::SlotItem,4096>::poolSS<CDetailManager::SlotItem,4096>
PUBLIC	??1?$poolSS@USlotItem@CDetailManager@@$0BAAA@@@QAE@XZ ; poolSS<CDetailManager::SlotItem,4096>::~poolSS<CDetailManager::SlotItem,4096>
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEAAPAUSlotItem@CDetailManager@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator*
PUBLIC	??$_Emplace_back_with_unused_capacity@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAE?A_T$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_back_with_unused_capacity<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	??$emplace_back@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE?A_T$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::emplace_back<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
PUBLIC	?push_back@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEX$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::push_back
PUBLIC	?MT_CALC@CDetailManager@@QAGXXZ			; CDetailManager::MT_CALC
PUBLIC	?Render@CDetailManager@@QAEXXZ			; CDetailManager::Render
PUBLIC	?UpdateVisibleM@CDetailManager@@QAEXXZ		; CDetailManager::UpdateVisibleM
PUBLIC	?Unload@CDetailManager@@QAEXXZ			; CDetailManager::Unload
PUBLIC	?Load@CDetailManager@@QAEXXZ			; CDetailManager::Load
PUBLIC	??1CDetailManager@@UAE@XZ			; CDetailManager::~CDetailManager
PUBLIC	??1Slot@CDetailManager@@QAE@XZ			; CDetailManager::Slot::~Slot
PUBLIC	??1?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAE@XZ ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::~xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
PUBLIC	??_GCDetailManager@@UAEPAXI@Z			; CDetailManager::`scalar deleting destructor'
PUBLIC	??0CDetailManager@@QAE@XZ			; CDetailManager::CDetailManager
PUBLIC	?lerp@SSwingValue@CDetailManager@@QAEXABU12@0M@Z ; CDetailManager::SSwingValue::lerp
PUBLIC	?bwdithermap@@YAXHQAY0BA@H@Z			; bwdithermap
EXTRN	??_ECDetail@@UAEPAXI@Z:PROC			; CDetail::`vector deleting destructor'
EXTRN	??_ECDetailManager@@UAEPAXI@Z:PROC		; CDetailManager::`vector deleting destructor'
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?Render@CDetailManager@@QAEXXZ
	DD	020H
	DD	0211H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?MT_CALC@CDetailManager@@QAGXXZ
	DD	03dH
	DD	054H
	DD	0204H
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z$2
__catchsym$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z$2
__catchsym$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z$2
__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z$0
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	0bH
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
_TEXT	SEGMENT
tv748 = -20						; size = 4
tv758 = -16						; size = 4
tv762 = -12						; size = 4
_magic$1$ = -8						; size = 4
tv682 = -4						; size = 4
?bwdithermap@@YAXHQAY0BA@H@Z PROC			; bwdithermap
; _levels$dead$ = ecx
; _magic$ = edx

; 35   : {

	sub	esp, 20					; 00000014H

; 36   : 	/* Get size of each step */
; 37   :     float N = 255.0f / (levels - 1);
; 38   : 
; 39   : 	/*
; 40   : 	* Expand 4x4 dither pattern to 16x16.  4x4 leaves obvious patterning,
; 41   : 	* and doesn't give us full intensity range (only 17 sublevels).
; 42   : 	*
; 43   : 	* magicfact is (N - 1)/16 so that we get numbers in the matrix from 0 to
; 44   : 	* N - 1: mod N gives numbers in 0 to N - 1, don't ever want all
; 45   : 	* pixels incremented to the next level (this is reserved for the
; 46   : 	* pixel value with mod N == 0 at the next level).
; 47   : 	*/
; 48   : 
; 49   :     float	magicfact = (N - 1) / 16;

	fld	QWORD PTR __real@3fefc00000000000
	mov	ecx, edx
	push	ebx
	push	ebp
	push	esi
	mov	DWORD PTR _magic$1$[esp+32], edx
	mov	eax, OFFSET ?magic4x4@@3PAY03HA
	push	edi
$LN4@bwditherma:

; 51   : 		for ( int j = 0; j < 4; j++ )

	mov	DWORD PTR tv748[esp+36], eax
	mov	DWORD PTR tv758[esp+36], ecx
	mov	DWORD PTR tv762[esp+36], 4
$LN7@bwditherma:

; 52   : 			for ( int k = 0; k < 4; k++ )

	cvtsi2ss xmm0, DWORD PTR [eax]
	mov	esi, OFFSET ?magic4x4@@3PAY03HA
	mov	ebp, ecx
	mulss	xmm0, DWORD PTR __real@417e0000
	addss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR tv682[esp+36], xmm0
	fld	DWORD PTR tv682[esp+36]
$LN10@bwditherma:

; 53   : 				for ( int l = 0; l < 4; l++ )

	mov	edi, ebp
	mov	ebx, 4
$LN13@bwditherma:

; 54   : 					magic[4*k+i][4*l+j] =

	fild	DWORD PTR [esi]
	fmul	ST(0), ST(2)
	fadd	ST(0), ST(1)
	call	__ftol2_sse
	add	esi, 4
	mov	DWORD PTR [edi], eax
	lea	edi, DWORD PTR [edi+16]
	sub	ebx, 1
	jne	SHORT $LN13@bwditherma

; 52   : 			for ( int k = 0; k < 4; k++ )

	add	ebp, 256				; 00000100H
	cmp	esi, OFFSET ?magic4x4@@3PAY03HA+64
	jl	SHORT $LN10@bwditherma
	mov	eax, DWORD PTR tv748[esp+36]
	fstp	ST(0)
	mov	ecx, DWORD PTR tv758[esp+36]
	add	eax, 4
	add	ecx, 4
	mov	DWORD PTR tv748[esp+36], eax
	sub	DWORD PTR tv762[esp+36], 1
	mov	DWORD PTR tv758[esp+36], ecx
	jne	SHORT $LN7@bwditherma

; 50   :     for ( int i = 0; i < 4; i++ )

	mov	ecx, DWORD PTR _magic$1$[esp+36]
	add	ecx, 64					; 00000040H
	mov	DWORD PTR _magic$1$[esp+36], ecx
	cmp	eax, OFFSET ?magic4x4@@3PAY03HA+64
	jl	$LN4@bwditherma

; 55   : 					(int)(0.5 + magic4x4[i][j] * magicfact +
; 56   : 					(magic4x4[k][l] / 16.) * magicfact);
; 57   : }

	pop	edi
	pop	esi
	pop	ebp
	fstp	ST(0)
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
?bwdithermap@@YAXHQAY0BA@H@Z ENDP			; bwdithermap
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
_TEXT	SEGMENT
_A$ = 8							; size = 4
_B$ = 12						; size = 4
_f$ = 16						; size = 4
?lerp@SSwingValue@CDetailManager@@QAEXABU12@0M@Z PROC	; CDetailManager::SSwingValue::lerp
; _this$ = ecx

; 62   : 	float fi	= 1.f-f;

	movss	xmm2, DWORD PTR _f$[esp-4]
	movss	xmm3, DWORD PTR __real@3f800000

; 63   : 	amp1		= fi*A.amp1  + f*B.amp1;

	movaps	xmm0, xmm2
	mov	edx, DWORD PTR _A$[esp-4]
	subss	xmm3, xmm2
	mov	eax, DWORD PTR _B$[esp-4]
	mulss	xmm0, DWORD PTR [eax+8]
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm1, xmm0

; 64   : 	amp2		= fi*A.amp2  + f*B.amp2;

	movaps	xmm0, xmm2
	movss	DWORD PTR [ecx+8], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [edx+12]
	mulss	xmm0, DWORD PTR [eax+12]
	addss	xmm1, xmm0

; 65   : 	rot1		= fi*A.rot1  + f*B.rot1;

	movaps	xmm0, xmm2
	movss	DWORD PTR [ecx+12], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR [eax]
	addss	xmm1, xmm0

; 66   : 	rot2		= fi*A.rot2  + f*B.rot2;

	movaps	xmm0, xmm2
	movss	DWORD PTR [ecx], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [eax+4]
	addss	xmm1, xmm0
	movss	DWORD PTR [ecx+4], xmm1

; 67   : 	speed		= fi*A.speed + f*B.speed;

	mulss	xmm3, DWORD PTR [edx+16]
	mulss	xmm2, DWORD PTR [eax+16]
	addss	xmm3, xmm2
	movss	DWORD PTR [ecx+16], xmm3

; 68   : }

	ret	12					; 0000000cH
?lerp@SSwingValue@CDetailManager@@QAEXABU12@0M@Z ENDP	; CDetailManager::SSwingValue::lerp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
_TEXT	SEGMENT
$T1 = -4						; size = 4
$T2 = -4						; size = 4
??0CDetailManager@@QAE@XZ PROC				; CDetailManager::CDetailManager
; _this$ = ecx

; 76   : {

	push	ecx
	push	ebx
	mov	ebx, ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebx], OFFSET ??_7CDetailManager@@6B@
	lea	ecx, DWORD PTR [ebx+1432]
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 21   : 	svector() : count(0) 

	mov	DWORD PTR [ebx+1392], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ebx+1396], 0
	mov	DWORD PTR [ebx+1408], 0
	mov	DWORD PTR [ebx+1400], 0
	mov	DWORD PTR [ebx+1404], 0
	mov	DWORD PTR [ebx+1412], 0
	mov	DWORD PTR [ebx+1416], 0
	mov	DWORD PTR [ebx+1420], 0
	mov	DWORD PTR [ebx+1424], 0
	mov	DWORD PTR [ebx+1428], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 76   : {

	call	DWORD PTR __imp_??0xrXRC@@QAE@XZ
	lea	eax, DWORD PTR [ebx+1456]
	mov	edx, 144				; 00000090H
	npad	9
$LL18@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h

; 73   : 		CacheSlot1()				{empty=1; vis.clear();}

	lea	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], 1
	call	?clear@vis_data@@QAEXXZ			; vis_data::clear
	lea	eax, DWORD PTR [eax+124]
	sub	edx, 1
	jne	SHORT $LL18@CDetailMan
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 21   : 	svector() : count(0) 

	mov	DWORD PTR [ebx+38520], edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 76   : {

	lea	esi, DWORD PTR [ebx+38524]
	mov	edi, 2401				; 00000961H
$LL26@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h

; 67   : 									Slot()				{ frame=0;empty=1; type=stReady; sx=sz=0; vis.clear(); }

	push	OFFSET ??0SlotPart@CDetailManager@@QAE@XZ
	push	4
	push	52					; 00000034H
	lea	eax, DWORD PTR [esi+68]
	push	eax
	call	??_H@YGXPAXIIP6EPAX0@Z@Z
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], 1
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+4], 0
	call	?clear@vis_data@@QAEXXZ			; vis_data::clear
	lea	esi, DWORD PTR [esi+276]
	sub	edi, 1
	jne	SHORT $LL26@CDetailMan
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 76   : {

	lea	ecx, DWORD PTR [ebx+701272]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ebx+701212], edi
	mov	DWORD PTR [ebx+701216], edi
	mov	DWORD PTR [ebx+701220], edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h

; 31   : 		list				= 0;

	mov	DWORD PTR [ebx+701208], edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [ebx+701224], edi
	mov	DWORD PTR [ebx+701228], edi
	mov	DWORD PTR [ebx+701244], edi
	mov	DWORD PTR [ebx+701248], edi
	mov	DWORD PTR [ebx+701252], edi
	mov	DWORD PTR [ebx+701256], edi
	mov	DWORD PTR [ebx+701260], edi
	mov	DWORD PTR [ebx+701264], edi
	mov	DWORD PTR [ebx+701268], edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 76   : {

	call	DWORD PTR __imp_??0xrCriticalSection@@QAE@XZ
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	lea	ecx, DWORD PTR [ebx+701224]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 77   : 	dtFS 		= 0;

	mov	DWORD PTR [ebx+1088], edi

; 78   : 	dtSlots		= 0;

	mov	DWORD PTR [ebx+1116], edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 62   : 						resptr_core		(T * p, bool add_ref = true) 					{	p_ = p;	if(add_ref)	_inc(); }

	mov	DWORD PTR $T2[esp+16], edi

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T2[esp+16]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	mov	DWORD PTR [ebx+701224], edi

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	lea	ecx, DWORD PTR [ebx+701228]

; 62   : 						resptr_core		(T * p, bool add_ref = true) 					{	p_ = p;	if(add_ref)	_inc(); }

	mov	DWORD PTR $T1[esp+16], edi

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T1[esp+16]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	mov	DWORD PTR [ebx+701228], edi

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 81   : 	hw_BatchSize= 0;

	mov	DWORD PTR [ebx+701232], edi

; 82   : 	hw_VB		= 0;
; 83   : 	hw_IB		= 0;
; 84   : }

	mov	eax, ebx
	mov	DWORD PTR [ebx+701236], edi
	mov	DWORD PTR [ebx+701240], edi
	pop	edi
	pop	esi
	pop	ebx
	pop	ecx
	ret	0
??0CDetailManager@@QAE@XZ ENDP				; CDetailManager::CDetailManager
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GCDetailManager@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDetailManager@@UAEPAXI@Z PROC			; CDetailManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CDetailManager@@UAE@XZ		; CDetailManager::~CDetailManager
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar
	push	701284					; 000ab364H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN4@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCDetailManager@@UAEPAXI@Z ENDP			; CDetailManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAE@XZ PROC ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::~xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >, COMDAT
; _this$ = ecx

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@xr_vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN6@xr_vector:
	pop	esi
	ret	0
??1?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAE@XZ ENDP ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::~xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1Slot@CDetailManager@@QAE@XZ
_TEXT	SEGMENT
??1Slot@CDetailManager@@QAE@XZ PROC			; CDetailManager::Slot::~Slot, COMDAT
; _this$ = ecx
	push	ebx
	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	push	esi
	push	edi
	mov	edi, 4
	lea	esi, DWORD PTR [ecx+288]
	npad	12
$LL39@Slot:
	push	OFFSET ??1?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAE@XZ
	lea	esi, DWORD PTR [esi-52]
	mov	edx, 12					; 0000000cH
	push	3
	lea	ecx, DWORD PTR [esi+4]
	dec	edi
	call	??_I@YGXPAXIIP6EX0@Z@Z

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi-8]
	test	eax, eax
	je	SHORT $LN30@Slot
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi-8], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi-4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi], 0
$LN30@Slot:
	test	edi, edi
	jne	SHORT $LL39@Slot
	pop	edi
	pop	esi
	pop	ebx
	ret	0
??1Slot@CDetailManager@@QAE@XZ ENDP			; CDetailManager::Slot::~Slot
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
_TEXT	SEGMENT
??1CDetailManager@@UAE@XZ PROC				; CDetailManager::~CDetailManager
; _this$ = ecx

; 87   : {

	push	ebp
	push	esi
	mov	esi, ecx
	push	edi

; 89   : }

	lea	ecx, DWORD PTR [esi+701272]
	mov	DWORD PTR [esi], OFFSET ??_7CDetailManager@@6B@
	call	DWORD PTR __imp_??1xrCriticalSection@@QAE@XZ
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	mov	eax, DWORD PTR [esi+701268]
	mov	ebp, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	test	eax, eax
	je	SHORT $LN10@CDetailMan
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+701268]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN10@CDetailMan
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN23@CDetailMan
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN23@CDetailMan
	mov	DWORD PTR [ecx+4], 0
$LN23@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [esi+701268]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+701268], 0
$LN10@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	mov	eax, DWORD PTR [esi+701264]
	test	eax, eax
	je	SHORT $LN32@CDetailMan
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+701264]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN32@CDetailMan
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN45@CDetailMan
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN45@CDetailMan
	mov	DWORD PTR [ecx+4], 0
$LN45@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [esi+701264]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+701264], 0
$LN32@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	mov	eax, DWORD PTR [esi+701260]
	test	eax, eax
	je	SHORT $LN54@CDetailMan
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+701260]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN54@CDetailMan
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN67@CDetailMan
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN67@CDetailMan
	mov	DWORD PTR [ecx+4], 0
$LN67@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [esi+701260]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+701260], 0
$LN54@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	mov	eax, DWORD PTR [esi+701256]
	test	eax, eax
	je	SHORT $LN76@CDetailMan
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+701256]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN76@CDetailMan
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN89@CDetailMan
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN89@CDetailMan
	mov	DWORD PTR [ecx+4], 0
$LN89@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [esi+701256]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+701256], 0
$LN76@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	mov	eax, DWORD PTR [esi+701252]
	test	eax, eax
	je	SHORT $LN98@CDetailMan
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+701252]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN98@CDetailMan
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN111@CDetailMan
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN111@CDetailMan
	mov	DWORD PTR [ecx+4], 0
$LN111@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [esi+701252]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+701252], 0
$LN98@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	mov	eax, DWORD PTR [esi+701248]
	test	eax, eax
	je	SHORT $LN120@CDetailMan
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+701248]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN120@CDetailMan
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN133@CDetailMan
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN133@CDetailMan
	mov	DWORD PTR [ecx+4], 0
$LN133@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [esi+701248]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+701248], 0
$LN120@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	mov	eax, DWORD PTR [esi+701244]
	test	eax, eax
	je	SHORT $LN142@CDetailMan
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+701244]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN142@CDetailMan
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN155@CDetailMan
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN155@CDetailMan
	mov	DWORD PTR [ecx+4], 0
$LN155@CDetailMan:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [esi+701244]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+701244], 0
$LN142@CDetailMan:
	push	ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 89   : }

	lea	ecx, DWORD PTR [esi+701228]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 89   : }

	lea	ecx, DWORD PTR [esi+701224]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 89   : }

	lea	ecx, DWORD PTR [esi+701208]
	call	??1?$poolSS@USlotItem@CDetailManager@@$0BAAA@@@QAE@XZ ; poolSS<CDetailManager::SlotItem,4096>::~poolSS<CDetailManager::SlotItem,4096>
	mov	edi, 2401				; 00000961H
	lea	ebx, DWORD PTR [esi+701268]
	npad	3
$LL162@CDetailMan:
	push	OFFSET ??1SlotPart@CDetailManager@@QAE@XZ
	sub	ebx, 276				; 00000114H
	mov	edx, 52					; 00000034H
	push	4
	mov	ecx, ebx
	call	??_I@YGXPAXIIP6EX0@Z@Z
	sub	edi, 1
	jne	SHORT $LL162@CDetailMan
	add	esi, 1432				; 00000598H
	mov	ecx, esi
	call	DWORD PTR __imp_??1xrXRC@@QAE@XZ
	mov	edi, 3
	pop	ebx
$LL222@CDetailMan:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi-12]
	lea	esi, DWORD PTR [esi-12]
	dec	edi
	test	eax, eax
	je	SHORT $LN210@CDetailMan
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN210@CDetailMan:
	test	edi, edi
	jne	SHORT $LL222@CDetailMan
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 89   : }

	pop	edi
	pop	esi
	pop	ebp
	ret	0
??1CDetailManager@@UAE@XZ ENDP				; CDetailManager::~CDetailManager
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager_CACHE.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager_soft.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
_TEXT	SEGMENT
tv2789 = -548						; size = 4
tv2768 = -548						; size = 4
tv2760 = -548						; size = 4
_m_fs$1$ = -548						; size = 4
_this$1$ = -544						; size = 4
tv2771 = -540						; size = 4
tv2712 = -540						; size = 4
tv2757 = -536						; size = 4
_m_count$1$ = -536					; size = 4
$T2 = -529						; size = 1
tv2759 = -528						; size = 4
tv2719 = -524						; size = 4
_fn$ = -520						; size = 520
?Load@CDetailManager@@QAEXXZ PROC			; CDetailManager::Load
; _this$ = ecx

; 104  : {

	sub	esp, 548				; 00000224H
	push	ebx
	mov	ebx, ecx

; 105  : 	// Open file stream
; 106  : 	if (!FS.exist("$level$","level.details"))

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	push	OFFSET ??_C@_0O@EKJDCOAB@level?4details@
	push	OFFSET ??_C@_07DJIBDFPO@$level$@
	mov	DWORD PTR _this$1$[esp+560], ebx
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@PBD0@Z
	test	eax, eax
	jne	SHORT $LN11@Load

; 107  : 	{
; 108  : 		dtFS	= NULL;

	mov	DWORD PTR [ebx+1088], eax
	pop	ebx

; 162  : }

	add	esp, 548				; 00000224H
	ret	0
$LN11@Load:

; 109  : 		return;
; 110  : 	}
; 111  : 
; 112  : 	string_path			fn;
; 113  : 	FS.update_path		(fn,"$level$","level.details");

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fn$[esp+552]
	push	ebp
	push	esi
	push	edi
	mov	ecx, DWORD PTR [ecx]
	push	OFFSET ??_C@_0O@EKJDCOAB@level?4details@
	push	OFFSET ??_C@_07DJIBDFPO@$level$@
	push	eax
	call	DWORD PTR __imp_?update_path@CLocatorAPI@@QAEPBDAAY0CAI@DPBD1@Z

; 114  : 	dtFS				= FS.r_open(fn);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fn$[esp+564]
	push	eax
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_open@CLocatorAPI@@QAEPAVIReader@@PBD@Z

; 115  : 
; 116  : 	// Header
; 117  : 	dtFS->r_chunk_safe	(0,&dtH,sizeof(dtH));

	push	24					; 00000018H
	lea	esi, DWORD PTR [ebx+1092]
	mov	DWORD PTR [ebx+1088], eax
	push	esi
	push	0
	mov	ecx, eax
	call	DWORD PTR __imp_?r_chunk_safe@?$IReaderBase@VIReader@@@@QAEHIPAXI@Z

; 118  : 	R_ASSERT			(dtH.version == DETAIL_VERSION);

	cmp	BYTE PTR ?ignore_always@?6??Load@CDetailManager@@QAEXXZ@4_NA, 0
	jne	SHORT $LN2@Load
	cmp	DWORD PTR [esi], 3
	je	SHORT $LN2@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?6??Load@CDetailManager@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BF@GLPAKFBM@CDetailManager?3?3Load@
	push	118					; 00000076H
	push	OFFSET ??_C@_0DN@KFPJDCKL@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BO@OFEMNCKJ@dtH?4version?5?$DN?$DN?5DETAIL_VERSION@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN2@Load:

; 119  : 	u32 m_count			= dtH.object_count;

	mov	edi, DWORD PTR [ebx+1096]

; 120  : 
; 121  : 	// Models
; 122  : 	IReader* m_fs		= dtFS->open_chunk(1);

	mov	ecx, DWORD PTR [ebx+1088]
	mov	esi, DWORD PTR __imp_?open_chunk@IReader@@QAEPAV1@I@Z
	push	1
	mov	DWORD PTR _m_count$1$[esp+568], edi
	call	esi
	xor	ebp, ebp
	mov	DWORD PTR _m_fs$1$[esp+564], eax

; 123  : 	for (u32 m_id = 0; m_id < m_count; m_id++)

	test	edi, edi
	mov	edi, DWORD PTR __imp_?close@IReader@@QAEXXZ
	je	SHORT $LN6@Load
	npad	3
$LL7@Load:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	76					; 0000004cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	push	76					; 0000004cH
	mov	edi, eax
	push	0
	push	edi
	call	_memset
	add	esp, 12					; 0000000cH
	mov	ecx, edi
	call	DWORD PTR __imp_??0IRender_DetailModel@@QAE@XZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 126  : 		IReader* S			= m_fs->open_chunk(m_id);

	mov	ecx, DWORD PTR _m_fs$1$[esp+564]
	push	ebp
	mov	DWORD PTR [edi], OFFSET ??_7CDetail@@6B@
	call	esi
	mov	esi, eax

; 127  : 		dt->Load			(S);

	mov	ecx, edi
	push	esi
	call	?Load@CDetail@@QAEXPAVIReader@@@Z	; CDetail::Load
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 35   : 	IC void		push_back(value_type e)		{ VERIFY(count<dim); array[count++]=e;	}

	mov	ecx, DWORD PTR [ebx+1392]
	mov	DWORD PTR [ebx+ecx*4+1136], edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 129  : 		S->close			();

	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 35   : 	IC void		push_back(value_type e)		{ VERIFY(count<dim); array[count++]=e;	}

	inc	DWORD PTR [ebx+1392]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 129  : 		S->close			();

	mov	edi, DWORD PTR __imp_?close@IReader@@QAEXXZ
	call	edi
	mov	esi, DWORD PTR __imp_?open_chunk@IReader@@QAEPAV1@I@Z
	inc	ebp
	cmp	ebp, DWORD PTR _m_count$1$[esp+564]
	jb	SHORT $LL7@Load
	mov	eax, DWORD PTR _m_fs$1$[esp+564]
$LN6@Load:

; 130  : 	}
; 131  : 	m_fs->close		();

	mov	ecx, eax
	call	edi

; 132  : 
; 133  : 	// Get pointer to database (slots)
; 134  : 	IReader* m_slots	= dtFS->open_chunk(2);

	mov	ecx, DWORD PTR [ebx+1088]
	push	2
	call	esi
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 264  : 	IC void*		pointer		()	const		{	return &(data[Pos]);	};

	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR [eax+4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 135  : 	dtSlots				= (DetailSlot*)m_slots->pointer();

	mov	DWORD PTR [ebx+1116], ecx

; 136  : 	m_slots->close		();

	mov	ecx, eax
	call	edi
	lea	esi, DWORD PTR [ebx+1400]
	mov	DWORD PTR tv2789[esp+564], 3
$LL10@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1250 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	ecx, DWORD PTR [esi]
	mov	eax, ecx
	mov	ebp, DWORD PTR [esi-4]
	sub	eax, ebp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 139  : 	for (u32 i=0; i<3; ++i)	m_visibles[i].resize(objects.size());

	mov	edx, DWORD PTR [ebx+1392]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1250 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	sar	eax, 2
	imul	edi, eax, -1431655765

; 1251 :         if (_Newsize < _Oldsize) { // trim

	cmp	edx, edi
	jae	SHORT $LN30@Load

; 1252 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	eax, DWORD PTR [edx+edx*2]
	lea	eax, DWORD PTR [eax*4]
	add	eax, ebp

; 1253 :             _Orphan_range(_Newlast, _Mylast);
; 1254 :             _Destroy(_Newlast, _Mylast);
; 1255 :             _Mylast = _Newlast;

	mov	DWORD PTR [esi], eax

; 1256 :             return;

	jmp	SHORT $LN8@Load
$LN30@Load:

; 1257 :         }
; 1258 : 
; 1259 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN8@Load

; 1260 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	eax, DWORD PTR [esi+4]
	sub	eax, ebp
	sar	eax, 2
	imul	eax, eax, -1431655765

; 1261 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	edx, eax
	jbe	SHORT $LN32@Load

; 1262 :                 _Resize_reallocate(_Newsize, _Val);

	lea	eax, DWORD PTR $T2[esp+564]
	push	eax
	push	edx
	lea	ecx, DWORD PTR [esi-4]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Resize_reallocate<std::_Value_init_tag>

; 1263 :                 return;

	jmp	SHORT $LN8@Load
$LN32@Load:

; 1267 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

	sub	edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1813 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN38@Load
	npad	6
$LL39@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1621 :         ++_Last;

	add	ecx, 12					; 0000000cH

; 1813 :     for (; 0 < _Count; --_Count) {

	sub	edx, 1
	jne	SHORT $LL39@Load
$LN38@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1267 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

	mov	DWORD PTR [esi], ecx
$LN8@Load:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 139  : 	for (u32 i=0; i<3; ++i)	m_visibles[i].resize(objects.size());

	add	esi, 12					; 0000000cH
	sub	DWORD PTR tv2789[esp+564], 1
	jne	$LL10@Load
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager_CACHE.cpp

; 7    : 	cache_cx			= 0;

	mov	DWORD PTR [ebx+701200], 0

; 8    : 	cache_cz			= 0;
; 9    : 
; 10   : 	// Initialize cache-grid
; 11   : 	Slot*	slt 		= cache_pool;

	lea	edi, DWORD PTR [ebx+38524]
	mov	DWORD PTR [ebx+701204], 0
	xor	ebp, ebp
	add	ebx, 19312				; 00004b70H
	npad	2
$LL60@Load:

; 13   : 		for (u32 j=0; j<dm_cache_line; j++, slt++){

	xor	esi, esi
$LL63@Load:

; 14   : 			cache			[i][j]	= slt;
; 15   : 			cache_Task		(j,i,slt);

	mov	ecx, DWORD PTR _this$1$[esp+564]
	push	edi
	push	ebp
	push	esi
	mov	DWORD PTR [ebx], edi
	call	?cache_Task@CDetailManager@@QAEXHHPAUSlot@1@@Z ; CDetailManager::cache_Task
	inc	esi
	add	ebx, 4
	add	edi, 276				; 00000114H
	cmp	esi, 49					; 00000031H
	jb	SHORT $LL63@Load

; 12   : 	for (u32 i=0; i<dm_cache_line; i++)

	inc	ebp
	cmp	ebp, 49					; 00000031H
	jb	SHORT $LL60@Load

; 16   : 		}
; 17   : 	VERIFY	(cache_Validate());
; 18   : 
; 19   :     for (int _mz1=0; _mz1<dm_cache1_line; _mz1++){

	mov	eax, DWORD PTR _this$1$[esp+564]
	mov	DWORD PTR tv2771[esp+564], 12		; 0000000cH
	lea	edi, DWORD PTR [eax+1520]
	add	eax, 19320				; 00004b78H
	mov	DWORD PTR tv2768[esp+564], eax
$LL69@Load:

; 20   :     	for (int _mx1=0; _mx1<dm_cache1_line; _mx1++){

	mov	ebx, eax
	mov	ebp, 12					; 0000000cH
$LL72@Load:

; 21   : 		    CacheSlot1& MS 	= cache_level1[_mz1][_mx1];

	mov	ecx, edi
	mov	edx, ebx
	mov	esi, 4
$LL75@Load:

; 22   : 			for (int _z=0; _z<dm_cache1_count; _z++)
; 23   : 				for (int _x=0; _x<dm_cache1_count; _x++)
; 24   : 					MS.slots[_z*dm_cache1_count+_x] = &cache[_mz1*dm_cache1_count+_z][_mx1*dm_cache1_count+_x];

	lea	eax, DWORD PTR [edx-8]
	mov	DWORD PTR [ecx+4], edx
	mov	DWORD PTR [ecx-4], eax
	lea	ecx, DWORD PTR [ecx+16]
	lea	eax, DWORD PTR [edx-4]
	mov	DWORD PTR [ecx-16], eax
	lea	eax, DWORD PTR [edx+4]
	add	edx, 196				; 000000c4H
	mov	DWORD PTR [ecx-8], eax
	sub	esi, 1
	jne	SHORT $LL75@Load

; 20   :     	for (int _mx1=0; _mx1<dm_cache1_line; _mx1++){

	add	edi, 124				; 0000007cH
	add	ebx, 16					; 00000010H
	sub	ebp, 1
	jne	SHORT $LL72@Load

; 16   : 		}
; 17   : 	VERIFY	(cache_Validate());
; 18   : 
; 19   :     for (int _mz1=0; _mz1<dm_cache1_line; _mz1++){

	mov	eax, DWORD PTR tv2768[esp+564]
	add	eax, 784				; 00000310H
	sub	DWORD PTR tv2771[esp+564], 1
	mov	DWORD PTR tv2768[esp+564], eax
	jne	SHORT $LL69@Load
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 49   :     float	magicfact = (N - 1) / 16;

	mov	ecx, DWORD PTR _this$1$[esp+564]
	mov	eax, OFFSET ?magic4x4@@3PAY03HA
	fld	QWORD PTR __real@3fefc00000000000
	add	ecx, 4
	mov	DWORD PTR tv2757[esp+564], ecx
$LN83@Load:

; 51   : 		for ( int j = 0; j < 4; j++ )

	mov	DWORD PTR tv2712[esp+564], eax
	mov	DWORD PTR tv2760[esp+564], ecx
	mov	DWORD PTR tv2759[esp+564], 4
$LN86@Load:
	cvtsi2ss xmm0, DWORD PTR [eax]

; 52   : 			for ( int k = 0; k < 4; k++ )

	mov	esi, OFFSET ?magic4x4@@3PAY03HA
	mov	ebp, ecx
	mulss	xmm0, DWORD PTR __real@417e0000
	addss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR tv2719[esp+564], xmm0
	fld	DWORD PTR tv2719[esp+564]
$LN89@Load:

; 53   : 				for ( int l = 0; l < 4; l++ )

	mov	edi, ebp
	mov	ebx, 4
$LN92@Load:

; 54   : 					magic[4*k+i][4*l+j] =

	fild	DWORD PTR [esi]
	fmul	ST(0), ST(2)
	fadd	ST(0), ST(1)
	call	__ftol2_sse
	add	esi, 4
	mov	DWORD PTR [edi], eax
	lea	edi, DWORD PTR [edi+16]
	sub	ebx, 1
	jne	SHORT $LN92@Load

; 52   : 			for ( int k = 0; k < 4; k++ )

	add	ebp, 256				; 00000100H
	cmp	esi, OFFSET ?magic4x4@@3PAY03HA+64
	jl	SHORT $LN89@Load
	mov	eax, DWORD PTR tv2712[esp+564]
	fstp	ST(0)
	mov	ecx, DWORD PTR tv2760[esp+564]
	add	eax, 4
	add	ecx, 4
	mov	DWORD PTR tv2712[esp+564], eax
	sub	DWORD PTR tv2759[esp+564], 1
	mov	DWORD PTR tv2760[esp+564], ecx
	jne	SHORT $LN86@Load

; 50   :     for ( int i = 0; i < 4; i++ )

	mov	ecx, DWORD PTR tv2757[esp+564]
	add	ecx, 64					; 00000040H
	mov	DWORD PTR tv2757[esp+564], ecx
	cmp	eax, OFFSET ?magic4x4@@3PAY03HA+64
	jl	$LN83@Load
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h

; 123  : 	IC bool							UseVS			()		{ return HW.Caps.geometry_major >= 1; }

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 50   :     for ( int i = 0; i < 4; i++ )

	fstp	ST(0)

; 146  : 	if (UseVS())	hw_Load		();

	mov	ebx, DWORD PTR _this$1$[esp+564]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h

; 123  : 	IC bool							UseVS			()		{ return HW.Caps.geometry_major >= 1; }

	pop	edi
	pop	esi
	cmp	WORD PTR [eax+48], 1
	pop	ebp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 146  : 	if (UseVS())	hw_Load		();

	jb	SHORT $LN13@Load
	mov	ecx, ebx
	call	?hw_Load@CDetailManager@@QAEXXZ		; CDetailManager::hw_Load
	jmp	SHORT $LN14@Load
$LN13@Load:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager_soft.cpp

; 11   : 	soft_Geom.create				(D3DFVF_XYZ | D3DFVF_DIFFUSE | D3DFVF_TEX1, RCache.Vertex.Buffer(), RCache.Index.Buffer());

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [ebx+701224]
	push	DWORD PTR [eax+20]
	push	DWORD PTR [eax]
	push	322					; 00000142H
	call	DWORD PTR __imp_?create@resptrcode_geom@@QAEXIPAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z
$LN14@Load:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 151  : 	swing_desc[0].amp1	= pSettings->r_float("details","swing_normal_amp1");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	OFFSET ??_C@_0BC@HMFDBOCL@swing_normal_amp1@
	push	OFFSET ??_C@_07CAOCFMEH@details@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_float@CInifile@@QAEMPBD0@Z

; 152  : 	swing_desc[0].amp2	= pSettings->r_float("details","swing_normal_amp2");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	OFFSET ??_C@_0BC@FHHOENOI@swing_normal_amp2@
	fstp	DWORD PTR [ebx+1036]
	push	OFFSET ??_C@_07CAOCFMEH@details@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_float@CInifile@@QAEMPBD0@Z

; 153  : 	swing_desc[0].rot1	= pSettings->r_float("details","swing_normal_rot1");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	OFFSET ??_C@_0BC@PGBDJDCO@swing_normal_rot1@
	fstp	DWORD PTR [ebx+1040]
	push	OFFSET ??_C@_07CAOCFMEH@details@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_float@CInifile@@QAEMPBD0@Z

; 154  : 	swing_desc[0].rot2	= pSettings->r_float("details","swing_normal_rot2");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	OFFSET ??_C@_0BC@NNDOMAON@swing_normal_rot2@
	fstp	DWORD PTR [ebx+1028]
	push	OFFSET ??_C@_07CAOCFMEH@details@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_float@CInifile@@QAEMPBD0@Z

; 155  : 	swing_desc[0].speed	= pSettings->r_float("details","swing_normal_speed");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	OFFSET ??_C@_0BD@HHENNFJP@swing_normal_speed@
	fstp	DWORD PTR [ebx+1032]
	push	OFFSET ??_C@_07CAOCFMEH@details@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_float@CInifile@@QAEMPBD0@Z

; 156  : 	// fast
; 157  : 	swing_desc[1].amp1	= pSettings->r_float("details","swing_fast_amp1");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	OFFSET ??_C@_0BA@LGNGELGN@swing_fast_amp1@
	fstp	DWORD PTR [ebx+1044]
	push	OFFSET ??_C@_07CAOCFMEH@details@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_float@CInifile@@QAEMPBD0@Z

; 158  : 	swing_desc[1].amp2	= pSettings->r_float("details","swing_fast_amp2");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	OFFSET ??_C@_0BA@JNPLBIKO@swing_fast_amp2@
	fstp	DWORD PTR [ebx+1056]
	push	OFFSET ??_C@_07CAOCFMEH@details@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_float@CInifile@@QAEMPBD0@Z

; 159  : 	swing_desc[1].rot1	= pSettings->r_float("details","swing_fast_rot1");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	OFFSET ??_C@_0BA@DMJGMGGI@swing_fast_rot1@
	fstp	DWORD PTR [ebx+1060]
	push	OFFSET ??_C@_07CAOCFMEH@details@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_float@CInifile@@QAEMPBD0@Z

; 160  : 	swing_desc[1].rot2	= pSettings->r_float("details","swing_fast_rot2");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	OFFSET ??_C@_0BA@BHLLJFKL@swing_fast_rot2@
	fstp	DWORD PTR [ebx+1048]
	push	OFFSET ??_C@_07CAOCFMEH@details@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_float@CInifile@@QAEMPBD0@Z

; 161  : 	swing_desc[1].speed	= pSettings->r_float("details","swing_fast_speed");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	OFFSET ??_C@_0BB@OIDILEGP@swing_fast_speed@
	fstp	DWORD PTR [ebx+1052]
	push	OFFSET ??_C@_07CAOCFMEH@details@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_float@CInifile@@QAEMPBD0@Z
	fstp	DWORD PTR [ebx+1064]
	pop	ebx

; 162  : }

	add	esp, 548				; 00000224H
	ret	0
?Load@CDetailManager@@QAEXXZ ENDP			; CDetailManager::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager_VS.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
_TEXT	SEGMENT
?Unload@CDetailManager@@QAEXXZ PROC			; CDetailManager::Unload
; _this$ = ecx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h

; 123  : 	IC bool							UseVS			()		{ return HW.Caps.geometry_major >= 1; }

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 165  : {

	push	ebx
	push	esi
	mov	ebx, ecx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h

; 123  : 	IC bool							UseVS			()		{ return HW.Caps.geometry_major >= 1; }

	cmp	WORD PTR [eax+48], 1
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 166  : 	if (UseVS())	hw_Unload	();

	jb	SHORT $LN5@Unload
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	lea	ecx, DWORD PTR [ebx+701228]
	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
	mov	DWORD PTR [ebx+701228], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager_VS.cpp

; 131  : 	_RELEASE					(hw_IB);

	mov	ecx, DWORD PTR [ebx+701240]
	test	ecx, ecx
	je	SHORT $LN11@Unload
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [ebx+701240], 0
$LN11@Unload:

; 132  : 	_RELEASE					(hw_VB);

	mov	ecx, DWORD PTR [ebx+701236]
	test	ecx, ecx
	je	SHORT $LN6@Unload
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [ebx+701236], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 166  : 	if (UseVS())	hw_Unload	();

	jmp	SHORT $LN6@Unload
$LN5@Unload:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	lea	ecx, DWORD PTR [ebx+701224]
	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
	mov	DWORD PTR [ebx+701224], 0
$LN6@Unload:
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 27   : 	IC iterator	end	 ()						{ return array+count;					}

	mov	eax, DWORD PTR [ebx+1392]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 169  : 	for (DetailIt it=objects.begin(); it!=objects.end(); it++){

	lea	esi, DWORD PTR [ebx+1136]
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 27   : 	IC iterator	end	 ()						{ return array+count;					}

	lea	eax, DWORD PTR [esi+eax*4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 169  : 	for (DetailIt it=objects.begin(); it!=objects.end(); it++){

	cmp	esi, eax
	je	SHORT $LN3@Unload
	push	ebp
	push	edi
	mov	ebp, esi
	npad	7
$LL4@Unload:

; 170  : 		(*it)->Unload();

	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+12]
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@Unload

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+8]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi], 0
$LN2@Unload:
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 27   : 	IC iterator	end	 ()						{ return array+count;					}

	mov	eax, DWORD PTR [ebp+256]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 169  : 	for (DetailIt it=objects.begin(); it!=objects.end(); it++){

	add	esi, 4
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 27   : 	IC iterator	end	 ()						{ return array+count;					}

	lea	eax, DWORD PTR [eax*4]
	add	eax, ebp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 169  : 	for (DetailIt it=objects.begin(); it!=objects.end(); it++){

	cmp	esi, eax
	jne	SHORT $LL4@Unload
	pop	edi
	pop	ebp
$LN3@Unload:

; 171  : 		xr_delete		(*it);
; 172  :     }
; 173  : 	objects.clear		();
; 174  : 	m_visibles[0].clear	();

	mov	eax, DWORD PTR [ebx+1396]

; 175  : 	m_visibles[1].clear	();
; 176  : 	m_visibles[2].clear	();
; 177  : 	FS.r_close			(dtFS);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	DWORD PTR [ebx+1400], eax
	mov	eax, DWORD PTR [ebx+1408]
	mov	DWORD PTR [ebx+1412], eax
	mov	eax, DWORD PTR [ebx+1420]
	mov	DWORD PTR [ebx+1424], eax
	lea	eax, DWORD PTR [ebx+1088]
	mov	DWORD PTR [ebx+1392], 0
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR __imp_?r_close@CLocatorAPI@@QAEXAAPAVIReader@@@Z
	pop	esi
	pop	ebx

; 178  : }

	ret	0
?Unload@CDetailManager@@QAEXXZ ENDP			; CDetailManager::Unload
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\HOM.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\HOM.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
_TEXT	SEGMENT
_S$1$ = -328						; size = 4
$T1 = -328						; size = 4
$T2 = -328						; size = 4
$T3 = -328						; size = 4
_res$1$ = -324						; size = 4
$T4 = -320						; size = 4
__mask$5 = -320						; size = 4
_mask$6 = -316						; size = 4
_alpha$1$ = -312					; size = 4
tv2458 = -308						; size = 4
_this$1$ = -304						; size = 4
tv2434 = -300						; size = 4
tv2460 = -296						; size = 4
tv2424 = -292						; size = 4
tv2461 = -288						; size = 4
tv2463 = -284						; size = 4
_r_ssaCHEAP$1$ = -280					; size = 4
_Rq_drcp$1$ = -276					; size = 4
_alpha_i$1$ = -272					; size = 4
tv2429 = -268						; size = 4
_dist_sq_rcp$1$ = -264					; size = 4
_EYE$ = -260						; size = 12
_View$ = -248						; size = 244
?UpdateVisibleM@CDetailManager@@QAEXXZ PROC		; CDetailManager::UpdateVisibleM
; _this$ = ecx

; 183  : {

	sub	esp, 332				; 0000014cH

; 184  : 	Fvector		EYE				= Device.vCameraPosition;

	mov	edx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	push	ebx
	push	ebp
	push	esi
	mov	eax, DWORD PTR [edx+488]
	mov	ebx, ecx
	mov	DWORD PTR _EYE$[esp+344], eax

; 185  : 	
; 186  : 	CFrustum	View;
; 187  : 	View.CreateFromMatrix		(Device.mFullTransform, FRUSTUM_P_LRTB + FRUSTUM_P_FAR);

	lea	ecx, DWORD PTR _View$[esp+344]
	mov	eax, DWORD PTR [edx+492]
	mov	DWORD PTR _EYE$[esp+348], eax
	mov	eax, DWORD PTR [edx+496]
	push	edi
	mov	DWORD PTR _EYE$[esp+356], eax
	lea	eax, DWORD PTR [edx+664]
	push	47					; 0000002fH
	push	eax
	mov	DWORD PTR _this$1$[esp+356], ebx
	call	DWORD PTR __imp_?CreateFromMatrix@CFrustum@@QAEXAAU?$_matrix@M@@I@Z

; 196  : 	Device.Statistic->RenderDUMP_DT_VIS.Begin	();

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	movss	xmm0, DWORD PTR ?r_ssaDISCARD@@3MA
	mulss	xmm0, DWORD PTR __real@41800000
	mov	esi, DWORD PTR [eax+436]
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 173  : 	ICF void	Begin			()		{	if (!g_bEnableStatGather) return;	count++; T.Start();				}

	mov	eax, DWORD PTR __imp_?g_bEnableStatGather@@3HA
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 196  : 	Device.Statistic->RenderDUMP_DT_VIS.Begin	();

	add	esi, 2248				; 000008c8H
	movss	DWORD PTR _r_ssaCHEAP$1$[esp+348], xmm0
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 173  : 	ICF void	Begin			()		{	if (!g_bEnableStatGather) return;	count++; T.Start();				}

	cmp	DWORD PTR [eax], 0
	je	SHORT $LN286@UpdateVisi
	inc	DWORD PTR [esi+68]

; 73   : 		if (bPause)

	cmp	DWORD PTR [esi+24], 0
	jne	SHORT $LN286@UpdateVisi

; 29   : 	ICF	void	Start			()		{	if(bPause) return;	qwStartTime = CPU::QPC()-qwPauseAccum;		}

	call	DWORD PTR __imp_?QPC@CPU@@YA_KXZ
	sub	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [esi], eax
	sbb	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [esi+4], edx

; 78   : 		m_real_ticks	= 0;

	mov	DWORD PTR [esi+40], 0
	mov	DWORD PTR [esi+44], 0

; 79   : 		m_ticks			= 0;

	mov	DWORD PTR [esi+48], 0
	mov	DWORD PTR [esi+52], 0
$LN286@UpdateVisi:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 197  : 	for (int _mz=0; _mz<dm_cache1_line; _mz++){

	mov	esi, DWORD PTR __imp_?testSAABB@CFrustum@@QBE?AW4EFC_Visible@@AAU?$_vector3@M@@MPBMAAI@Z
	lea	ebp, DWORD PTR [ebx+1472]
	mov	DWORD PTR tv2463[esp+348], 12		; 0000000cH
$LL4@UpdateVisi:

; 198  : 		for (int _mx=0; _mx<dm_cache1_line; _mx++){

	mov	edi, 12					; 0000000cH
	mov	DWORD PTR tv2424[esp+348], ebp
	mov	DWORD PTR tv2461[esp+348], edi
	npad	1
$LL7@UpdateVisi:

; 199  : 			CacheSlot1& MS		= cache_level1[_mz][_mx];
; 200  : 			if (MS.empty)		continue;

	cmp	DWORD PTR [ebp-16], 0
	jne	$LN5@UpdateVisi

; 201  : 			u32 mask			= 0xff;
; 202  : 			u32 res				= View.testSAABB		(MS.vis.sphere.P,MS.vis.sphere.R,MS.vis.box.data(),mask);

	fld	DWORD PTR [ebp]
	lea	eax, DWORD PTR _mask$6[esp+348]
	push	eax
	lea	eax, DWORD PTR [ebp+4]
	mov	DWORD PTR _mask$6[esp+352], 255		; 000000ffH
	push	eax
	push	ecx
	lea	eax, DWORD PTR [ebp-12]
	fstp	DWORD PTR [esp]
	push	eax
	lea	ecx, DWORD PTR _View$[esp+364]
	call	esi
	mov	ecx, eax
	mov	DWORD PTR _res$1$[esp+348], ecx

; 203  : 			if (fcvNone==res)						 	continue;	// invisible-view frustum

	test	ecx, ecx
	je	$LN5@UpdateVisi

; 204  : 			// test slots
; 205  : 			for (int _i=0; _i<dm_cache1_count*dm_cache1_count; _i++){

	lea	eax, DWORD PTR [ebp+44]
	mov	DWORD PTR tv2460[esp+348], 16		; 00000010H
	mov	DWORD PTR tv2434[esp+348], eax
	npad	7
$LL10@UpdateVisi:

; 206  : 				Slot*	PS		= *MS.slots[_i];

	mov	eax, DWORD PTR [eax]

; 207  : 				Slot& 	S 		= *PS;

	mov	ebp, DWORD PTR [eax]
	mov	DWORD PTR _S$1$[esp+348], ebp

; 208  : 
; 209  : 				// if slot empty - continue
; 210  : 				if (S.empty)	continue;

	test	BYTE PTR [ebp], 1
	jne	$LN8@UpdateVisi

; 211  : 
; 212  : 				// if upper test = fcvPartial - test inner slots
; 213  : 				if (fcvPartial==res){

	lea	edi, DWORD PTR [ebp+28]
	cmp	ecx, 1
	jne	SHORT $LN285@UpdateVisi

; 214  : 					u32 _mask	= mask;

	mov	eax, DWORD PTR _mask$6[esp+348]

; 215  : 					u32 _res	= View.testSAABB			(S.vis.sphere.P,S.vis.sphere.R,S.vis.box.data(),_mask);

	fld	DWORD PTR [ebp+24]
	mov	DWORD PTR __mask$5[esp+348], eax
	lea	eax, DWORD PTR __mask$5[esp+348]
	push	eax
	push	edi
	push	ecx
	lea	eax, DWORD PTR [ebp+12]
	fstp	DWORD PTR [esp]
	push	eax
	lea	ecx, DWORD PTR _View$[esp+364]
	call	esi

; 216  : 					if (fcvNone==_res)						continue;	// invisible-view frustum

	test	eax, eax
	je	$LN292@UpdateVisi
$LN285@UpdateVisi:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\HOM.cpp

; 288  : 	if (Device.dwFrame<vis.hom_frame)	return TRUE;				// not at this time :)

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	esi, DWORD PTR [eax+244]
	cmp	esi, DWORD PTR [ebp+60]
	jb	SHORT $LN291@UpdateVisi

; 289  : 	if (!bEnabled)						return TRUE;				// return - everything visible

	cmp	DWORD PTR ?RImplementation@@3VCRender@@A+744, 0
	je	SHORT $LN291@UpdateVisi

; 290  : 	
; 291  : 	// Now, the test time comes
; 292  : 	// 0. The object was hidden, and we must prove that each frame	- test		| frame-old, tested-new, hom_res = false;
; 293  : 	// 1. The object was visible, but we must to re-check it		- test		| frame-new, tested-???, hom_res = true;
; 294  : 	// 2. New object slides into view								- delay test| frame-old, tested-old, hom_res = ???;
; 295  : 	u32 frame_current	= Device.dwFrame;
; 296  : 	// u32	frame_prev		= frame_current-1;
; 297  : 
; 298  : #ifdef DEBUG
; 299  : 	Device.Statistic->RenderCALC_HOM.Begin	();
; 300  : #endif
; 301  : 	BOOL result			= _visible			(vis.box,m_xform_01);

	mov	edx, OFFSET ?RImplementation@@3VCRender@@A+812
	mov	ecx, edi
	call	?_visible@@YAHAAV?$_box3@M@@AAU?$_matrix@M@@@Z ; _visible

; 302  : 	u32  delay			= 1;
; 303  : 	if (result)

	test	eax, eax
	je	SHORT $LN50@UpdateVisi
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	mov	ecx, DWORD PTR __imp_?Random@@3VCRandom@@A
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	cdq
	mov	edi, 15					; 0000000fH
	idiv	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\HOM.cpp

; 306  : 		delay			= ::Random.randI	(5*2,5*5);

	lea	eax, DWORD PTR [esi+10]
	mov	DWORD PTR [ebp+64], esi
	add	eax, edx
	mov	DWORD PTR [ebp+60], eax
	jmp	SHORT $LN284@UpdateVisi
$LN50@UpdateVisi:

; 307  : 	} else {
; 308  : 		// hidden	- shedule to next frame
; 309  : 	}
; 310  : 	vis.hom_frame			= frame_current + delay;

	lea	eax, DWORD PTR [esi+1]

; 311  : 	vis.hom_tested			= frame_current	;

	mov	DWORD PTR [ebp+64], esi
	mov	DWORD PTR [ebp+60], eax
	jmp	$LN289@UpdateVisi
$LN291@UpdateVisi:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 222  : 				if (Device.dwFrame>S.frame){

	mov	edi, 15					; 0000000fH
$LN284@UpdateVisi:
	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	ecx, DWORD PTR [ebp]
	shr	ecx, 2
	cmp	DWORD PTR [eax+244], ecx
	jbe	$LN12@UpdateVisi
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 287  : 	{	return (x-v.x)*(x-v.x) + (y-v.y)*(y-v.y) + (z-v.z)*(z-v.z);	}

	movss	xmm1, DWORD PTR _EYE$[esp+352]
	movss	xmm2, DWORD PTR _EYE$[esp+348]
	subss	xmm2, DWORD PTR [ebp+12]
	subss	xmm1, DWORD PTR [ebp+16]
	movss	xmm0, DWORD PTR _EYE$[esp+356]
	subss	xmm0, DWORD PTR [ebp+20]
	mulss	xmm2, xmm2
	mulss	xmm1, xmm1
	mulss	xmm0, xmm0
	addss	xmm2, xmm1
	addss	xmm2, xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 225  : 					if		(dist_sq>fade_limit)				continue;

	comiss	xmm2, DWORD PTR __real@450d0400
	ja	$LN289@UpdateVisi

; 226  : 					float	alpha		= (dist_sq<fade_start)?0.f:(dist_sq-fade_start)/fade_range;

	movss	xmm3, DWORD PTR __real@3f800000
	comiss	xmm3, xmm2
	jbe	SHORT $LN36@UpdateVisi
	xorps	xmm0, xmm0
	movaps	xmm1, xmm0
	jmp	SHORT $LN293@UpdateVisi
$LN36@UpdateVisi:
	movaps	xmm1, xmm2
	subss	xmm1, xmm3
	movaps	xmm0, xmm1
	mulss	xmm1, xmm1
	mulss	xmm0, DWORD PTR __real@39e87975
	mulss	xmm1, DWORD PTR __real@34531c5e
$LN293@UpdateVisi:

; 228  : 					float	dist_sq_rcp	= 1.f / dist_sq;

	movaps	xmm5, xmm3
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	mov	ecx, DWORD PTR __imp_?Random@@3VCRandom@@A
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 228  : 					float	dist_sq_rcp	= 1.f / dist_sq;

	divss	xmm5, xmm2
	movaps	xmm4, xmm3
	movss	DWORD PTR $T4[esp+348], xmm1
	subss	xmm4, xmm0
	movss	DWORD PTR _alpha$1$[esp+348], xmm0
	movss	DWORD PTR _dist_sq_rcp$1$[esp+348], xmm5
	movss	DWORD PTR _alpha_i$1$[esp+348], xmm4
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	cdq
	idiv	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 230  : 					S.frame			= Device.dwFrame+Random.randI(15,30);

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	lea	edi, DWORD PTR [ebp+100]
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 34   : 	IC 	s32		randI	(s32 min, s32 max)			{ return min+randI(max-min); }

	add	edx, 15					; 0000000fH
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 230  : 					S.frame			= Device.dwFrame+Random.randI(15,30);

	mov	ecx, DWORD PTR [eax+244]
	mov	eax, DWORD PTR [ebp]
	add	ecx, edx
	shl	ecx, 2
	and	eax, 3
	or	ecx, eax
	mov	edx, 4
	mov	DWORD PTR [ebp], ecx
	mov	ebp, DWORD PTR _this$1$[esp+348]
	mov	DWORD PTR tv2458[esp+348], edx
	npad	5
$LL13@UpdateVisi:

; 232  : 						SlotPart&			sp	= S.G		[sp_id];
; 233  : 						if (sp.id==DetailSlot::ID_Empty)	continue;

	mov	ecx, DWORD PTR [edi-32]
	cmp	ecx, 63					; 0000003fH
	je	$LN11@UpdateVisi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1414 :         const pointer _Firstptr = _First._Ptr;

	mov	eax, DWORD PTR [edi-16]

; 1415 :         const pointer _Lastptr  = _Last._Ptr;
; 1416 :         auto& _My_data          = _Mypair._Myval2;
; 1417 :         pointer& _Mylast        = _My_data._Mylast;
; 1418 : 
; 1419 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1420 :         _STL_VERIFY(_First._Getcont() == _STD addressof(_My_data) && _Last._Getcont() == _STD addressof(_My_data)
; 1421 :                         && _Firstptr >= _My_data._Myfirst && _Lastptr >= _Firstptr && _Mylast >= _Lastptr,
; 1422 :             "vector erase iterator outside range");
; 1423 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1424 : 
; 1425 :         if (_Firstptr != _Lastptr) { // something to do, invalidate iterators

	cmp	eax, DWORD PTR [edi-12]
	je	SHORT $LN276@UpdateVisi

; 1426 :             _Orphan_range(_Firstptr, _Mylast);
; 1427 : 
; 1428 :             const pointer _Newlast = _Move_unchecked(_Lastptr, _Mylast, _Firstptr);
; 1429 :             _Destroy(_Newlast, _Mylast);
; 1430 :             _Mylast = _Newlast;

	mov	DWORD PTR [edi-12], eax
$LN276@UpdateVisi:

; 1414 :         const pointer _Firstptr = _First._Ptr;

	mov	eax, DWORD PTR [edi-4]

; 1415 :         const pointer _Lastptr  = _Last._Ptr;
; 1416 :         auto& _My_data          = _Mypair._Myval2;
; 1417 :         pointer& _Mylast        = _My_data._Mylast;
; 1418 : 
; 1419 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1420 :         _STL_VERIFY(_First._Getcont() == _STD addressof(_My_data) && _Last._Getcont() == _STD addressof(_My_data)
; 1421 :                         && _Firstptr >= _My_data._Myfirst && _Lastptr >= _Firstptr && _Mylast >= _Lastptr,
; 1422 :             "vector erase iterator outside range");
; 1423 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1424 : 
; 1425 :         if (_Firstptr != _Lastptr) { // something to do, invalidate iterators

	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN277@UpdateVisi

; 1426 :             _Orphan_range(_Firstptr, _Mylast);
; 1427 : 
; 1428 :             const pointer _Newlast = _Move_unchecked(_Lastptr, _Mylast, _Firstptr);
; 1429 :             _Destroy(_Newlast, _Mylast);
; 1430 :             _Mylast = _Newlast;

	mov	DWORD PTR [edi], eax
$LN277@UpdateVisi:

; 1414 :         const pointer _Firstptr = _First._Ptr;

	mov	eax, DWORD PTR [edi+8]

; 1415 :         const pointer _Lastptr  = _Last._Ptr;
; 1416 :         auto& _My_data          = _Mypair._Myval2;
; 1417 :         pointer& _Mylast        = _My_data._Mylast;
; 1418 : 
; 1419 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1420 :         _STL_VERIFY(_First._Getcont() == _STD addressof(_My_data) && _Last._Getcont() == _STD addressof(_My_data)
; 1421 :                         && _Firstptr >= _My_data._Myfirst && _Lastptr >= _Firstptr && _Mylast >= _Lastptr,
; 1422 :             "vector erase iterator outside range");
; 1423 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1424 : 
; 1425 :         if (_Firstptr != _Lastptr) { // something to do, invalidate iterators

	cmp	eax, DWORD PTR [edi+12]
	je	SHORT $LN140@UpdateVisi

; 1426 :             _Orphan_range(_Firstptr, _Mylast);
; 1427 : 
; 1428 :             const pointer _Newlast = _Move_unchecked(_Lastptr, _Mylast, _Firstptr);
; 1429 :             _Destroy(_Newlast, _Mylast);
; 1430 :             _Mylast = _Newlast;

	mov	DWORD PTR [edi+12], eax
$LN140@UpdateVisi:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 239  : 						float				R		= objects	[sp.id]->bv_sphere.R;

	mov	eax, DWORD PTR [ebp+ecx*4+1136]

; 240  : 						float				Rq_drcp	= R*R*dist_sq_rcp;	// reordered expression for 'ssa' calc
; 241  : 
; 242  : 						SlotItem			**siIT=&(*sp.items.begin()), **siEND=&(*sp.items.end());

	mov	ebx, DWORD PTR [edi-24]
	mov	esi, DWORD PTR [edi-28]
	movss	xmm3, DWORD PTR [eax+16]
	mulss	xmm3, xmm3
	mulss	xmm3, xmm5
	movss	DWORD PTR _Rq_drcp$1$[esp+348], xmm3

; 243  : 						for (; siIT!=siEND; siIT++){

	cmp	esi, ebx
	je	$LN11@UpdateVisi
	subss	xmm0, xmm1
	movss	DWORD PTR tv2429[esp+348], xmm0
	npad	3
$LL16@UpdateVisi:

; 244  : 							SlotItem& Item			= *(*siIT);

	mov	ecx, DWORD PTR [esi]

; 245  : 							float   scale			= Item.scale_calculated	= Item.scale*alpha_i;

	movss	xmm1, DWORD PTR [ecx]
	movaps	xmm2, xmm1

; 246  : 							float	ssa				= scale*scale*Rq_drcp;

	mulss	xmm0, xmm1
	mulss	xmm2, xmm4
	movss	DWORD PTR [ecx+4], xmm2
	subss	xmm2, xmm0

; 247  : 							if (ssa < r_ssaDISCARD) continue;

	movss	xmm0, DWORD PTR ?r_ssaDISCARD@@3MA
	mulss	xmm2, xmm1
	mulss	xmm2, xmm3
	comiss	xmm0, xmm2
	ja	SHORT $LN14@UpdateVisi

; 248  : 							u32		vis_id			= 0;

	xor	eax, eax

; 249  : 							if (ssa > r_ssaCHEAP)	vis_id = Item.vis_ID;

	comiss	xmm2, DWORD PTR _r_ssaCHEAP$1$[esp+348]
	jbe	SHORT $LN30@UpdateVisi
	mov	eax, DWORD PTR [ecx+72]
$LN30@UpdateVisi:

; 251  : 							sp.r_items[vis_id].push_back	(*siIT);

	lea	ecx, DWORD PTR [eax-2]
	lea	ecx, DWORD PTR [eax+ecx*2]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

	mov	edx, DWORD PTR [edi+ecx*4+4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 251  : 							sp.r_items[vis_id].push_back	(*siIT);

	lea	ecx, DWORD PTR [edi+ecx*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN173@UpdateVisi

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edx], eax

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

	add	DWORD PTR [ecx+4], 4

; 731  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	jmp	SHORT $LN14@UpdateVisi
$LN173@UpdateVisi:

; 732  :         }
; 733  : 
; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	push	esi
	push	edx
	call	??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Emplace_reallocate<CDetailManager::SlotItem * const &>
	movss	xmm3, DWORD PTR _Rq_drcp$1$[esp+348]
	movss	xmm4, DWORD PTR _alpha_i$1$[esp+348]
$LN14@UpdateVisi:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 243  : 						for (; siIT!=siEND; siIT++){

	movss	xmm0, DWORD PTR tv2429[esp+348]
	add	esi, 4
	cmp	esi, ebx
	jne	SHORT $LL16@UpdateVisi
	movss	xmm0, DWORD PTR _alpha$1$[esp+348]
	movss	xmm5, DWORD PTR _dist_sq_rcp$1$[esp+348]
	mov	edx, DWORD PTR tv2458[esp+348]
$LN11@UpdateVisi:

; 231  : 					for (int sp_id=0; sp_id<dm_obj_in_slot; sp_id++){

	movss	xmm1, DWORD PTR $T4[esp+348]
	add	edi, 52					; 00000034H
	sub	edx, 1
	mov	DWORD PTR tv2458[esp+348], edx
	jne	$LL13@UpdateVisi
	mov	ebp, DWORD PTR _S$1$[esp+348]
	mov	ebx, DWORD PTR _this$1$[esp+348]
$LN12@UpdateVisi:

; 257  : 				for (int sp_id=0; sp_id<dm_obj_in_slot; sp_id++){

	lea	esi, DWORD PTR [ebp+84]
	mov	edi, 4
	npad	3
$LL19@UpdateVisi:

; 258  : 					SlotPart&			sp	= S.G		[sp_id];
; 259  : 					if (sp.id==DetailSlot::ID_Empty)	continue;

	mov	ecx, DWORD PTR [esi-16]
	cmp	ecx, 63					; 0000003fH
	je	$LN17@UpdateVisi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1531 :         return _My_data._Myfirst == _My_data._Mylast;

	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR [esi+4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 260  : 					if (!sp.r_items[0].empty()) m_visibles[0][sp.id].push_back(&sp.r_items[0]);

	je	SHORT $LN198@UpdateVisi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR [ebx+1396]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [eax+ecx*4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 260  : 					if (!sp.r_items[0].empty()) m_visibles[0][sp.id].push_back(&sp.r_items[0]);

	mov	DWORD PTR $T3[esp+348], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 730  :         if (_Mylast != _My_data._Myend) {

	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [ecx+8]
	je	SHORT $LN199@UpdateVisi

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	DWORD PTR [eax], esi

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

	add	DWORD PTR [ecx+4], 4

; 731  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	jmp	SHORT $LN198@UpdateVisi
$LN199@UpdateVisi:

; 732  :         }
; 733  : 
; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	lea	edx, DWORD PTR $T3[esp+348]
	push	edx
	push	eax
	call	??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_reallocate<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
$LN198@UpdateVisi:

; 1531 :         return _My_data._Myfirst == _My_data._Mylast;

	mov	eax, DWORD PTR [esi+12]
	lea	edx, DWORD PTR [esi+12]
	cmp	eax, DWORD PTR [esi+16]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 261  : 					if (!sp.r_items[1].empty()) m_visibles[1][sp.id].push_back(&sp.r_items[1]);

	je	SHORT $LN224@UpdateVisi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR [esi-16]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 261  : 					if (!sp.r_items[1].empty()) m_visibles[1][sp.id].push_back(&sp.r_items[1]);

	mov	DWORD PTR $T2[esp+348], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	lea	ecx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [ebx+1408]
	lea	ecx, DWORD PTR [eax+ecx*4]

; 730  :         if (_Mylast != _My_data._Myend) {

	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [ecx+8]
	je	SHORT $LN225@UpdateVisi

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	DWORD PTR [eax], edx

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

	add	DWORD PTR [ecx+4], 4

; 731  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	jmp	SHORT $LN224@UpdateVisi
$LN225@UpdateVisi:

; 732  :         }
; 733  : 
; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	lea	edx, DWORD PTR $T2[esp+348]
	push	edx
	push	eax
	call	??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_reallocate<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
$LN224@UpdateVisi:

; 1531 :         return _My_data._Myfirst == _My_data._Mylast;

	mov	eax, DWORD PTR [esi+24]
	lea	edx, DWORD PTR [esi+24]
	cmp	eax, DWORD PTR [esi+28]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 262  : 					if (!sp.r_items[2].empty()) m_visibles[2][sp.id].push_back(&sp.r_items[2]);

	je	SHORT $LN17@UpdateVisi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR [esi-16]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 262  : 					if (!sp.r_items[2].empty()) m_visibles[2][sp.id].push_back(&sp.r_items[2]);

	mov	DWORD PTR $T1[esp+348], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	lea	ecx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [ebx+1420]
	lea	ecx, DWORD PTR [eax+ecx*4]

; 730  :         if (_Mylast != _My_data._Myend) {

	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [ecx+8]
	je	SHORT $LN251@UpdateVisi

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	DWORD PTR [eax], edx

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

	add	DWORD PTR [ecx+4], 4

; 731  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	jmp	SHORT $LN17@UpdateVisi
$LN251@UpdateVisi:

; 732  :         }
; 733  : 
; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	lea	edx, DWORD PTR $T1[esp+348]
	push	edx
	push	eax
	call	??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_reallocate<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
$LN17@UpdateVisi:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 257  : 				for (int sp_id=0; sp_id<dm_obj_in_slot; sp_id++){

	add	esi, 52					; 00000034H
	sub	edi, 1
	jne	$LL19@UpdateVisi
$LN289@UpdateVisi:

; 204  : 			// test slots
; 205  : 			for (int _i=0; _i<dm_cache1_count*dm_cache1_count; _i++){

	mov	esi, DWORD PTR __imp_?testSAABB@CFrustum@@QBE?AW4EFC_Visible@@AAU?$_vector3@M@@MPBMAAI@Z
$LN292@UpdateVisi:
	mov	ecx, DWORD PTR _res$1$[esp+348]
$LN8@UpdateVisi:
	mov	eax, DWORD PTR tv2434[esp+348]
	add	eax, 4
	sub	DWORD PTR tv2460[esp+348], 1
	mov	DWORD PTR tv2434[esp+348], eax
	jne	$LL10@UpdateVisi
	mov	ebp, DWORD PTR tv2424[esp+348]
	mov	edi, DWORD PTR tv2461[esp+348]
$LN5@UpdateVisi:

; 198  : 		for (int _mx=0; _mx<dm_cache1_line; _mx++){

	add	ebp, 124				; 0000007cH
	sub	edi, 1
	mov	DWORD PTR tv2424[esp+348], ebp
	mov	DWORD PTR tv2461[esp+348], edi
	jne	$LL7@UpdateVisi

; 197  : 	for (int _mz=0; _mz<dm_cache1_line; _mz++){

	sub	DWORD PTR tv2463[esp+348], 1
	jne	$LL4@UpdateVisi

; 263  : 				}
; 264  : 			}
; 265  : 		}
; 266  : 	}
; 267  : 	Device.Statistic->RenderDUMP_DT_VIS.End	();

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	esi, DWORD PTR [eax+436]
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 174  : 	ICF void	End				()		{	if (!g_bEnableStatGather) return;	accum += T.GetElapsed_ticks();	}

	mov	eax, DWORD PTR __imp_?g_bEnableStatGather@@3HA
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN255@UpdateVisi
	lea	ecx, DWORD PTR [esi+2248]
	call	DWORD PTR __imp_?GetElapsed_ticks@CTimer@@QBE_KXZ
	add	DWORD PTR [esi+2304], eax
	adc	DWORD PTR [esi+2308], edx
$LN255@UpdateVisi:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 268  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 332				; 0000014cH
	ret	0
?UpdateVisibleM@CDetailManager@@QAEXXZ ENDP		; CDetailManager::UpdateVisibleM
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
_TEXT	SEGMENT
?Render@CDetailManager@@QAEXXZ PROC			; CDetailManager::Render
; _this$ = ecx

; 271  : {

	push	ecx
	push	esi
	push	edi
	mov	edi, ecx

; 272  : #ifndef _EDITOR
; 273  : 	if (0==dtFS)						return;

	cmp	DWORD PTR [edi+1088], 0
	je	$LN1@Render

; 274  : 	if (!psDeviceFlags.is(rsDetails))	return;

	mov	eax, DWORD PTR __imp_?psDeviceFlags@@3U?$_flags@I@@A
	test	BYTE PTR [eax], 64			; 00000040H
	je	$LN1@Render
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h

; 176  : 		if (m_frame_calc == Device.dwFrame)

	mov	eax, DWORD PTR [edi+701276]
	mov	esi, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	cmp	eax, DWORD PTR [esi+244]
	je	SHORT $LN9@Render

; 177  : 			return;
; 178  : 
; 179  : 		MT_CALC						(); 

	call	?MT_CALC@CDetailManager@@QAGXXZ		; CDetailManager::MT_CALC
	mov	esi, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
$LN9@Render:
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 173  : 	ICF void	Begin			()		{	if (!g_bEnableStatGather) return;	count++; T.Start();				}

	mov	eax, DWORD PTR __imp_?g_bEnableStatGather@@3HA
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 280  : 	Device.Statistic->RenderDUMP_DT_Render.Begin	();

	mov	esi, DWORD PTR [esi+436]
	add	esi, 2328				; 00000918H
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 173  : 	ICF void	Begin			()		{	if (!g_bEnableStatGather) return;	count++; T.Start();				}

	cmp	DWORD PTR [eax], 0
	je	SHORT $LN15@Render
	inc	DWORD PTR [esi+68]

; 73   : 		if (bPause)

	cmp	DWORD PTR [esi+24], 0
	jne	SHORT $LN15@Render

; 29   : 	ICF	void	Start			()		{	if(bPause) return;	qwStartTime = CPU::QPC()-qwPauseAccum;		}

	call	DWORD PTR __imp_?QPC@CPU@@YA_KXZ
	sub	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [esi], eax
	sbb	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [esi+4], edx

; 78   : 		m_real_ticks	= 0;

	mov	DWORD PTR [esi+40], 0
	mov	DWORD PTR [esi+44], 0

; 79   : 		m_ticks			= 0;

	mov	DWORD PTR [esi+48], 0
	mov	DWORD PTR [esi+52], 0
$LN15@Render:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 282  : 	float factor			= g_pGamePersistent->Environment().wind_strength_factor;

	mov	eax, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A

; 62   : 	float fi	= 1.f-f;

	movss	xmm2, DWORD PTR __real@3f800000

; 282  : 	float factor			= g_pGamePersistent->Environment().wind_strength_factor;

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+1116]
	movss	xmm3, DWORD PTR [eax+360]

; 62   : 	float fi	= 1.f-f;

	subss	xmm2, xmm3

; 63   : 	amp1		= fi*A.amp1  + f*B.amp1;

	movaps	xmm0, xmm3
	mulss	xmm0, DWORD PTR [edi+1056]
	movaps	xmm1, xmm2
	mulss	xmm1, DWORD PTR [edi+1036]
	addss	xmm1, xmm0

; 64   : 	amp2		= fi*A.amp2  + f*B.amp2;

	movaps	xmm0, xmm3
	movss	DWORD PTR [edi+1076], xmm1
	movaps	xmm1, xmm2
	mulss	xmm1, DWORD PTR [edi+1040]
	mulss	xmm0, DWORD PTR [edi+1060]
	addss	xmm1, xmm0

; 65   : 	rot1		= fi*A.rot1  + f*B.rot1;

	movaps	xmm0, xmm3
	movss	DWORD PTR [edi+1080], xmm1
	movaps	xmm1, xmm2
	mulss	xmm1, DWORD PTR [edi+1028]
	mulss	xmm0, DWORD PTR [edi+1048]
	addss	xmm1, xmm0

; 66   : 	rot2		= fi*A.rot2  + f*B.rot2;

	movaps	xmm0, xmm3
	movss	DWORD PTR [edi+1068], xmm1
	movaps	xmm1, xmm2
	mulss	xmm1, DWORD PTR [edi+1032]
	mulss	xmm0, DWORD PTR [edi+1052]
	addss	xmm1, xmm0
	movss	DWORD PTR [edi+1072], xmm1

; 67   : 	speed		= fi*A.speed + f*B.speed;

	mulss	xmm2, DWORD PTR [edi+1044]
	mulss	xmm3, DWORD PTR [edi+1064]
	addss	xmm2, xmm3
	movss	DWORD PTR [edi+1084], xmm2

; 283  : 	swing_current.lerp		(swing_desc[0],swing_desc[1],factor);
; 284  : 
; 285  : 	RCache.set_CullMode		(CULL_NONE);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 266  : 	if (cull_mode != _mode) { cull_mode = _mode;			CHK_DX(HW.pDevice->SetRenderState(D3DRS_CULLMODE, _mode)); }

	cmp	DWORD PTR [ecx+8916], 1
	je	SHORT $LN26@Render
	mov	DWORD PTR [ecx+8916], 1
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	1
	push	22					; 00000016H
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+228]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
$LN26@Render:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 286  : 	RCache.set_xform_world	(Fidentity);

	push	DWORD PTR __imp_?Fidentity@@3U?$_matrix@M@@A
	call	DWORD PTR __imp_?set_xform_world@CBackend@@QAEXABU?$_matrix@M@@@Z
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h

; 123  : 	IC bool							UseVS			()		{ return HW.Caps.geometry_major >= 1; }

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 287  : 	if (UseVS())			hw_Render	();

	mov	ecx, edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h

; 123  : 	IC bool							UseVS			()		{ return HW.Caps.geometry_major >= 1; }

	cmp	WORD PTR [eax+48], 1
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 287  : 	if (UseVS())			hw_Render	();

	jb	SHORT $LN4@Render
	call	?hw_Render@CDetailManager@@QAEXXZ	; CDetailManager::hw_Render
	jmp	SHORT $LN5@Render
$LN4@Render:

; 288  : 	else					soft_Render	();

	call	?soft_Render@CDetailManager@@QAEXXZ	; CDetailManager::soft_Render
$LN5@Render:

; 289  : 	RCache.set_CullMode		(CULL_CCW);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 266  : 	if (cull_mode != _mode) { cull_mode = _mode;			CHK_DX(HW.pDevice->SetRenderState(D3DRS_CULLMODE, _mode)); }

	cmp	DWORD PTR [eax+8916], 3
	je	SHORT $LN31@Render
	mov	DWORD PTR [eax+8916], 3
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	3
	push	22					; 00000016H
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+228]
$LN31@Render:
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 174  : 	ICF void	End				()		{	if (!g_bEnableStatGather) return;	accum += T.GetElapsed_ticks();	}

	mov	eax, DWORD PTR __imp_?g_bEnableStatGather@@3HA
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 290  : 	Device.Statistic->RenderDUMP_DT_Render.End	();

	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 174  : 	ICF void	End				()		{	if (!g_bEnableStatGather) return;	accum += T.GetElapsed_ticks();	}

	cmp	DWORD PTR [eax], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 290  : 	Device.Statistic->RenderDUMP_DT_Render.End	();

	mov	esi, DWORD PTR [ecx+436]
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 174  : 	ICF void	End				()		{	if (!g_bEnableStatGather) return;	accum += T.GetElapsed_ticks();	}

	je	SHORT $LN33@Render
	lea	ecx, DWORD PTR [esi+2328]
	call	DWORD PTR __imp_?GetElapsed_ticks@CTimer@@QBE_KXZ
	add	DWORD PTR [esi+2384], eax
	adc	DWORD PTR [esi+2388], edx
	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
$LN33@Render:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 291  : 	m_frame_rendered		= Device.dwFrame;

	mov	eax, DWORD PTR [ecx+244]
	mov	DWORD PTR [edi+701280], eax
$LN1@Render:

; 292  : }

	pop	edi
	pop	esi
	pop	ecx
	ret	0
?Render@CDetailManager@@QAEXXZ ENDP			; CDetailManager::Render
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp
_TEXT	SEGMENT
_s_x$1$ = -20						; size = 4
_a$1 = -20						; size = 4
_s_z$1$ = -16						; size = 4
_a$2 = -16						; size = 4
_EYE$3 = -12						; size = 12
?MT_CALC@CDetailManager@@QAGXXZ PROC			; CDetailManager::MT_CALC
; _this$ = ecx

; 295  : {

	sub	esp, 20					; 00000014H

; 296  : #ifndef _EDITOR
; 297  : 	if (0==RImplementation.Details)		return;	// possibly deleted

	cmp	DWORD PTR ?RImplementation@@3VCRender@@A+1004, 0
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	ebp, ecx
	je	$LN1@MT_CALC

; 298  : 	if (0==dtFS)						return;

	cmp	DWORD PTR [ebp+1088], 0
	je	$LN1@MT_CALC

; 299  : 	if (!psDeviceFlags.is(rsDetails))	return;

	mov	eax, DWORD PTR __imp_?psDeviceFlags@@3U?$_flags@I@@A
	test	BYTE PTR [eax], 64			; 00000040H
	je	$LN1@MT_CALC

; 300  : #endif    
; 301  : 
; 302  : 	MT.Enter					();

	lea	ecx, DWORD PTR [ebp+701272]
	call	DWORD PTR __imp_?Enter@xrCriticalSection@@QAEXXZ

; 303  : 	if (m_frame_calc!=Device.dwFrame)	

	mov	ecx, DWORD PTR [ebp+701276]
	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	cmp	ecx, DWORD PTR [eax+244]
	je	$LN6@MT_CALC

; 304  : 		if ((m_frame_rendered+1)==Device.dwFrame) //already rendered

	mov	eax, DWORD PTR [ebp+701280]
	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	inc	eax
	cmp	eax, DWORD PTR [ecx+244]
	jne	$LN6@MT_CALC

; 306  : 			Fvector		EYE				= Device.vCameraPosition;

	mov	eax, DWORD PTR [ecx+488]
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ebx, 158				; 0000009eH
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 306  : 			Fvector		EYE				= Device.vCameraPosition;

	mov	DWORD PTR _EYE$3[esp+36], eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	mov	edi, 1
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 307  : 			int s_x	= iFloor			(EYE.x/dm_slot_size+.5f);

	movss	xmm0, DWORD PTR _EYE$3[esp+36]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	eax, DWORD PTR [ecx+492]
	mov	DWORD PTR _EYE$3[esp+40], eax
	mov	eax, DWORD PTR [ecx+496]
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ecx, ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 306  : 			Fvector		EYE				= Device.vCameraPosition;

	mov	DWORD PTR _EYE$3[esp+44], eax

; 307  : 			int s_x	= iFloor			(EYE.x/dm_slot_size+.5f);

	mulss	xmm0, DWORD PTR __real@3f000000
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 83   :     int a			= *(const int*)(&x);

	movss	DWORD PTR _a$1[esp+36], xmm0

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	esi, DWORD PTR _a$1[esp+36]
	mov	eax, esi
	sar	eax, 23					; 00000017H

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	mov	edx, esi
	movzx	eax, al
	sub	ecx, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 308  : 			int s_z	= iFloor			(EYE.z/dm_slot_size+.5f);

	movss	xmm0, DWORD PTR _EYE$3[esp+44]
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 85   :     int r			= (((u32)(a) << 8) | (1U << 31)) >> exponent;

	mov	eax, esi

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	sar	edx, 31					; 0000001fH
	or	eax, -8388608				; ff800000H
	shl	eax, 8
	shr	eax, cl
	sub	ecx, 96					; 00000060H
	mov	DWORD PTR _s_x$1$[esp+36], eax
	mov	eax, edi
	shl	eax, cl
	dec	eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 308  : 			int s_z	= iFloor			(EYE.z/dm_slot_size+.5f);

	addss	xmm0, DWORD PTR __real@3f800000
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	sar	eax, 8
	and	eax, esi

; 92   :         r			-=	(imask&a);

	mov	esi, DWORD PTR _s_x$1$[esp+36]
	neg	eax
	sbb	eax, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 308  : 			int s_z	= iFloor			(EYE.z/dm_slot_size+.5f);

	mulss	xmm0, DWORD PTR __real@3f000000
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	inc	eax

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	and	eax, edx

; 92   :         r			-=	(imask&a);

	sub	esi, eax
	lea	eax, DWORD PTR [ecx+64]
	sar	eax, 31					; 0000001fH

; 93   :         r			&=	exponent;

	and	esi, eax

; 83   :     int a			= *(const int*)(&x);

	movss	DWORD PTR _a$2[esp+36], xmm0

; 93   :         r			&=	exponent;

	xor	esi, edx
	mov	DWORD PTR _s_x$1$[esp+36], esi

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	esi, DWORD PTR _a$2[esp+36]
	mov	eax, esi
	sar	eax, 23					; 00000017H

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	mov	edx, esi
	movzx	eax, al
	sub	ebx, eax
	sar	edx, 31					; 0000001fH
	mov	eax, esi
	mov	ecx, ebx
	or	eax, -8388608				; ff800000H
	shl	eax, 8
	shr	eax, cl
	lea	ecx, DWORD PTR [ebx-96]
	shl	edi, cl
	dec	edi
	sar	edi, 8
	and	edi, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 310  : 			Device.Statistic->RenderDUMP_DT_Cache.Begin	();

	mov	esi, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	neg	edi
	sbb	edi, edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 310  : 			Device.Statistic->RenderDUMP_DT_Cache.Begin	();

	mov	esi, DWORD PTR [esi+436]
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	inc	edi

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	and	edi, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 310  : 			Device.Statistic->RenderDUMP_DT_Cache.Begin	();

	add	esi, 2408				; 00000968H
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 92   :         r			-=	(imask&a);

	sub	eax, edi
	mov	DWORD PTR _s_z$1$[esp+36], eax
	lea	eax, DWORD PTR [ebx-32]

; 93   :         r			&=	exponent;

	mov	edi, DWORD PTR _s_z$1$[esp+36]
	sar	eax, 31					; 0000001fH
	and	edi, eax
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 173  : 	ICF void	Begin			()		{	if (!g_bEnableStatGather) return;	count++; T.Start();				}

	mov	eax, DWORD PTR __imp_?g_bEnableStatGather@@3HA
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 93   :         r			&=	exponent;

	xor	edi, edx
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 173  : 	ICF void	Begin			()		{	if (!g_bEnableStatGather) return;	count++; T.Start();				}

	cmp	DWORD PTR [eax], 0
	je	SHORT $LN17@MT_CALC
	inc	DWORD PTR [esi+68]

; 73   : 		if (bPause)

	cmp	DWORD PTR [esi+24], 0
	jne	SHORT $LN17@MT_CALC

; 29   : 	ICF	void	Start			()		{	if(bPause) return;	qwStartTime = CPU::QPC()-qwPauseAccum;		}

	call	DWORD PTR __imp_?QPC@CPU@@YA_KXZ
	sub	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [esi], eax
	sbb	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [esi+4], edx

; 78   : 		m_real_ticks	= 0;

	mov	DWORD PTR [esi+40], 0
	mov	DWORD PTR [esi+44], 0

; 79   : 		m_ticks			= 0;

	mov	DWORD PTR [esi+48], 0
	mov	DWORD PTR [esi+52], 0
$LN17@MT_CALC:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 311  : 			cache_Update				(s_x,s_z,EYE,dm_max_decompress);

	push	ecx
	lea	eax, DWORD PTR _EYE$3[esp+40]
	mov	ecx, ebp
	push	eax
	push	edi
	push	DWORD PTR _s_x$1$[esp+48]
	call	?cache_Update@CDetailManager@@QAEXHHAAU?$_vector3@M@@H@Z ; CDetailManager::cache_Update

; 312  : 			Device.Statistic->RenderDUMP_DT_Cache.End	();

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	esi, DWORD PTR [eax+436]
; File I:\Vitalya\mine\NSProjectX\xrCore\FTimer.h

; 174  : 	ICF void	End				()		{	if (!g_bEnableStatGather) return;	accum += T.GetElapsed_ticks();	}

	mov	eax, DWORD PTR __imp_?g_bEnableStatGather@@3HA
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN23@MT_CALC
	lea	ecx, DWORD PTR [esi+2408]
	call	DWORD PTR __imp_?GetElapsed_ticks@CTimer@@QBE_KXZ
	add	DWORD PTR [esi+2464], eax
	adc	DWORD PTR [esi+2468], edx
$LN23@MT_CALC:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailManager.cpp

; 314  : 			UpdateVisibleM				();

	mov	ecx, ebp
	call	?UpdateVisibleM@CDetailManager@@QAEXXZ	; CDetailManager::UpdateVisibleM

; 315  : 			m_frame_calc				= Device.dwFrame;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [eax+244]
	mov	DWORD PTR [ebp+701276], eax
$LN6@MT_CALC:

; 316  : 		}
; 317  : 	MT.Leave					        ();

	lea	ecx, DWORD PTR [ebp+701272]

; 318  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H

; 316  : 		}
; 317  : 	MT.Leave					        ();

	jmp	DWORD PTR __imp_?Leave@xrCriticalSection@@QAEXXZ
$LN1@MT_CALC:

; 318  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
?MT_CALC@CDetailManager@@QAGXXZ ENDP			; CDetailManager::MT_CALC
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?push_back@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEX$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEX$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::push_back, COMDAT
; _this$ = ecx

; 730  :         if (_Mylast != _My_data._Myend) {

	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN4@push_back

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

	add	DWORD PTR [ecx+4], 4

; 747  :         // insert by moving into element at end, provide strong guarantee
; 748  :         emplace_back(_STD move(_Val));
; 749  :     }

	ret	4
$LN4@push_back:

; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	push	DWORD PTR __Val$[esp-4]
	push	edx
	call	??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_reallocate<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>

; 747  :         // insert by moving into element at end, provide strong guarantee
; 748  :         emplace_back(_STD move(_Val));
; 749  :     }

	ret	4
?push_back@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEX$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$emplace_back@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE?A_T$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$emplace_back@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE?A_T$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::emplace_back<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; _this$ = ecx

; 727  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 728  :         auto& _My_data   = _Mypair._Myval2;
; 729  :         pointer& _Mylast = _My_data._Mylast;
; 730  :         if (_Mylast != _My_data._Myend) {

	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN2@emplace_ba

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

	add	DWORD PTR [ecx+4], 4

; 735  : #if _HAS_CXX17
; 736  :         return _Result;
; 737  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 738  :         (void) _Result;
; 739  : #endif // _HAS_CXX17
; 740  :     }

	ret	4
$LN2@emplace_ba:

; 731  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);
; 732  :         }
; 733  : 
; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	push	DWORD PTR _<_Val_0>$[esp-4]
	push	edx
	call	??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_reallocate<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>

; 735  : #if _HAS_CXX17
; 736  :         return _Result;
; 737  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 738  :         (void) _Result;
; 739  : #endif // _HAS_CXX17
; 740  :     }

	ret	4
??$emplace_back@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE?A_T$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::emplace_back<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAE?A_T$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$_Emplace_back_with_unused_capacity@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAE?A_T$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_back_with_unused_capacity<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; _this$ = ecx

; 709  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 710  :         auto& _My_data   = _Mypair._Myval2;
; 711  :         pointer& _Mylast = _My_data._Mylast;
; 712  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _<_Val_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

	add	DWORD PTR [ecx+4], 4

; 717  : #if _HAS_CXX17
; 718  :         return _Result;
; 719  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 720  :         (void) _Result;
; 721  : #endif // _HAS_CXX17
; 722  :     }

	ret	4
??$_Emplace_back_with_unused_capacity@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAE?A_T$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_back_with_unused_capacity<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEAAPAUSlotItem@CDetailManager@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEAAPAUSlotItem@CDetailManager@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator*, COMDAT
; _this$ = ecx

; 261  :         return const_cast<reference>(_Mybase::operator*());

	mov	eax, DWORD PTR [ecx]

; 262  :     }

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEAAPAUSlotItem@CDetailManager@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h
;	COMDAT ??1?$poolSS@USlotItem@CDetailManager@@$0BAAA@@@QAE@XZ
_TEXT	SEGMENT
??1?$poolSS@USlotItem@CDetailManager@@$0BAAA@@@QAE@XZ PROC ; poolSS<CDetailManager::SlotItem,4096>::~poolSS<CDetailManager::SlotItem,4096>, COMDAT
; _this$ = ecx

; 34   : 	{

	push	ebp

; 35   : 		for (u32 b=0; b<blocks.size(); b++)

	mov	ebp, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	push	esi
	push	edi
	mov	edi, ecx
	xor	esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	eax, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [edi+4]
	sub	eax, edx
	sar	eax, 2
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h

; 35   : 		for (u32 b=0; b<blocks.size(); b++)

	test	eax, eax
	je	SHORT $LN3@poolSS
	push	ebx
	npad	3
$LL4@poolSS:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR [edx+esi*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	lea	ebx, DWORD PTR [edx+esi*4]
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	test	eax, eax
	je	SHORT $LN2@poolSS
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
	mov	DWORD PTR [ebx], 0
$LN2@poolSS:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	eax, DWORD PTR [edi+8]
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h

; 35   : 		for (u32 b=0; b<blocks.size(); b++)

	inc	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	edx, DWORD PTR [edi+4]
	sub	eax, edx
	sar	eax, 2
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h

; 35   : 		for (u32 b=0; b<blocks.size(); b++)

	cmp	esi, eax
	jb	SHORT $LL4@poolSS
	pop	ebx
$LN3@poolSS:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	test	edx, edx
	je	SHORT $LN35@poolSS
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edx
	call	ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [edi+4], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [edi+8], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [edi+12], 0
$LN35@poolSS:
	pop	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h

; 37   : 	}

	pop	esi
	pop	ebp
	ret	0
??1?$poolSS@USlotItem@CDetailManager@@$0BAAA@@@QAE@XZ ENDP ; poolSS<CDetailManager::SlotItem,4096>::~poolSS<CDetailManager::SlotItem,4096>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h
;	COMDAT ??0?$poolSS@USlotItem@CDetailManager@@$0BAAA@@@QAE@XZ
_TEXT	SEGMENT
??0?$poolSS@USlotItem@CDetailManager@@$0BAAA@@@QAE@XZ PROC ; poolSS<CDetailManager::SlotItem,4096>::poolSS<CDetailManager::SlotItem,4096>, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h

; 32   : 	}

	mov	eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrPool.h

; 31   : 		list				= 0;

	mov	DWORD PTR [ecx], 0

; 32   : 	}

	ret	0
??0?$poolSS@USlotItem@CDetailManager@@$0BAAA@@@QAE@XZ ENDP ; poolSS<CDetailManager::SlotItem,4096>::poolSS<CDetailManager::SlotItem,4096>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ??0?$svector@PAUSlot@CDetailManager@@$0JGB@@@QAE@XZ
_TEXT	SEGMENT
??0?$svector@PAUSlot@CDetailManager@@$0JGB@@@QAE@XZ PROC ; svector<CDetailManager::Slot *,2401>::svector<CDetailManager::Slot *,2401>, COMDAT
; _this$ = ecx

; 21   : 	svector() : count(0) 

	mov	DWORD PTR [ecx+9604], 0

; 22   : 	{}

	mov	eax, ecx
	ret	0
??0?$svector@PAUSlot@CDetailManager@@$0JGB@@@QAE@XZ ENDP ; svector<CDetailManager::Slot *,2401>::svector<CDetailManager::Slot *,2401>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ??A?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEAAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEAAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z PROC ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::operator[], COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR __Pos$[esp-4]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+edx*4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 138  : 	reference operator[]		(size_type _Pos)					{ {VERIFY(_Pos<size());} return (*(begin() + _Pos)); }

	ret	4
??A?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEAAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z ENDP ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?clear@?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEXXZ PROC ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::clear, COMDAT
; _this$ = ecx

; 132  : 	void	clear				()									{ clear_and_free	();			}

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ecx+4], eax
	ret	0
?clear@?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEXXZ ENDP ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ??0?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAE@XZ PROC ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 122  : 			xr_vector			()									: inherited	()					{}

	mov	eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 122  : 			xr_vector			()									: inherited	()					{}

	ret	0
??0?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAE@XZ ENDP ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?resize@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = 8							; size = 1
__Newsize$ = 8						; size = 4
?resize@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXI@Z PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::resize, COMDAT
; _this$ = ecx

; 1275 :     _CONSTEXPR20_CONTAINER void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	edx, ecx

; 1251 :         if (_Newsize < _Oldsize) { // trim

	mov	ecx, DWORD PTR __Newsize$[esp-4]

; 1275 :     _CONSTEXPR20_CONTAINER void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	push	esi
	push	edi

; 1250 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	eax, DWORD PTR [edx+4]
	mov	edi, DWORD PTR [edx]
	sub	eax, edi
	sar	eax, 2
	imul	esi, eax, -1431655765

; 1251 :         if (_Newsize < _Oldsize) { // trim

	cmp	ecx, esi
	jae	SHORT $LN4@resize

; 1252 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	eax, DWORD PTR [ecx+ecx*2]
	lea	eax, DWORD PTR [edi+eax*4]
	pop	edi

; 1276 :         // trim or append value-initialized elements, provide strong guarantee
; 1277 :         _Resize(_Newsize, _Value_init_tag{});
; 1278 :     }

	mov	DWORD PTR [edx+4], eax
	pop	esi
	ret	4
$LN4@resize:

; 1259 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1260 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	eax, DWORD PTR [edx+8]
	sub	eax, edi
	sar	eax, 2
	imul	eax, eax, -1431655765

; 1261 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	ecx, eax
	jbe	SHORT $LN6@resize

; 1262 :                 _Resize_reallocate(_Newsize, _Val);

	lea	eax, DWORD PTR $T1[esp+4]
	push	eax
	push	ecx
	mov	ecx, edx
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Resize_reallocate<std::_Value_init_tag>
	pop	edi

; 1276 :         // trim or append value-initialized elements, provide strong guarantee
; 1277 :         _Resize(_Newsize, _Value_init_tag{});
; 1278 :     }

	pop	esi
	ret	4
$LN6@resize:

; 1267 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

	push	DWORD PTR $T1[esp+4]
	sub	ecx, esi
	push	ecx
	push	DWORD PTR [edx+4]
	call	?_Ufill@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV3@IU_Value_init_tag@2@@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Ufill

; 1276 :         // trim or append value-initialized elements, provide strong guarantee
; 1277 :         _Resize(_Newsize, _Value_init_tag{});
; 1278 :     }

	mov	DWORD PTR [edx+4], eax
$LN5@resize:
	pop	edi
	pop	esi
	ret	4
?resize@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXI@Z ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::~vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >, COMDAT
; _this$ = ecx

; 698  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

	push	esi
	mov	esi, ecx

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN4@vector:
	pop	esi

; 699  :         _Tidy();
; 700  : #if _ITERATOR_DEBUG_LEVEL != 0
; 701  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 702  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 703  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 704  :     }

	ret	0
??1?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::~vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ??A?$svector@PAVCDetail@@$0EA@@@QAEAAPAVCDetail@@I@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
??A?$svector@PAVCDetail@@$0EA@@@QAEAAPAVCDetail@@I@Z PROC ; svector<CDetail *,64>::operator[], COMDAT
; _this$ = ecx

; 38   : 	IC reference		operator[] (u32 id)			{ VERIFY(id<count); return array[id];	}

	mov	eax, DWORD PTR _id$[esp-4]
	lea	eax, DWORD PTR [ecx+eax*4]
	ret	4
??A?$svector@PAVCDetail@@$0EA@@@QAEAAPAVCDetail@@I@Z ENDP ; svector<CDetail *,64>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ?push_back@?$svector@PAVCDetail@@$0EA@@@QAEXPAVCDetail@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 4
?push_back@?$svector@PAVCDetail@@$0EA@@@QAEXPAVCDetail@@@Z PROC ; svector<CDetail *,64>::push_back, COMDAT
; _this$ = ecx

; 35   : 	IC void		push_back(value_type e)		{ VERIFY(count<dim); array[count++]=e;	}

	mov	edx, DWORD PTR [ecx+256]
	mov	eax, DWORD PTR _e$[esp-4]
	mov	DWORD PTR [ecx+edx*4], eax
	inc	DWORD PTR [ecx+256]
	ret	4
?push_back@?$svector@PAVCDetail@@$0EA@@@QAEXPAVCDetail@@@Z ENDP ; svector<CDetail *,64>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ?clear@?$svector@PAVCDetail@@$0EA@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$svector@PAVCDetail@@$0EA@@@QAEXXZ PROC		; svector<CDetail *,64>::clear, COMDAT
; _this$ = ecx

; 31   : 	IC void		clear()						{ count=0;								}

	mov	DWORD PTR [ecx+256], 0
	ret	0
?clear@?$svector@PAVCDetail@@$0EA@@@QAEXXZ ENDP		; svector<CDetail *,64>::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ?size@?$svector@PAVCDetail@@$0EA@@@QBEIXZ
_TEXT	SEGMENT
?size@?$svector@PAVCDetail@@$0EA@@@QBEIXZ PROC		; svector<CDetail *,64>::size, COMDAT
; _this$ = ecx

; 30   : 	IC u32		size()		const			{ return count;							}

	mov	eax, DWORD PTR [ecx+256]
	ret	0
?size@?$svector@PAVCDetail@@$0EA@@@QBEIXZ ENDP		; svector<CDetail *,64>::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ?end@?$svector@PAVCDetail@@$0EA@@@QAEPAPAVCDetail@@XZ
_TEXT	SEGMENT
?end@?$svector@PAVCDetail@@$0EA@@@QAEPAPAVCDetail@@XZ PROC ; svector<CDetail *,64>::end, COMDAT
; _this$ = ecx

; 27   : 	IC iterator	end	 ()						{ return array+count;					}

	mov	eax, DWORD PTR [ecx+256]
	lea	eax, DWORD PTR [ecx+eax*4]
	ret	0
?end@?$svector@PAVCDetail@@$0EA@@@QAEPAPAVCDetail@@XZ ENDP ; svector<CDetail *,64>::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ?begin@?$svector@PAVCDetail@@$0EA@@@QAEPAPAVCDetail@@XZ
_TEXT	SEGMENT
?begin@?$svector@PAVCDetail@@$0EA@@@QAEPAPAVCDetail@@XZ PROC ; svector<CDetail *,64>::begin, COMDAT
; _this$ = ecx

; 26   : 	IC iterator	begin()						{ return array;							}

	mov	eax, ecx
	ret	0
?begin@?$svector@PAVCDetail@@$0EA@@@QAEPAPAVCDetail@@XZ ENDP ; svector<CDetail *,64>::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ??0?$svector@PAVCDetail@@$0EA@@@QAE@XZ
_TEXT	SEGMENT
??0?$svector@PAVCDetail@@$0EA@@@QAE@XZ PROC		; svector<CDetail *,64>::svector<CDetail *,64>, COMDAT
; _this$ = ecx

; 21   : 	svector() : count(0) 

	mov	DWORD PTR [ecx+256], 0

; 22   : 	{}

	mov	eax, ecx
	ret	0
??0?$svector@PAVCDetail@@$0EA@@@QAE@XZ ENDP		; svector<CDetail *,64>::svector<CDetail *,64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?clear_not_free@?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear_not_free@?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAEXXZ PROC ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::clear_not_free, COMDAT
; _this$ = ecx

; 128  : 	void	clear_not_free		()									{ erase(begin(),end());			}

	push	ebx
	push	edi
	mov	edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1414 :         const pointer _Firstptr = _First._Ptr;

	mov	ebx, DWORD PTR [edi]

; 1415 :         const pointer _Lastptr  = _Last._Ptr;

	mov	eax, DWORD PTR [edi+4]

; 1416 :         auto& _My_data          = _Mypair._Myval2;
; 1417 :         pointer& _Mylast        = _My_data._Mylast;
; 1418 : 
; 1419 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1420 :         _STL_VERIFY(_First._Getcont() == _STD addressof(_My_data) && _Last._Getcont() == _STD addressof(_My_data)
; 1421 :                         && _Firstptr >= _My_data._Myfirst && _Lastptr >= _Firstptr && _Mylast >= _Lastptr,
; 1422 :             "vector erase iterator outside range");
; 1423 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1424 : 
; 1425 :         if (_Firstptr != _Lastptr) { // something to do, invalidate iterators

	cmp	ebx, eax
	je	SHORT $LN16@clear_not_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	push	esi
	mov	esi, eax
	sub	esi, eax

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	push	esi
	push	eax
	push	ebx
	call	_memmove
	add	esp, 12					; 0000000cH

; 4067 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	eax, DWORD PTR [esi+ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1430 :             _Mylast = _Newlast;

	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN16@clear_not_:
	pop	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 128  : 	void	clear_not_free		()									{ erase(begin(),end());			}

	pop	ebx
	ret	0
?clear_not_free@?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAEXXZ ENDP ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::clear_not_free
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?empty@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBE_NXZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::empty, COMDAT
; _this$ = ecx

; 1530 :         auto& _My_data = _Mypair._Myval2;
; 1531 :         return _My_data._Myfirst == _My_data._Mylast;

	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [ecx+4]
	sete	al

; 1532 :     }

	ret	0
?empty@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBE_NXZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?end@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@XZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::end, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], ecx

; 1472 :         auto& _My_data = _Mypair._Myval2;
; 1473 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));
; 1474 :     }

	ret	4
?end@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@XZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?begin@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@XZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::begin, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1462 :         auto& _My_data = _Mypair._Myval2;
; 1463 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));
; 1464 :     }

	ret	4
?begin@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@XZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?push_back@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEXABQAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEXABQAUSlotItem@CDetailManager@@@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::push_back, COMDAT
; _this$ = ecx

; 730  :         if (_Mylast != _My_data._Myend) {

	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN4@push_back

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

	add	DWORD PTR [ecx+4], 4

; 743  :         emplace_back(_Val);
; 744  :     }

	ret	4
$LN4@push_back:

; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	push	DWORD PTR __Val$[esp-4]
	push	edx
	call	??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Emplace_reallocate<CDetailManager::SlotItem * const &>

; 743  :         emplace_back(_Val);
; 744  :     }

	ret	4
?push_back@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEXABQAUSlotItem@CDetailManager@@@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$emplace_back@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?A_TABQAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$emplace_back@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?A_TABQAUSlotItem@CDetailManager@@@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::emplace_back<CDetailManager::SlotItem * const &>, COMDAT
; _this$ = ecx

; 727  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 728  :         auto& _My_data   = _Mypair._Myval2;
; 729  :         pointer& _Mylast = _My_data._Mylast;
; 730  :         if (_Mylast != _My_data._Myend) {

	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [ecx+8]
	je	SHORT $LN2@emplace_ba

; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

	add	DWORD PTR [ecx+4], 4

; 735  : #if _HAS_CXX17
; 736  :         return _Result;
; 737  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 738  :         (void) _Result;
; 739  : #endif // _HAS_CXX17
; 740  :     }

	ret	4
$LN2@emplace_ba:

; 731  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);
; 732  :         }
; 733  : 
; 734  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	push	DWORD PTR _<_Val_0>$[esp-4]
	push	edx
	call	??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Emplace_reallocate<CDetailManager::SlotItem * const &>

; 735  : #if _HAS_CXX17
; 736  :         return _Result;
; 737  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 738  :         (void) _Result;
; 739  : #endif // _HAS_CXX17
; 740  :     }

	ret	4
??$emplace_back@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?A_TABQAUSlotItem@CDetailManager@@@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::emplace_back<CDetailManager::SlotItem * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAE?A_TABQAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$_Emplace_back_with_unused_capacity@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAE?A_TABQAUSlotItem@CDetailManager@@@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Emplace_back_with_unused_capacity<CDetailManager::SlotItem * const &>, COMDAT
; _this$ = ecx

; 709  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 710  :         auto& _My_data   = _Mypair._Myval2;
; 711  :         pointer& _Mylast = _My_data._Mylast;
; 712  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 713  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _<_Val_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 714  :         _Orphan_range(_Mylast, _Mylast);
; 715  :         _Ty& _Result = *_Mylast;
; 716  :         ++_Mylast;

	add	DWORD PTR [ecx+4], 4

; 717  : #if _HAS_CXX17
; 718  :         return _Result;
; 719  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 720  :         (void) _Result;
; 721  : #endif // _HAS_CXX17
; 722  :     }

	ret	4
??$_Emplace_back_with_unused_capacity@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAE?A_TABQAUSlotItem@CDetailManager@@@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Emplace_back_with_unused_capacity<CDetailManager::SlotItem * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_fbox.h
;	COMDAT ?data@?$_box3@M@@QBEPBMXZ
_TEXT	SEGMENT
?data@?$_box3@M@@QBEPBMXZ PROC				; _box3<float>::data, COMDAT
; _this$ = ecx

; 28   : 	IC	const T* data		()	const									{ return &min.x;	}	

	mov	eax, ecx
	ret	0
?data@?$_box3@M@@QBEPBMXZ ENDP				; _box3<float>::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??0?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@QAE@XZ PROC ; resptr_core<R_constant,resptr_base<R_constant> >::resptr_core<R_constant,resptr_base<R_constant> >, COMDAT
; _this$ = ecx

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	ret	0
??0?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@QAE@XZ ENDP ; resptr_core<R_constant,resptr_base<R_constant> >::resptr_core<R_constant,resptr_base<R_constant> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
;	COMDAT ?distance_to_sqr@?$_vector3@M@@QBEMABU1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
?distance_to_sqr@?$_vector3@M@@QBEMABU1@@Z PROC		; _vector3<float>::distance_to_sqr, COMDAT
; _this$ = ecx

; 287  : 	{	return (x-v.x)*(x-v.x) + (y-v.y)*(y-v.y) + (z-v.z)*(z-v.z);	}

	mov	eax, DWORD PTR _v$[esp-4]
	fld	DWORD PTR [ecx+4]
	fsub	DWORD PTR [eax+4]
	fld	DWORD PTR [ecx]
	fsub	DWORD PTR [eax]
	fld	DWORD PTR [ecx+8]
	fsub	DWORD PTR [eax+8]
	fxch	ST(1)
	fmul	ST(0), ST(0)
	fxch	ST(2)
	fmul	ST(0), ST(0)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	ret	4
?distance_to_sqr@?$_vector3@M@@QBEMABU1@@Z ENDP		; _vector3<float>::distance_to_sqr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAE@PAPAUSlotItem@CDetailManager@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
___param0$ = 8						; size = 4
___param1$dead$ = 12					; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAE@PAPAUSlotItem@CDetailManager@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	eax, DWORD PTR ___param0$[esp-4]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAE@PAPAUSlotItem@CDetailManager@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator+, COMDAT
; _this$ = ecx

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [ecx]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 303  :         _Vector_iterator _Tmp = *this;
; 304  :         _Tmp += _Off; // TRANSITION, LLVM-49342
; 305  :         return _Tmp;
; 306  :     }

	ret	8
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator+
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEAAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEAAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator*, COMDAT
; _this$ = ecx

; 261  :         return const_cast<reference>(_Mybase::operator*());

	mov	eax, DWORD PTR [ecx]

; 262  :     }

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEAAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ
_TEXT	SEGMENT
?_Getal@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Getal, COMDAT
; _this$ = ecx

; 1805 :         return _Mypair._Get_first();

	mov	eax, ecx

; 1806 :     }

	ret	0
?_Getal@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Orphan_range@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@0@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
___formal$dead$ = 12					; size = 4
?_Orphan_range@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@0@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Orphan_range, COMDAT
; _this$dead$ = ecx

; 1801 :     _CONSTEXPR20_CONTAINER void _Orphan_range(pointer, pointer) const {}

	ret	8
?_Orphan_range@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@0@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEABQAUSlotItem@CDetailManager@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEABQAUSlotItem@CDetailManager@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator*, COMDAT
; _this$ = ecx

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());
; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");
; 49   :         _STL_VERIFY(
; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	eax, DWORD PTR [ecx]

; 54   :     }

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEABQAUSlotItem@CDetailManager@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAE@PAPAUSlotItem@CDetailManager@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$dead$ = 12					; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAE@PAPAUSlotItem@CDetailManager@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	eax, DWORD PTR __Parg$[esp-4]
	mov	DWORD PTR [ecx], eax

; 42   :         this->_Adopt(_Pvector);
; 43   :     }

	mov	eax, ecx
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAE@PAPAUSlotItem@CDetailManager@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?clear_and_free@?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear_and_free@?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEXXZ PROC ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::clear_and_free, COMDAT
; _this$ = ecx

; 127  : 	void	clear_and_free		()									{ inherited::clear();			}

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ecx+4], eax
	ret	0
?clear_and_free@?$xr_vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@@QAEXXZ ENDP ; xr_vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::clear_and_free
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Tidy@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXXZ PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Tidy, COMDAT
; _this$ = ecx

; 1742 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

	push	esi
	mov	esi, ecx

; 1743 :         auto& _My_data    = _Mypair._Myval2;
; 1744 :         pointer& _Myfirst = _My_data._Myfirst;
; 1745 :         pointer& _Mylast  = _My_data._Mylast;
; 1746 :         pointer& _Myend   = _My_data._Myend;
; 1747 : 
; 1748 :         _My_data._Orphan_all();
; 1749 : 
; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@Tidy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN2@Tidy:

; 1757 :         }
; 1758 :     }

	pop	esi
	ret	0
?_Tidy@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXXZ ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?begin@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@2@XZ PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::begin, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx

; 1462 :         auto& _My_data = _Mypair._Myval2;
; 1463 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));
; 1464 :     }

	ret	4
?begin@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@2@XZ ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >, COMDAT
; _this$ = ecx

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0

; 464  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 465  :     }

	mov	eax, ecx

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0

; 464  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 465  :     }

	ret	0
??0?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ??A?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAEAAPAUSlotItem@CDetailManager@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAEAAPAUSlotItem@CDetailManager@@I@Z PROC ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::operator[], COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [ecx+eax*4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 138  : 	reference operator[]		(size_type _Pos)					{ {VERIFY(_Pos<size());} return (*(begin() + _Pos)); }

	ret	4
??A?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAEAAPAUSlotItem@CDetailManager@@I@Z ENDP ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?size@?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QBEIXZ
_TEXT	SEGMENT
?size@?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QBEIXZ PROC ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::size, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 125  : 	u32		size				() const							{ return (u32)inherited::size();} 

	ret	0
?size@?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QBEIXZ ENDP ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Orphan_range@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEXPAPAUSlotItem@CDetailManager@@0@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
___formal$dead$ = 12					; size = 4
?_Orphan_range@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEXPAPAUSlotItem@CDetailManager@@0@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Orphan_range, COMDAT
; _this$dead$ = ecx

; 1801 :     _CONSTEXPR20_CONTAINER void _Orphan_range(pointer, pointer) const {}

	ret	8
?_Orphan_range@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEXPAPAUSlotItem@CDetailManager@@0@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?erase@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@0@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::erase, COMDAT
; _this$ = ecx

; 1414 :         const pointer _Firstptr = _First._Ptr;
; 1415 :         const pointer _Lastptr  = _Last._Ptr;
; 1416 :         auto& _My_data          = _Mypair._Myval2;
; 1417 :         pointer& _Mylast        = _My_data._Mylast;

	mov	eax, DWORD PTR __Last$[esp-4]
	push	ebx
	push	edi
	mov	edi, DWORD PTR __First$[esp+4]
	mov	ebx, ecx
	cmp	edi, eax

; 1418 : 
; 1419 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1420 :         _STL_VERIFY(_First._Getcont() == _STD addressof(_My_data) && _Last._Getcont() == _STD addressof(_My_data)
; 1421 :                         && _Firstptr >= _My_data._Myfirst && _Lastptr >= _Firstptr && _Mylast >= _Lastptr,
; 1422 :             "vector erase iterator outside range");
; 1423 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1424 : 
; 1425 :         if (_Firstptr != _Lastptr) { // something to do, invalidate iterators

	je	SHORT $LN15@erase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xutility

; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	push	esi
	mov	esi, DWORD PTR [ebx+4]
	sub	esi, eax

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	push	esi
	push	eax
	push	edi
	call	_memmove
	add	esp, 12					; 0000000cH

; 4067 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	eax, DWORD PTR [edi+esi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1430 :             _Mylast = _Newlast;

	mov	DWORD PTR [ebx+4], eax

; 1431 :         }
; 1432 : 
; 1433 :         return iterator(_Firstptr, _STD addressof(_My_data));

	pop	esi
$LN15@erase:

; 1434 :     }

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax], edi
	pop	edi
	pop	ebx
	ret	12					; 0000000cH
?erase@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@2@0@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
___param0$ = 8						; size = 4
___param1$dead$ = 12					; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	eax, DWORD PTR ___param0$[esp-4]
	mov	DWORD PTR [ecx], eax
	mov	eax, ecx
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator+=, COMDAT
; _this$ = ecx

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 2
	add	DWORD PTR [ecx], eax

; 298  :         _Mybase::operator+=(_Off);
; 299  :         return *this;

	mov	eax, ecx

; 300  :     }

	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEABV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEABV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator*, COMDAT
; _this$ = ecx

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());
; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");
; 49   :         _STL_VERIFY(
; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	eax, DWORD PTR [ecx]

; 54   :     }

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEABV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$dead$ = 12					; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	eax, DWORD PTR __Parg$[esp-4]
	mov	DWORD PTR [ecx], eax

; 42   :         this->_Adopt(_Pvector);
; 43   :     }

	mov	eax, ecx
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAEAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAEAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ PROC ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1339 :         return *this;

	mov	eax, ecx

; 1340 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAEAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ ENDP ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator+, COMDAT
; _this$ = ecx

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	lea	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 303  :         _Vector_iterator _Tmp = *this;
; 304  :         _Tmp += _Off; // TRANSITION, LLVM-49342
; 305  :         return _Tmp;
; 306  :     }

	ret	8
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator+
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ
_TEXT	SEGMENT
?_Getal@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Getal, COMDAT
; _this$ = ecx

; 1805 :         return _Mypair._Get_first();

	mov	eax, ecx

; 1806 :     }

	ret	0
?_Getal@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Destroy@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@0@Z
_TEXT	SEGMENT
__First$dead$ = 8					; size = 4
__Last$dead$ = 12					; size = 4
?_Destroy@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@0@Z PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Destroy, COMDAT
; _this$dead$ = ecx

; 1666 :         // destroy [_First, _Last) using allocator
; 1667 :         _Destroy_range(_First, _Last, _Getal());
; 1668 :     }

	ret	8
?_Destroy@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@0@Z ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?clear@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXXZ PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::clear, COMDAT
; _this$ = ecx

; 1437 :         auto& _My_data    = _Mypair._Myval2;
; 1438 :         pointer& _Myfirst = _My_data._Myfirst;
; 1439 :         pointer& _Mylast  = _My_data._Mylast;
; 1440 : 
; 1441 :         _My_data._Orphan_all();
; 1442 :         _Destroy(_Myfirst, _Mylast);
; 1443 :         _Mylast = _Myfirst;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ecx+4], eax

; 1444 :     }

	ret	0
?clear@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXXZ ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?deallocate@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_n$dead$ = 12						; size = 4
?deallocate@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z PROC ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::deallocate, COMDAT
; _this$dead$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR _p$[esp-4]
	test	eax, eax
	je	SHORT $LN4@deallocate
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN4@deallocate:
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 82   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

	ret	8
?deallocate@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z ENDP ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?size@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::size, COMDAT
; _this$ = ecx

; 1535 :         auto& _My_data = _Mypair._Myval2;
; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1537 :     }

	ret	0
?size@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator+=, COMDAT
; _this$ = ecx

; 118  :         _Verify_offset(_Off);
; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 2
	add	DWORD PTR [ecx], eax

; 120  :         return *this;

	mov	eax, ecx

; 121  :     }

	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator+=, COMDAT
; _this$ = ecx

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	shl	eax, 2
	add	DWORD PTR [ecx], eax

; 298  :         _Mybase::operator+=(_Off);
; 299  :         return *this;

	mov	eax, ecx

; 300  :     }

	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QAEAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QAEAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ PROC ; std::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1339 :         return *this;

	mov	eax, ecx

; 1340 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QAEAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ ENDP ; std::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEXH@Z
_TEXT	SEGMENT
__Off$dead$ = 8						; size = 4
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEXH@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::_Verify_offset, COMDAT
; _this$dead$ = ecx

; 102  : #if _ITERATOR_DEBUG_LEVEL == 0
; 103  :         (void) _Off;
; 104  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 105  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());
; 106  :         _STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");
; 107  :         if (_Off < 0) {
; 108  :             _STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");
; 109  :         }
; 110  : 
; 111  :         if (_Off > 0) {
; 112  :             _STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");
; 113  :         }
; 114  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 115  :     }

	ret	4
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@QBEXH@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator+=, COMDAT
; _this$ = ecx

; 118  :         _Verify_offset(_Off);
; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	shl	eax, 2
	add	DWORD PTR [ecx], eax

; 120  :         return *this;

	mov	eax, ecx

; 121  :     }

	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEXH@Z
_TEXT	SEGMENT
__Off$dead$ = 8						; size = 4
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEXH@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::_Verify_offset, COMDAT
; _this$dead$ = ecx

; 102  : #if _ITERATOR_DEBUG_LEVEL == 0
; 103  :         (void) _Off;
; 104  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 105  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());
; 106  :         _STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");
; 107  :         if (_Off < 0) {
; 108  :             _STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");
; 109  :         }
; 110  : 
; 111  :         if (_Off > 0) {
; 112  :             _STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");
; 113  :         }
; 114  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 115  :     }

	ret	4
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@QBEXH@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCDetail@@@@YAPAVCDetail@@XZ
_TEXT	SEGMENT
??$xr_new@VCDetail@@@@YAPAVCDetail@@XZ PROC		; xr_new<CDetail>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	76					; 0000004cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	push	76					; 0000004cH
	mov	esi, eax
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
	mov	ecx, esi
	call	DWORD PTR __imp_??0IRender_DetailModel@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CDetail@@6B@
	mov	eax, esi
	pop	esi

; 70   : }

	ret	0
??$xr_new@VCDetail@@@@YAPAVCDetail@@XZ ENDP		; xr_new<CDetail>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_delete@VCDetail@@@@YAXAAPAVCDetail@@@Z
_TEXT	SEGMENT
??$xr_delete@VCDetail@@@@YAXAAPAVCDetail@@@Z PROC	; xr_delete<CDetail>, COMDAT
; _ptr$ = ecx

; 150  : {

	push	edi
	mov	edi, ecx

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN2@xr_delete

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	esi
	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [edi]
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+8]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);
; 154  : 		ptr = nullptr;

	mov	DWORD PTR [edi], 0
	pop	esi
$LN2@xr_delete:

; 155  : 	}
; 156  : }

	pop	edi
	ret	0
??$xr_delete@VCDetail@@@@YAXAAPAVCDetail@@@Z ENDP	; xr_delete<CDetail>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$move@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z
_TEXT	SEGMENT
??$move@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z PROC ; std::move<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>, COMDAT
; __Arg$ = ecx

; 1397 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, ecx

; 1398 : }

	ret	0
??$move@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z ENDP ; std::move<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z
_TEXT	SEGMENT
??$forward@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z PROC ; std::forward<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; __Arg$ = ecx

; 1386 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1387 : }

	ret	0
??$forward@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z ENDP ; std::forward<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$_Unfancy@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV1@@Z
_TEXT	SEGMENT
??$_Unfancy@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV1@@Z PROC ; std::_Unfancy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; __Ptr$ = ecx

; 266  :     return _Ptr;

	mov	eax, ecx

; 267  : }

	ret	0
??$_Unfancy@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV1@@Z ENDP ; std::_Unfancy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAV1@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@$$QAPAV3@@Z
_TEXT	SEGMENT
_<_Args_0>$ = 8						; size = 4
??$construct@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAV1@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@$$QAPAV3@@Z PROC ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::construct<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; __Al$dead$ = ecx
; __Ptr$ = edx

; 565  :         if constexpr (_Uses_default_construct<_Alloc, _Ty*, _Types...>::value) {
; 566  :             (void) _Al; // TRANSITION, DevCom-1004719
; 567  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 568  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 569  : #else // __cpp_lib_constexpr_dynamic_alloc
; 570  :             ::new (static_cast<void*>(_Ptr)) _Ty(_STD forward<_Types>(_Args)...);
; 571  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 572  :         } else {
; 573  :             _Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 574  :         }
; 575  :     }

	ret	0
??$construct@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAV1@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@$$QAPAV3@@Z ENDP ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::construct<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z
_TEXT	SEGMENT
__Backout$2 = -76					; size = 12
__Backout$3 = -64					; size = 12
__Backout$4 = -52					; size = 12
__UFirst$5 = -40					; size = 4
__UFirst$6 = -36					; size = 4
__UFirst$7 = -32					; size = 4
__Newvec$ = -28						; size = 4
__Newcapacity$1$ = -24					; size = 4
__Newsize$1$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
tv555 = 8						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_reallocate<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; _this$ = ecx

; 752  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx

; 753  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 754  :         _Alty& _Al        = _Getal();
; 755  :         auto& _My_data    = _Mypair._Myval2;
; 756  :         pointer& _Myfirst = _My_data._Myfirst;
; 757  :         pointer& _Mylast  = _My_data._Mylast;
; 758  : 
; 759  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 760  : 
; 761  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

	mov	edx, DWORD PTR [edi]
	mov	esi, DWORD PTR __Whereptr$[ebp]
	mov	ebx, esi
	sub	ebx, edx
	sar	ebx, 2

; 762  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

	mov	eax, DWORD PTR [edi+4]
	sub	eax, edx
	sar	eax, 2

; 763  : 
; 764  :         if (_Oldsize == max_size()) {

	cmp	eax, 1073741823				; 3fffffffH
	je	$LN83@Emplace_re

; 766  :         }
; 767  : 
; 768  :         const size_type _Newsize     = _Oldsize + 1;

	inc	eax
	mov	DWORD PTR __Newsize$1$[ebp], eax

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, edx
	sar	ecx, 2

; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	edx, ecx
	shr	edx, 1
	mov	eax, 1073741823				; 3fffffffH
	sub	eax, edx
	cmp	ecx, eax
	jbe	SHORT $LN12@Emplace_re

; 1676 :             return _Max; // geometric growth would overflow

	mov	eax, 1073741823				; 3fffffffH
	jmp	SHORT $LN81@Emplace_re
$LN12@Emplace_re:

; 1677 :         }
; 1678 : 
; 1679 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	eax, DWORD PTR [edx+ecx]

; 1680 : 
; 1681 :         if (_Geometric < _Newsize) {

	cmp	eax, DWORD PTR __Newsize$1$[ebp]
	cmovb	eax, DWORD PTR __Newsize$1$[ebp]
$LN81@Emplace_re:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	DWORD PTR __Newcapacity$1$[ebp], eax
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 771  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

	mov	edx, eax
	mov	DWORD PTR __Newvec$[ebp], edx

; 772  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;
; 773  :         pointer _Constructed_first      = _Constructed_last;
; 774  : 
; 775  :         _TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 776  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

	lea	ecx, DWORD PTR [edx+ebx*4]
	mov	DWORD PTR tv555[ebp], ecx
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 777  :         _Constructed_first = _Newvec + _Whereoff;
; 778  : 
; 779  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

	mov	ebx, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	cmp	esi, ebx
	jne	SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1703 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	DWORD PTR __UFirst$7[ebp], ecx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	DWORD PTR __Backout$4[ebp], edx
	mov	DWORD PTR __Backout$4[ebp+4], edx
	mov	DWORD PTR __Backout$4[ebp+8], edi
	npad	1
$LL28@Emplace_re:

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, ebx
	je	SHORT $LN27@Emplace_re

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4
	mov	DWORD PTR __Backout$4[ebp+4], edx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	ecx, 4
	mov	DWORD PTR __UFirst$7[ebp], ecx
	jmp	SHORT $LL28@Emplace_re
$LN27@Emplace_re:

; 1625 :         _First = _Last;

	mov	DWORD PTR __Backout$4[ebp], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 781  :         } else { // provide basic guarantee

	mov	ebx, DWORD PTR tv555[ebp]
	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1703 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	DWORD PTR __UFirst$6[ebp], ecx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	DWORD PTR __Backout$3[ebp], edx
	mov	DWORD PTR __Backout$3[ebp+4], edx
	mov	DWORD PTR __Backout$3[ebp+8], edi
	npad	6
$LL41@Emplace_re:

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	je	SHORT $LN40@Emplace_re

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4
	mov	DWORD PTR __Backout$3[ebp+4], edx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	ecx, 4
	mov	DWORD PTR __UFirst$6[ebp], ecx
	jmp	SHORT $LL41@Emplace_re
$LN40@Emplace_re:

; 1625 :         _First = _Last;

	mov	DWORD PTR __Backout$3[ebp], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 784  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

	mov	ebx, DWORD PTR tv555[ebp]
	lea	ecx, DWORD PTR [ebx+4]

; 1646 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

	mov	edx, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1703 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	DWORD PTR __UFirst$5[ebp], esi

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	DWORD PTR __Backout$2[ebp], ecx
	mov	DWORD PTR __Backout$2[ebp+4], ecx
	mov	DWORD PTR __Backout$2[ebp+8], edi
	npad	2
$LL54@Emplace_re:

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	esi, edx
	je	SHORT $LN53@Emplace_re

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax

; 1621 :         ++_Last;

	add	ecx, 4
	mov	DWORD PTR __Backout$2[ebp+4], ecx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	esi, 4
	mov	DWORD PTR __UFirst$5[ebp], esi
	jmp	SHORT $LL54@Emplace_re
$LN53@Emplace_re:

; 1625 :         _First = _Last;

	mov	DWORD PTR __Backout$2[ebp], ecx
$LN5@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1732 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN68@Emplace_re
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	push	eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN68@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1737 :         _Myfirst = _Newvec;

	mov	eax, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR [edi], eax

; 1738 :         _Mylast  = _Newvec + _Newsize;

	mov	ecx, DWORD PTR __Newsize$1$[ebp]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [edi+4], ecx

; 1739 :         _Myend   = _Newvec + _Newcapacity;

	mov	ecx, DWORD PTR __Newcapacity$1$[ebp]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [edi+8], ecx

; 790  :         _CATCH_END
; 791  : 
; 792  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 793  :         return _Newvec + _Whereoff;

	mov	eax, ebx

; 794  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z$0:

; 785  :         }
; 786  :         _CATCH_ALL
; 787  :         _Destroy(_Constructed_first, _Constructed_last);
; 788  :         _Al.deallocate(_Newvec, _Newcapacity);

	push	ecx
	push	DWORD PTR __Newvec$[ebp]
	call	?deallocate@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@I@Z ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::deallocate

; 789  :         _RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN83@Emplace_re:

; 765  :             _Xlength();

	call	?_Xlength@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@CAXXZ ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Xlength
$LN80@Emplace_re:
	int	3
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV2@$$QAPAV2@@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_reallocate<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
;	COMDAT ??$xr_free@USlotItem@CDetailManager@@@@YAXAAPAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
??$xr_free@USlotItem@CDetailManager@@@@YAXAAPAUSlotItem@CDetailManager@@@Z PROC ; xr_free<CDetailManager::SlotItem>, COMDAT
; _P$ = ecx

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@xr_free
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN2@xr_free:
	pop	esi
	ret	0
??$xr_free@USlotItem@CDetailManager@@@@YAXAAPAUSlotItem@CDetailManager@@@Z ENDP ; xr_free<CDetailManager::SlotItem>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Resize<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1245 :     _CONSTEXPR20_CONTAINER void _Resize(const size_type _Newsize, const _Ty2& _Val) {

	mov	edx, ecx

; 1246 :         // trim or append elements, provide strong guarantee
; 1247 :         auto& _My_data      = _Mypair._Myval2;
; 1248 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1249 :         pointer& _Mylast    = _My_data._Mylast;
; 1250 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);
; 1251 :         if (_Newsize < _Oldsize) { // trim

	mov	ecx, DWORD PTR __Newsize$[esp-4]
	push	esi
	push	edi
	mov	eax, DWORD PTR [edx+4]
	mov	edi, DWORD PTR [edx]
	sub	eax, edi
	sar	eax, 2
	imul	esi, eax, -1431655765
	cmp	ecx, esi
	jae	SHORT $LN2@Resize

; 1252 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	eax, DWORD PTR [ecx+ecx*2]
	lea	eax, DWORD PTR [edi+eax*4]
	pop	edi

; 1268 :             _Orphan_range(_Oldlast, _Oldlast);
; 1269 :         }
; 1270 : 
; 1271 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1272 :     }

	mov	DWORD PTR [edx+4], eax
	pop	esi
	ret	8
$LN2@Resize:

; 1253 :             _Orphan_range(_Newlast, _Mylast);
; 1254 :             _Destroy(_Newlast, _Mylast);
; 1255 :             _Mylast = _Newlast;
; 1256 :             return;
; 1257 :         }
; 1258 : 
; 1259 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1260 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	eax, DWORD PTR [edx+8]
	sub	eax, edi
	sar	eax, 2
	imul	eax, eax, -1431655765

; 1261 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	ecx, eax
	jbe	SHORT $LN4@Resize

; 1268 :             _Orphan_range(_Oldlast, _Oldlast);
; 1269 :         }
; 1270 : 
; 1271 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1272 :     }

	pop	edi
	pop	esi

; 1262 :                 _Resize_reallocate(_Newsize, _Val);

	mov	DWORD PTR __Newsize$[esp-4], ecx
	mov	ecx, edx
	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1263 :                 return;
; 1264 :             }
; 1265 : 
; 1266 :             const pointer _Oldlast = _Mylast;
; 1267 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

	mov	eax, DWORD PTR __Val$[esp+4]
	sub	ecx, esi
	movzx	eax, BYTE PTR [eax]
	push	eax
	push	ecx
	push	DWORD PTR [edx+4]
	call	?_Ufill@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV3@IU_Value_init_tag@2@@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Ufill

; 1268 :             _Orphan_range(_Oldlast, _Oldlast);
; 1269 :         }
; 1270 : 
; 1271 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1272 :     }

	mov	DWORD PTR [edx+4], eax
$LN3@Resize:
	pop	edi
	pop	esi
	ret	8
??$_Resize@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
??$addressof@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >, COMDAT
; __Val$ = ecx

; 253  :     return __builtin_addressof(_Val);

	mov	eax, ecx

; 254  : }

	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@ABQAUSlotItem@CDetailManager@@@std@@YAABQAUSlotItem@CDetailManager@@ABQAU12@@Z
_TEXT	SEGMENT
??$forward@ABQAUSlotItem@CDetailManager@@@std@@YAABQAUSlotItem@CDetailManager@@ABQAU12@@Z PROC ; std::forward<CDetailManager::SlotItem * const &>, COMDAT
; __Arg$ = ecx

; 1386 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1387 : }

	ret	0
??$forward@ABQAUSlotItem@CDetailManager@@@std@@YAABQAUSlotItem@CDetailManager@@ABQAU12@@Z ENDP ; std::forward<CDetailManager::SlotItem * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@PAUSlotItem@CDetailManager@@ABQAU12@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@ABQAU34@@Z
_TEXT	SEGMENT
_<_Args_0>$ = 8						; size = 4
??$construct@PAUSlotItem@CDetailManager@@ABQAU12@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@ABQAU34@@Z PROC ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::construct<CDetailManager::SlotItem *,CDetailManager::SlotItem * const &>, COMDAT
; __Al$dead$ = ecx
; __Ptr$ = edx

; 565  :         if constexpr (_Uses_default_construct<_Alloc, _Ty*, _Types...>::value) {
; 566  :             (void) _Al; // TRANSITION, DevCom-1004719
; 567  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 568  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 569  : #else // __cpp_lib_constexpr_dynamic_alloc
; 570  :             ::new (static_cast<void*>(_Ptr)) _Ty(_STD forward<_Types>(_Args)...);
; 571  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 572  :         } else {
; 573  :             _Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 574  :         }
; 575  :     }

	ret	0
??$construct@PAUSlotItem@CDetailManager@@ABQAU12@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@ABQAU34@@Z ENDP ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::construct<CDetailManager::SlotItem *,CDetailManager::SlotItem * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
__Backout$2 = -76					; size = 12
__Backout$3 = -64					; size = 12
__Backout$4 = -52					; size = 12
__UFirst$5 = -40					; size = 4
__UFirst$6 = -36					; size = 4
__UFirst$7 = -32					; size = 4
__Newvec$ = -28						; size = 4
__Newcapacity$1$ = -24					; size = 4
__Newsize$1$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
tv555 = 8						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Emplace_reallocate<CDetailManager::SlotItem * const &>, COMDAT
; _this$ = ecx

; 752  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx

; 753  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 754  :         _Alty& _Al        = _Getal();
; 755  :         auto& _My_data    = _Mypair._Myval2;
; 756  :         pointer& _Myfirst = _My_data._Myfirst;
; 757  :         pointer& _Mylast  = _My_data._Mylast;
; 758  : 
; 759  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 760  : 
; 761  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

	mov	edx, DWORD PTR [edi]
	mov	esi, DWORD PTR __Whereptr$[ebp]
	mov	ebx, esi
	sub	ebx, edx
	sar	ebx, 2

; 762  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

	mov	eax, DWORD PTR [edi+4]
	sub	eax, edx
	sar	eax, 2

; 763  : 
; 764  :         if (_Oldsize == max_size()) {

	cmp	eax, 1073741823				; 3fffffffH
	je	$LN83@Emplace_re

; 766  :         }
; 767  : 
; 768  :         const size_type _Newsize     = _Oldsize + 1;

	inc	eax
	mov	DWORD PTR __Newsize$1$[ebp], eax

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, edx
	sar	ecx, 2

; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	edx, ecx
	shr	edx, 1
	mov	eax, 1073741823				; 3fffffffH
	sub	eax, edx
	cmp	ecx, eax
	jbe	SHORT $LN12@Emplace_re

; 1676 :             return _Max; // geometric growth would overflow

	mov	eax, 1073741823				; 3fffffffH
	jmp	SHORT $LN81@Emplace_re
$LN12@Emplace_re:

; 1677 :         }
; 1678 : 
; 1679 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	eax, DWORD PTR [edx+ecx]

; 1680 : 
; 1681 :         if (_Geometric < _Newsize) {

	cmp	eax, DWORD PTR __Newsize$1$[ebp]
	cmovb	eax, DWORD PTR __Newsize$1$[ebp]
$LN81@Emplace_re:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	DWORD PTR __Newcapacity$1$[ebp], eax
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 771  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

	mov	edx, eax
	mov	DWORD PTR __Newvec$[ebp], edx

; 772  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;
; 773  :         pointer _Constructed_first      = _Constructed_last;
; 774  : 
; 775  :         _TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 776  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

	lea	ecx, DWORD PTR [edx+ebx*4]
	mov	DWORD PTR tv555[ebp], ecx
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax

; 777  :         _Constructed_first = _Newvec + _Whereoff;
; 778  : 
; 779  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

	mov	ebx, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	cmp	esi, ebx
	jne	SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1703 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	DWORD PTR __UFirst$7[ebp], ecx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	DWORD PTR __Backout$4[ebp], edx
	mov	DWORD PTR __Backout$4[ebp+4], edx
	mov	DWORD PTR __Backout$4[ebp+8], edi
	npad	1
$LL28@Emplace_re:

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, ebx
	je	SHORT $LN27@Emplace_re

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4
	mov	DWORD PTR __Backout$4[ebp+4], edx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	ecx, 4
	mov	DWORD PTR __UFirst$7[ebp], ecx
	jmp	SHORT $LL28@Emplace_re
$LN27@Emplace_re:

; 1625 :         _First = _Last;

	mov	DWORD PTR __Backout$4[ebp], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 781  :         } else { // provide basic guarantee

	mov	ebx, DWORD PTR tv555[ebp]
	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1703 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	DWORD PTR __UFirst$6[ebp], ecx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	DWORD PTR __Backout$3[ebp], edx
	mov	DWORD PTR __Backout$3[ebp+4], edx
	mov	DWORD PTR __Backout$3[ebp+8], edi
	npad	6
$LL41@Emplace_re:

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	je	SHORT $LN40@Emplace_re

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4
	mov	DWORD PTR __Backout$3[ebp+4], edx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	ecx, 4
	mov	DWORD PTR __UFirst$6[ebp], ecx
	jmp	SHORT $LL41@Emplace_re
$LN40@Emplace_re:

; 1625 :         _First = _Last;

	mov	DWORD PTR __Backout$3[ebp], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 784  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

	mov	ebx, DWORD PTR tv555[ebp]
	lea	ecx, DWORD PTR [ebx+4]

; 1646 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

	mov	edx, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1703 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	DWORD PTR __UFirst$5[ebp], esi

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	DWORD PTR __Backout$2[ebp], ecx
	mov	DWORD PTR __Backout$2[ebp+4], ecx
	mov	DWORD PTR __Backout$2[ebp+8], edi
	npad	2
$LL54@Emplace_re:

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	esi, edx
	je	SHORT $LN53@Emplace_re

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ecx], eax

; 1621 :         ++_Last;

	add	ecx, 4
	mov	DWORD PTR __Backout$2[ebp+4], ecx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	esi, 4
	mov	DWORD PTR __UFirst$5[ebp], esi
	jmp	SHORT $LL54@Emplace_re
$LN53@Emplace_re:

; 1625 :         _First = _Last;

	mov	DWORD PTR __Backout$2[ebp], ecx
$LN5@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1732 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN68@Emplace_re
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	push	eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN68@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1737 :         _Myfirst = _Newvec;

	mov	eax, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR [edi], eax

; 1738 :         _Mylast  = _Newvec + _Newsize;

	mov	ecx, DWORD PTR __Newsize$1$[ebp]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [edi+4], ecx

; 1739 :         _Myend   = _Newvec + _Newcapacity;

	mov	ecx, DWORD PTR __Newcapacity$1$[ebp]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [edi+8], ecx

; 790  :         _CATCH_END
; 791  : 
; 792  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 793  :         return _Newvec + _Whereoff;

	mov	eax, ebx

; 794  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z$0:

; 785  :         }
; 786  :         _CATCH_ALL
; 787  :         _Destroy(_Constructed_first, _Constructed_last);
; 788  :         _Al.deallocate(_Newvec, _Newcapacity);

	push	ecx
	push	DWORD PTR __Newvec$[ebp]
	call	?deallocate@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEXPAPAUSlotItem@CDetailManager@@I@Z ; xalloc<CDetailManager::SlotItem *>::deallocate

; 789  :         _RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN83@Emplace_re:

; 765  :             _Xlength();

	call	?_Xlength@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@CAXXZ ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Xlength
$LN80@Emplace_re:
	int	3
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@ABQAUSlotItem@CDetailManager@@@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Emplace_reallocate<CDetailManager::SlotItem * const &>
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
??$addressof@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >, COMDAT
; __Val$ = ecx

; 253  :     return __builtin_addressof(_Val);

	mov	eax, ecx

; 254  : }

	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1>::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1><>, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1331 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1331 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	ret	4
??$?0$$V@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1>::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Move_unchecked@PAPAUSlotItem@CDetailManager@@PAPAU12@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@00@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
??$_Move_unchecked@PAPAUSlotItem@CDetailManager@@PAPAU12@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@00@Z PROC ; std::_Move_unchecked<CDetailManager::SlotItem * *,CDetailManager::SlotItem * *>, COMDAT
; __First$ = ecx
; __Last$ = edx

; 4308 : _CONSTEXPR20 _OutIt _Move_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

	push	esi

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	esi, DWORD PTR __Dest$[esp]

; 4308 : _CONSTEXPR20 _OutIt _Move_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

	push	edi
	mov	edi, edx

; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	edi, ecx

; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	push	edi
	push	ecx
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH

; 4067 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	eax, DWORD PTR [edi+esi]

; 4309 :     // move [_First, _Last) to [_Dest, ...)
; 4310 :     // note: _Move_unchecked has callers other than the move family
; 4311 :     if constexpr (_Ptr_move_cat<_InIt, _OutIt>::_Trivially_copyable) {
; 4312 : #ifdef __cpp_lib_is_constant_evaluated
; 4313 :         if (!_STD is_constant_evaluated())
; 4314 : #endif // __cpp_lib_is_constant_evaluated
; 4315 :         {
; 4316 :             return _Copy_memmove(_First, _Last, _Dest);

	pop	edi
	pop	esi

; 4317 :         }
; 4318 :     }
; 4319 : 
; 4320 :     for (; _First != _Last; ++_Dest, (void) ++_First) {
; 4321 :         *_Dest = _STD move(*_First);
; 4322 :     }
; 4323 : 
; 4324 :     return _Dest;
; 4325 : }

	ret	0
??$_Move_unchecked@PAPAUSlotItem@CDetailManager@@PAPAU12@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@00@Z ENDP ; std::_Move_unchecked<CDetailManager::SlotItem * *,CDetailManager::SlotItem * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_range@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAV1@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z
_TEXT	SEGMENT
__Al$dead$ = 8						; size = 4
??$_Destroy_range@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAV1@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z PROC ; std::_Destroy_range<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >, COMDAT
; __First$dead$ = ecx
; __Last$dead$ = edx

; 901  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 902  :     using _Ty = typename _Alloc::value_type;
; 903  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 904  :         for (; _First != _Last; ++_First) {
; 905  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 906  :         }
; 907  :     }
; 908  : }

	ret	0
??$_Destroy_range@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAV1@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z ENDP ; std::_Destroy_range<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
;	COMDAT ??$xr_free@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@YAXAAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z
_TEXT	SEGMENT
??$xr_free@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@YAXAAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z PROC ; xr_free<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >, COMDAT
; _P$ = ecx

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@xr_free
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN2@xr_free:
	pop	esi
	ret	0
??$xr_free@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@YAXAAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ENDP ; xr_free<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0CDetail@@QAE@XZ
_TEXT	SEGMENT
??0CDetail@@QAE@XZ PROC					; CDetail::CDetail, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0IRender_DetailModel@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CDetail@@6B@
	mov	eax, esi
	pop	esi
	ret	0
??0CDetail@@QAE@XZ ENDP					; CDetail::CDetail
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\DetailModel.cpp
;	COMDAT ??_GCDetail@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDetail@@UAEPAXI@Z PROC				; CDetail::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 6    : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CDetail@@6B@

; 7    : }

	call	DWORD PTR __imp_??1IRender_DetailModel@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	76					; 0000004cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCDetail@@UAEPAXI@Z ENDP				; CDetail::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??R?$xr_special_free@$00VCDetail@@@@QAEXAAPAVCDetail@@@Z
_TEXT	SEGMENT
_ptr$ = 8						; size = 4
??R?$xr_special_free@$00VCDetail@@@@QAEXAAPAVCDetail@@@Z PROC ; xr_special_free<1,CDetail>::operator(), COMDAT
; _this$dead$ = ecx

; 131  : 	{

	push	esi

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	mov	esi, DWORD PTR _ptr$[esp]
	push	edi
	push	DWORD PTR [esi]
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+8]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi
	pop	esi

; 135  : 	}

	ret	4
??R?$xr_special_free@$00VCDetail@@@@QAEXAAPAVCDetail@@@Z ENDP ; xr_special_free<1,CDetail>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@CAXXZ PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Xlength, COMDAT

; 1761 :         _Xlength_error("vector too long");

	push	OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN3@Xlength:
	int	3
?_Xlength@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@CAXXZ ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Change_array@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@II@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Change_array, COMDAT
; _this$ = ecx

; 1723 :         const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

	push	esi
	mov	esi, ecx

; 1724 :         // orphan all iterators, discard old array, acquire new array
; 1725 :         auto& _My_data    = _Mypair._Myval2;
; 1726 :         pointer& _Myfirst = _My_data._Myfirst;
; 1727 :         pointer& _Mylast  = _My_data._Mylast;
; 1728 :         pointer& _Myend   = _My_data._Myend;
; 1729 : 
; 1730 :         _My_data._Orphan_all();
; 1731 : 
; 1732 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN7@Change_arr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN7@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1737 :         _Myfirst = _Newvec;

	mov	ecx, DWORD PTR __Newvec$[esp]

; 1738 :         _Mylast  = _Newvec + _Newsize;

	mov	eax, DWORD PTR __Newsize$[esp]
	mov	DWORD PTR [esi], ecx
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+4], eax

; 1739 :         _Myend   = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[esp]
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+8], eax
	pop	esi

; 1740 :     }

	ret	12					; 0000000cH
?_Change_array@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@II@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEII@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEII@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR [ecx]

; 1671 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1672 :         const size_type _Oldcapacity = capacity();
; 1673 :         const auto _Max              = max_size();
; 1674 : 
; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	ecx, 1073741823				; 3fffffffH

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sar	edx, 2

; 1670 :     _CONSTEXPR20_CONTAINER size_type _Calculate_growth(const size_type _Newsize) const {

	push	esi

; 1671 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1672 :         const size_type _Oldcapacity = capacity();
; 1673 :         const auto _Max              = max_size();
; 1674 : 
; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	esi, edx
	shr	esi, 1
	sub	ecx, esi
	cmp	edx, ecx
	jbe	SHORT $LN2@Calculate_

; 1676 :             return _Max; // geometric growth would overflow

	mov	eax, 1073741823				; 3fffffffH
	pop	esi

; 1682 :             return _Newsize; // geometric growth would be insufficient
; 1683 :         }
; 1684 : 
; 1685 :         return _Geometric; // geometric growth is sufficient
; 1686 :     }

	ret	4
$LN2@Calculate_:

; 1677 :         }
; 1678 : 
; 1679 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	eax, DWORD PTR [esi+edx]

; 1680 : 
; 1681 :         if (_Geometric < _Newsize) {

	cmp	eax, DWORD PTR __Newsize$[esp]
	pop	esi
	cmovb	eax, DWORD PTR __Newsize$[esp-4]

; 1682 :             return _Newsize; // geometric growth would be insufficient
; 1683 :         }
; 1684 : 
; 1685 :         return _Geometric; // geometric growth is sufficient
; 1686 :     }

	ret	4
?_Calculate_growth@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEII@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Destroy@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@0@Z
_TEXT	SEGMENT
__First$dead$ = 8					; size = 4
__Last$dead$ = 12					; size = 4
?_Destroy@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@0@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Destroy, COMDAT
; _this$dead$ = ecx

; 1666 :         // destroy [_First, _Last) using allocator
; 1667 :         _Destroy_range(_First, _Last, _Getal());
; 1668 :     }

	ret	8
?_Destroy@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@0@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@00@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Umove_if_noexcept, COMDAT
; _this$dead$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1703 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	eax, DWORD PTR __First$[esp-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1659 :     _CONSTEXPR20_CONTAINER void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

	push	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	esi, DWORD PTR __Last$[esp]
	cmp	eax, esi
	je	SHORT $LN7@Umove_if_n

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	edx, DWORD PTR __Dest$[esp]
	sub	edx, eax
$LL8@Umove_if_n:

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+eax], ecx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	eax, 4
	cmp	eax, esi
	jne	SHORT $LL8@Umove_if_n
$LN7@Umove_if_n:
	pop	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1663 :     }

	ret	12					; 0000000cH
?_Umove_if_noexcept@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@00@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV3@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV3@00@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Umove, COMDAT
; _this$dead$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	ecx, DWORD PTR __First$[esp-4]

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1644 :     _CONSTEXPR20_CONTAINER pointer _Umove(pointer _First, pointer _Last, pointer _Dest) {

	push	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	esi, DWORD PTR __Last$[esp]
	cmp	ecx, esi
	je	SHORT $LN5@Umove
$LL6@Umove:

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	edx, DWORD PTR [ecx]

; 1621 :         ++_Last;

	add	ecx, 4
	mov	DWORD PTR [eax], edx
	add	eax, 4

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	jne	SHORT $LL6@Umove
$LN5@Umove:
	pop	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1647 :     }

	ret	12					; 0000000cH
?_Umove@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV3@00@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Umove
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?max_size@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QBEIXZ PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::max_size, COMDAT
; _this$dead$ = ecx

; 1540 :         return (_STD min)(

	mov	eax, 1073741823				; 3fffffffH

; 1541 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1542 :     }

	ret	0
?max_size@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QBEIXZ ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?construct@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@ABQAV2@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
__Val$ = 12						; size = 4
?construct@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@ABQAV2@@Z PROC ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::construct, COMDAT
; _this$dead$ = ecx

; 84   : 							void					construct		(pointer p, const T& _Val)				{	::new((void*)p) value_type (_Val); }

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _p$[esp-4]
	mov	DWORD PTR [eax], ecx
	ret	8
?construct@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@ABQAV2@@Z ENDP ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?deallocate@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@I@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_n$dead$ = 12						; size = 4
?deallocate@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@I@Z PROC ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::deallocate, COMDAT
; _this$dead$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR _p$[esp-4]
	test	eax, eax
	je	SHORT $LN4@deallocate
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN4@deallocate:
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 82   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

	ret	8
?deallocate@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@I@Z ENDP ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?allocate@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@IPBX@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
_p$dead$ = 12						; size = 4
?allocate@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@IPBX@Z PROC ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::allocate, COMDAT
; _this$dead$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	eax, DWORD PTR _n$[esp-4]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	shl	eax, 2
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 80   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	ret	8
?allocate@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@IPBX@Z ENDP ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >, COMDAT
; _this$ = ecx

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@0@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
___formal$dead$ = 12					; size = 4
?_Orphan_range@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@0@Z PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Orphan_range, COMDAT
; _this$dead$ = ecx

; 1801 :     _CONSTEXPR20_CONTAINER void _Orphan_range(pointer, pointer) const {}

	ret	8
?_Orphan_range@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@0@Z ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Ufill@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV3@IU_Value_init_tag@2@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 1
?_Ufill@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV3@IU_Value_init_tag@2@@Z PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Ufill, COMDAT
; _this$dead$ = ecx

; 1634 :         // fill raw _Dest with _Count value-initialized objects, using allocator
; 1635 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

	mov	ecx, DWORD PTR __Count$[esp-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]

; 1813 :     for (; 0 < _Count; --_Count) {

	test	ecx, ecx
	je	SHORT $LN5@Ufill
	npad	4
$LL6@Ufill:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1621 :         ++_Last;

	add	eax, 12					; 0000000cH

; 1813 :     for (; 0 < _Count; --_Count) {

	sub	ecx, 1
	jne	SHORT $LL6@Ufill
$LN5@Ufill:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1636 :     }

	ret	12					; 0000000cH
?_Ufill@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV3@IU_Value_init_tag@2@@Z ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Ufill
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ??0?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAE@XZ PROC ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >, COMDAT
; _this$ = ecx

; 76   : 													xalloc			()										{	}

	mov	eax, ecx
	ret	0
??0?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAE@XZ ENDP ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@CAXXZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Xlength, COMDAT

; 1761 :         _Xlength_error("vector too long");

	push	OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN3@Xlength:
	int	3
?_Xlength@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@CAXXZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Change_array@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXQAPAUSlotItem@CDetailManager@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXQAPAUSlotItem@CDetailManager@@II@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Change_array, COMDAT
; _this$ = ecx

; 1723 :         const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

	push	esi
	mov	esi, ecx

; 1724 :         // orphan all iterators, discard old array, acquire new array
; 1725 :         auto& _My_data    = _Mypair._Myval2;
; 1726 :         pointer& _Myfirst = _My_data._Myfirst;
; 1727 :         pointer& _Mylast  = _My_data._Mylast;
; 1728 :         pointer& _Myend   = _My_data._Myend;
; 1729 : 
; 1730 :         _My_data._Orphan_all();
; 1731 : 
; 1732 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN7@Change_arr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN7@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1737 :         _Myfirst = _Newvec;

	mov	ecx, DWORD PTR __Newvec$[esp]

; 1738 :         _Mylast  = _Newvec + _Newsize;

	mov	eax, DWORD PTR __Newsize$[esp]
	mov	DWORD PTR [esi], ecx
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+4], eax

; 1739 :         _Myend   = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[esp]
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+8], eax
	pop	esi

; 1740 :     }

	ret	12					; 0000000cH
?_Change_array@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXQAPAUSlotItem@CDetailManager@@II@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEII@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEII@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR [ecx]

; 1671 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1672 :         const size_type _Oldcapacity = capacity();
; 1673 :         const auto _Max              = max_size();
; 1674 : 
; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	ecx, 1073741823				; 3fffffffH

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sar	edx, 2

; 1670 :     _CONSTEXPR20_CONTAINER size_type _Calculate_growth(const size_type _Newsize) const {

	push	esi

; 1671 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1672 :         const size_type _Oldcapacity = capacity();
; 1673 :         const auto _Max              = max_size();
; 1674 : 
; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	esi, edx
	shr	esi, 1
	sub	ecx, esi
	cmp	edx, ecx
	jbe	SHORT $LN2@Calculate_

; 1676 :             return _Max; // geometric growth would overflow

	mov	eax, 1073741823				; 3fffffffH
	pop	esi

; 1682 :             return _Newsize; // geometric growth would be insufficient
; 1683 :         }
; 1684 : 
; 1685 :         return _Geometric; // geometric growth is sufficient
; 1686 :     }

	ret	4
$LN2@Calculate_:

; 1677 :         }
; 1678 : 
; 1679 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	eax, DWORD PTR [esi+edx]

; 1680 : 
; 1681 :         if (_Geometric < _Newsize) {

	cmp	eax, DWORD PTR __Newsize$[esp]
	pop	esi
	cmovb	eax, DWORD PTR __Newsize$[esp-4]

; 1682 :             return _Newsize; // geometric growth would be insufficient
; 1683 :         }
; 1684 : 
; 1685 :         return _Geometric; // geometric growth is sufficient
; 1686 :     }

	ret	4
?_Calculate_growth@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEII@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@00@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Umove_if_noexcept, COMDAT
; _this$dead$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1703 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	eax, DWORD PTR __First$[esp-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1659 :     _CONSTEXPR20_CONTAINER void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

	push	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	esi, DWORD PTR __Last$[esp]
	cmp	eax, esi
	je	SHORT $LN7@Umove_if_n

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	edx, DWORD PTR __Dest$[esp]
	sub	edx, eax
$LL8@Umove_if_n:

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+eax], ecx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	eax, 4
	cmp	eax, esi
	jne	SHORT $LL8@Umove_if_n
$LN7@Umove_if_n:
	pop	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1663 :     }

	ret	12					; 0000000cH
?_Umove_if_noexcept@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@00@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEPAPAUSlotItem@CDetailManager@@PAPAU34@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEPAPAUSlotItem@CDetailManager@@PAPAU34@00@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Umove, COMDAT
; _this$dead$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	ecx, DWORD PTR __First$[esp-4]

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1644 :     _CONSTEXPR20_CONTAINER pointer _Umove(pointer _First, pointer _Last, pointer _Dest) {

	push	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	esi, DWORD PTR __Last$[esp]
	cmp	ecx, esi
	je	SHORT $LN5@Umove
$LL6@Umove:

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	edx, DWORD PTR [ecx]

; 1621 :         ++_Last;

	add	ecx, 4
	mov	DWORD PTR [eax], edx
	add	eax, 4

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	jne	SHORT $LL6@Umove
$LN5@Umove:
	pop	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1647 :     }

	ret	12					; 0000000cH
?_Umove@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEPAPAUSlotItem@CDetailManager@@PAPAU34@00@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Umove
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?max_size@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::max_size, COMDAT
; _this$dead$ = ecx

; 1540 :         return (_STD min)(

	mov	eax, 1073741823				; 3fffffffH

; 1541 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1542 :     }

	ret	0
?max_size@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?construct@?$xalloc@PAUSlotItem@CDetailManager@@@@QAEXPAPAUSlotItem@CDetailManager@@ABQAU23@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
__Val$ = 12						; size = 4
?construct@?$xalloc@PAUSlotItem@CDetailManager@@@@QAEXPAPAUSlotItem@CDetailManager@@ABQAU23@@Z PROC ; xalloc<CDetailManager::SlotItem *>::construct, COMDAT
; _this$dead$ = ecx

; 84   : 							void					construct		(pointer p, const T& _Val)				{	::new((void*)p) value_type (_Val); }

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _p$[esp-4]
	mov	DWORD PTR [eax], ecx
	ret	8
?construct@?$xalloc@PAUSlotItem@CDetailManager@@@@QAEXPAPAUSlotItem@CDetailManager@@ABQAU23@@Z ENDP ; xalloc<CDetailManager::SlotItem *>::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?allocate@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEPAPAUSlotItem@CDetailManager@@IPBX@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
_p$dead$ = 12						; size = 4
?allocate@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEPAPAUSlotItem@CDetailManager@@IPBX@Z PROC ; xalloc<CDetailManager::SlotItem *>::allocate, COMDAT
; _this$dead$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	eax, DWORD PTR _n$[esp-4]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	shl	eax, 2
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 80   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	ret	8
?allocate@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEPAPAUSlotItem@CDetailManager@@IPBX@Z ENDP ; xalloc<CDetailManager::SlotItem *>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ
_TEXT	SEGMENT
?_Getal@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Getal, COMDAT
; _this$ = ecx

; 1809 :         return _Mypair._Get_first();

	mov	eax, ecx

; 1810 :     }

	ret	0
?_Getal@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@ABEABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Umove_if_noexcept1, COMDAT
; _this$dead$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1703 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	eax, DWORD PTR __First$[esp-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1649 :     _CONSTEXPR20_CONTAINER void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

	push	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	esi, DWORD PTR __Last$[esp]
	cmp	eax, esi
	je	SHORT $LN5@Umove_if_n

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	edx, DWORD PTR __Dest$[esp]
	sub	edx, eax
$LL6@Umove_if_n:

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+eax], ecx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	eax, 4
	cmp	eax, esi
	jne	SHORT $LL6@Umove_if_n
$LN5@Umove_if_n:
	pop	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1652 :     }

	ret	16					; 00000010H
?_Umove_if_noexcept1@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?capacity@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QBEIXZ PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::capacity, COMDAT
; _this$ = ecx

; 1545 :         auto& _My_data = _Mypair._Myval2;
; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1547 :     }

	ret	0
?capacity@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QBEIXZ ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?max_size@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAIABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z
_TEXT	SEGMENT
?max_size@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAIABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z PROC ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::max_size, COMDAT
; __Al$dead$ = ecx

; 591  :         if constexpr (_Has_max_size<_Alloc>::value) {
; 592  :             return _Al.max_size();

	mov	eax, 1073741823				; 3fffffffH

; 593  :         } else {
; 594  :             return (numeric_limits<size_type>::max)() / sizeof(value_type);
; 595  :         }
; 596  :     }

	ret	0
?max_size@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAIABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ENDP ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEABV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ
_TEXT	SEGMENT
?_Getal@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEABV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Getal, COMDAT
; _this$ = ecx

; 1809 :         return _Mypair._Get_first();

	mov	eax, ecx

; 1810 :     }

	ret	0
?_Getal@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@ABEABV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Umove_if_noexcept1, COMDAT
; _this$dead$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1703 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	eax, DWORD PTR __First$[esp-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1649 :     _CONSTEXPR20_CONTAINER void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

	push	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	esi, DWORD PTR __Last$[esp]
	cmp	eax, esi
	je	SHORT $LN5@Umove_if_n

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	edx, DWORD PTR __Dest$[esp]
	sub	edx, eax
$LL6@Umove_if_n:

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+eax], ecx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	eax, 4
	cmp	eax, esi
	jne	SHORT $LL6@Umove_if_n
$LN5@Umove_if_n:
	pop	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1652 :     }

	ret	16					; 00000010H
?_Umove_if_noexcept1@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?capacity@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::capacity, COMDAT
; _this$ = ecx

; 1545 :         auto& _My_data = _Mypair._Myval2;
; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1547 :     }

	ret	0
?capacity@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QBEIXZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?max_size@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAIABV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z
_TEXT	SEGMENT
?max_size@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAIABV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z PROC ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::max_size, COMDAT
; __Al$dead$ = ecx

; 591  :         if constexpr (_Has_max_size<_Alloc>::value) {
; 592  :             return _Al.max_size();

	mov	eax, 1073741823				; 3fffffffH

; 593  :         } else {
; 594  :             return (numeric_limits<size_type>::max)() / sizeof(value_type);
; 595  :         }
; 596  :     }

	ret	0
?max_size@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAIABV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z ENDP ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QBEABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QBEABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ PROC ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1343 :         return *this;

	mov	eax, ecx

; 1344 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QBEABV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@XZ ENDP ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?max_size@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEIXZ PROC ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::max_size, COMDAT
; _this$dead$ = ecx

; 86   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	eax, 1073741823				; 3fffffffH
	ret	0
?max_size@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QBEIXZ ENDP ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QBEABV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QBEABV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ PROC ; std::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1343 :         return *this;

	mov	eax, ecx

; 1344 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QBEABV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ ENDP ; std::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?max_size@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEIXZ PROC ; xalloc<CDetailManager::SlotItem *>::max_size, COMDAT
; _this$dead$ = ecx

; 86   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	eax, 1073741823				; 3fffffffH
	ret	0
?max_size@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEIXZ ENDP ; xalloc<CDetailManager::SlotItem *>::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Newvec$ = -24						; size = 4
tv255 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Oldsize$1$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1216 :     _CONSTEXPR20_CONTAINER void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx

; 1217 :         if (_Newsize > max_size()) {

	mov	edi, DWORD PTR __Newsize$[ebp]
	cmp	edi, 357913941				; 15555555H
	ja	$LN30@Resize_rea

; 1219 :         }
; 1220 : 
; 1221 :         auto& _My_data    = _Mypair._Myval2;
; 1222 :         pointer& _Myfirst = _My_data._Myfirst;
; 1223 :         pointer& _Mylast  = _My_data._Mylast;
; 1224 : 
; 1225 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	eax, DWORD PTR [esi+4]
	sub	eax, DWORD PTR [esi]
	sar	eax, 2
	imul	eax, eax, -1431655765
	mov	DWORD PTR __Oldsize$1$[ebp], eax

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	eax, DWORD PTR [esi+8]
	sub	eax, DWORD PTR [esi]
	sar	eax, 2
	imul	edx, eax, -1431655765

; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	ecx, edx
	shr	ecx, 1
	mov	eax, 357913941				; 15555555H
	sub	eax, ecx
	cmp	edx, eax
	jbe	SHORT $LN10@Resize_rea

; 1676 :             return _Max; // geometric growth would overflow

	mov	eax, 357913941				; 15555555H
	jmp	SHORT $LN11@Resize_rea
$LN10@Resize_rea:

; 1677 :         }
; 1678 : 
; 1679 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	eax, DWORD PTR [ecx+edx]

; 1680 : 
; 1681 :         if (_Geometric < _Newsize) {

	cmp	eax, edi
	cmovb	eax, edi
$LN11@Resize_rea:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 2
	mov	DWORD PTR tv255[ebp], eax
	push	eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1228 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);

	mov	ebx, eax
	mov	DWORD PTR __Newvec$[ebp], ebx

; 1229 :         const pointer _Appended_first = _Newvec + _Oldsize;

	mov	edx, DWORD PTR __Oldsize$1$[ebp]
	lea	ecx, DWORD PTR [edx+edx*2]
	lea	ecx, DWORD PTR [ebx+ecx*4]

; 1230 :         pointer _Appended_last        = _Appended_first;
; 1231 : 
; 1232 :         _TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1233 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

	mov	eax, DWORD PTR __Val$[ebp]
	movzx	eax, BYTE PTR [eax]
	push	eax
	mov	eax, edi
	sub	eax, edx
	push	eax
	push	ecx
	call	?_Ufill@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV3@IU_Value_init_tag@2@@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Ufill

; 1234 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

	push	ebx
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	call	?_Umove_if_noexcept@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@00@Z ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Umove_if_noexcept
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1732 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN25@Resize_rea
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	push	eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN25@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1737 :         _Myfirst = _Newvec;

	mov	DWORD PTR [esi], ebx

; 1738 :         _Mylast  = _Newvec + _Newsize;

	lea	eax, DWORD PTR [edi+edi*2]
	lea	eax, DWORD PTR [ebx+eax*4]
	mov	DWORD PTR [esi+4], eax

; 1739 :         _Myend   = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR tv255[ebp]
	add	eax, ebx
	mov	DWORD PTR [esi+8], eax

; 1239 :         _CATCH_END
; 1240 : 
; 1241 :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 1242 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z$0:

; 1235 :         _CATCH_ALL
; 1236 :         _Destroy(_Appended_first, _Appended_last);
; 1237 :         _Getal().deallocate(_Newvec, _Newcapacity);

	push	ecx
	push	DWORD PTR __Newvec$[ebp]
	call	?deallocate@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::deallocate

; 1238 :         _RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN30@Resize_rea:

; 1218 :             _Xlength();

	call	?_Xlength@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@CAXXZ ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Xlength
$LN28@Resize_rea:
	int	3
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z:
	npad	1
	npad	1
	mov	eax, OFFSET __ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Resize_reallocate<std::_Value_init_tag>
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSlotItem@CDetailManager@@PAPAU12@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@00@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
??$_Copy_memmove@PAPAUSlotItem@CDetailManager@@PAPAU12@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@00@Z PROC ; std::_Copy_memmove<CDetailManager::SlotItem * *,CDetailManager::SlotItem * *>, COMDAT
; __First$ = ecx
; __Last$ = edx

; 4058 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

	push	esi

; 4059 :     auto _FirstPtr              = _To_address(_First);
; 4060 :     auto _LastPtr               = _To_address(_Last);
; 4061 :     auto _DestPtr               = _To_address(_Dest);
; 4062 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4063 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4064 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4065 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);
; 4066 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	esi, DWORD PTR __Dest$[esp]
	push	edi
	mov	edi, edx
	sub	edi, ecx
	push	edi
	push	ecx
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH

; 4067 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4068 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	eax, DWORD PTR [edi+esi]
	pop	edi
	pop	esi

; 4069 :     } else {
; 4070 :         return _Dest + (_LastPtr - _FirstPtr);
; 4071 :     }
; 4072 : }

	ret	0
??$_Copy_memmove@PAPAUSlotItem@CDetailManager@@PAPAU12@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<CDetailManager::SlotItem * *,CDetailManager::SlotItem * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_To_address@PAPAUSlotItem@CDetailManager@@@std@@YA?A_PABQAPAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
??$_To_address@PAPAUSlotItem@CDetailManager@@@std@@YA?A_PABQAPAUSlotItem@CDetailManager@@@Z PROC ; std::_To_address<CDetailManager::SlotItem * *>, COMDAT
; __Val$ = ecx

; 3981 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3982 :     return _Val;

	mov	eax, DWORD PTR [ecx]

; 3983 : }

	ret	0
??$_To_address@PAPAUSlotItem@CDetailManager@@@std@@YA?A_PABQAPAUSlotItem@CDetailManager@@@Z ENDP ; std::_To_address<CDetailManager::SlotItem * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$move@AAPAUSlotItem@CDetailManager@@@std@@YA$$QAPAUSlotItem@CDetailManager@@AAPAU12@@Z
_TEXT	SEGMENT
??$move@AAPAUSlotItem@CDetailManager@@@std@@YA$$QAPAUSlotItem@CDetailManager@@AAPAU12@@Z PROC ; std::move<CDetailManager::SlotItem * &>, COMDAT
; __Arg$ = ecx

; 1397 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, ecx

; 1398 : }

	ret	0
??$move@AAPAUSlotItem@CDetailManager@@@std@@YA$$QAPAUSlotItem@CDetailManager@@AAPAU12@@Z ENDP ; std::move<CDetailManager::SlotItem * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$_Unfancy@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV1@@Z
_TEXT	SEGMENT
??$_Unfancy@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV1@@Z PROC ; std::_Unfancy<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >, COMDAT
; __Ptr$ = ecx

; 266  :     return _Ptr;

	mov	eax, ecx

; 267  : }

	ret	0
??$_Unfancy@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV1@@Z ENDP ; std::_Unfancy<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$destroy@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z
_TEXT	SEGMENT
??$destroy@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z PROC ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::destroy<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >, COMDAT
; __Al$dead$ = ecx
; __Ptr$dead$ = edx

; 579  :         if constexpr (_Uses_default_destroy<_Alloc, _Ty*>::value) {
; 580  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 581  :             _STD destroy_at(_Ptr);
; 582  : #else // __cpp_lib_constexpr_dynamic_alloc
; 583  :             _Ptr->~_Ty();
; 584  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 585  :         } else {
; 586  :             _Al.destroy(_Ptr);
; 587  :         }
; 588  :     }

	ret	0
??$destroy@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ENDP ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::destroy<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_range@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z
_TEXT	SEGMENT
__Al$dead$ = 8						; size = 4
??$_Destroy_range@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z PROC ; std::_Destroy_range<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; __First$dead$ = ecx
; __Last$dead$ = edx

; 901  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 902  :     using _Ty = typename _Alloc::value_type;
; 903  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 904  :         for (; _First != _Last; ++_First) {
; 905  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 906  :         }
; 907  :     }
; 908  : }

	ret	0
??$_Destroy_range@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ENDP ; std::_Destroy_range<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@0PAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Al$dead$ = 12						; size = 4
??$_Uninitialized_move@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@0PAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z PROC ; std::_Uninitialized_move<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; __First$ = ecx
; __Last$ = edx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]

; 1699 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

	push	esi
	mov	esi, edx

; 1700 :     // move [_First, _Last) to raw _Dest, using _Al
; 1701 :     // note: only called internally from elsewhere in the STL
; 1702 :     using _Ptrval     = typename _Alloc::value_type*;
; 1703 :     auto _UFirst      = _Get_unwrapped(_First);
; 1704 :     const auto _ULast = _Get_unwrapped(_Last);
; 1705 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1706 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1707 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1708 :         if (!_STD is_constant_evaluated())
; 1709 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1710 :         {
; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1712 :             return _Dest + (_ULast - _UFirst);
; 1713 :         }
; 1714 :     }
; 1715 : 
; 1716 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	je	SHORT $LN3@Uninitiali
	npad	5
$LL4@Uninitiali:

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	edx, DWORD PTR [ecx]

; 1621 :         ++_Last;

	add	ecx, 4
	mov	DWORD PTR [eax], edx
	add	eax, 4

; 1700 :     // move [_First, _Last) to raw _Dest, using _Al
; 1701 :     // note: only called internally from elsewhere in the STL
; 1702 :     using _Ptrval     = typename _Alloc::value_type*;
; 1703 :     auto _UFirst      = _Get_unwrapped(_First);
; 1704 :     const auto _ULast = _Get_unwrapped(_Last);
; 1705 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1706 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1707 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1708 :         if (!_STD is_constant_evaluated())
; 1709 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1710 :         {
; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1712 :             return _Dest + (_ULast - _UFirst);
; 1713 :         }
; 1714 :     }
; 1715 : 
; 1716 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	jne	SHORT $LL4@Uninitiali
$LN3@Uninitiali:
	pop	esi

; 1718 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1719 :     }
; 1720 : 
; 1721 :     return _Backout._Release();
; 1722 : }

	ret	0
??$_Uninitialized_move@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@0PAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ENDP ; std::_Uninitialized_move<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA?A_TABQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z
_TEXT	SEGMENT
??$_Get_unwrapped@ABQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA?A_TABQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z PROC ; std::_Get_unwrapped<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * * const &>, COMDAT
; __It$ = ecx

; 1275 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1276 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1277 :         return _It + 0;

	mov	eax, DWORD PTR [ecx]

; 1278 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1279 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1280 :     } else {
; 1281 :         return static_cast<_Iter&&>(_It);
; 1282 :     }
; 1283 : }

	ret	0
??$_Get_unwrapped@ABQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YA?A_TABQAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ENDP ; std::_Get_unwrapped<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
;	COMDAT ??$xr_free@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@YAXAAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z
_TEXT	SEGMENT
??$xr_free@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@YAXAAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z PROC ; xr_free<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; _P$ = ecx

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@xr_free
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN2@xr_free:
	pop	esi
	ret	0
??$xr_free@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@YAXAAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ENDP ; xr_free<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
;	COMDAT ??$xr_alloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@I@Z
_TEXT	SEGMENT
??$xr_alloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@I@Z PROC ; xr_alloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; _count$ = ecx

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	eax, DWORD PTR [ecx*4]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??$xr_alloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@I@Z ENDP ; xr_alloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV1@IAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z
_TEXT	SEGMENT
__Al$dead$ = 8						; size = 4
??$_Uninitialized_value_construct_n@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV1@IAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z PROC ; std::_Uninitialized_value_construct_n<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >, COMDAT
; __First$ = ecx
; __Count$ = edx

; 1799 :     // value-initialize _Count objects to raw _First, using _Al
; 1800 :     using _Ptrty = typename _Alloc::value_type*;
; 1801 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1802 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1803 :         if (!_STD is_constant_evaluated())
; 1804 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1805 :         {
; 1806 :             auto _PFirst = _Unfancy(_First);
; 1807 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1808 :             return _First + _Count;
; 1809 :         }
; 1810 :     }
; 1811 : 
; 1812 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1813 :     for (; 0 < _Count; --_Count) {

	test	edx, edx
	je	SHORT $LN26@Uninitiali
	npad	12
$LL4@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1621 :         ++_Last;

	add	ecx, 12					; 0000000cH

; 1799 :     // value-initialize _Count objects to raw _First, using _Al
; 1800 :     using _Ptrty = typename _Alloc::value_type*;
; 1801 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1802 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1803 :         if (!_STD is_constant_evaluated())
; 1804 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1805 :         {
; 1806 :             auto _PFirst = _Unfancy(_First);
; 1807 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1808 :             return _First + _Count;
; 1809 :         }
; 1810 :     }
; 1811 : 
; 1812 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1813 :     for (; 0 < _Count; --_Count) {

	sub	edx, 1
	jne	SHORT $LL4@Uninitiali
$LN26@Uninitiali:

; 1814 :         _Backout._Emplace_back();
; 1815 :     }
; 1816 : 
; 1817 :     return _Backout._Release();
; 1818 : }

	mov	eax, ecx
	ret	0
??$_Uninitialized_value_construct_n@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@PAV1@IAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z ENDP ; std::_Uninitialized_value_construct_n<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@YAPAPAUSlotItem@CDetailManager@@QAPAU12@0PAPAU12@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Al$dead$ = 12						; size = 4
??$_Uninitialized_move@PAPAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@YAPAPAUSlotItem@CDetailManager@@QAPAU12@0PAPAU12@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z PROC ; std::_Uninitialized_move<CDetailManager::SlotItem * *,xalloc<CDetailManager::SlotItem *> >, COMDAT
; __First$ = ecx
; __Last$ = edx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]

; 1699 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

	push	esi
	mov	esi, edx

; 1700 :     // move [_First, _Last) to raw _Dest, using _Al
; 1701 :     // note: only called internally from elsewhere in the STL
; 1702 :     using _Ptrval     = typename _Alloc::value_type*;
; 1703 :     auto _UFirst      = _Get_unwrapped(_First);
; 1704 :     const auto _ULast = _Get_unwrapped(_Last);
; 1705 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1706 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1707 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1708 :         if (!_STD is_constant_evaluated())
; 1709 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1710 :         {
; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1712 :             return _Dest + (_ULast - _UFirst);
; 1713 :         }
; 1714 :     }
; 1715 : 
; 1716 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	je	SHORT $LN3@Uninitiali
	npad	5
$LL4@Uninitiali:

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	edx, DWORD PTR [ecx]

; 1621 :         ++_Last;

	add	ecx, 4
	mov	DWORD PTR [eax], edx
	add	eax, 4

; 1700 :     // move [_First, _Last) to raw _Dest, using _Al
; 1701 :     // note: only called internally from elsewhere in the STL
; 1702 :     using _Ptrval     = typename _Alloc::value_type*;
; 1703 :     auto _UFirst      = _Get_unwrapped(_First);
; 1704 :     const auto _ULast = _Get_unwrapped(_Last);
; 1705 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1706 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1707 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1708 :         if (!_STD is_constant_evaluated())
; 1709 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1710 :         {
; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1712 :             return _Dest + (_ULast - _UFirst);
; 1713 :         }
; 1714 :     }
; 1715 : 
; 1716 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	jne	SHORT $LL4@Uninitiali
$LN3@Uninitiali:
	pop	esi

; 1718 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1719 :     }
; 1720 : 
; 1721 :     return _Backout._Release();
; 1722 : }

	ret	0
??$_Uninitialized_move@PAPAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@YAPAPAUSlotItem@CDetailManager@@QAPAU12@0PAPAU12@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z ENDP ; std::_Uninitialized_move<CDetailManager::SlotItem * *,xalloc<CDetailManager::SlotItem *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAPAUSlotItem@CDetailManager@@@std@@YA?A_TABQAPAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
??$_Get_unwrapped@ABQAPAUSlotItem@CDetailManager@@@std@@YA?A_TABQAPAUSlotItem@CDetailManager@@@Z PROC ; std::_Get_unwrapped<CDetailManager::SlotItem * * const &>, COMDAT
; __It$ = ecx

; 1275 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1276 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1277 :         return _It + 0;

	mov	eax, DWORD PTR [ecx]

; 1278 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1279 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1280 :     } else {
; 1281 :         return static_cast<_Iter&&>(_It);
; 1282 :     }
; 1283 : }

	ret	0
??$_Get_unwrapped@ABQAPAUSlotItem@CDetailManager@@@std@@YA?A_TABQAPAUSlotItem@CDetailManager@@@Z ENDP ; std::_Get_unwrapped<CDetailManager::SlotItem * * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
;	COMDAT ??$xr_alloc@PAUSlotItem@CDetailManager@@@@YAPAPAUSlotItem@CDetailManager@@I@Z
_TEXT	SEGMENT
??$xr_alloc@PAUSlotItem@CDetailManager@@@@YAPAPAUSlotItem@CDetailManager@@I@Z PROC ; xr_alloc<CDetailManager::SlotItem *>, COMDAT
; _count$ = ecx

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	eax, DWORD PTR [ecx*4]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??$xr_alloc@PAUSlotItem@CDetailManager@@@@YAPAPAUSlotItem@CDetailManager@@I@Z ENDP ; xr_alloc<CDetailManager::SlotItem *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@XZ
_TEXT	SEGMENT
?_Release@?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@XZ PROC ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::_Release, COMDAT
; _this$ = ecx

; 1625 :         _First = _Last;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], eax

; 1626 :         return _Last;
; 1627 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEPAPAUSlotItem@CDetailManager@@XZ ENDP ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::~_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >, COMDAT
; _this$ = ecx

; 1615 :         _Destroy_range(_First, _Last, _Al);
; 1616 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::~_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@PAPAUSlotItem@CDetailManager@@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Al_$ = 12						; size = 4
??0?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@PAPAUSlotItem@CDetailManager@@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z PROC ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >, COMDAT
; _this$ = ecx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __Al_$[esp-4]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, ecx
	ret	8
??0?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@PAPAUSlotItem@CDetailManager@@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z ENDP ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ
_TEXT	SEGMENT
?_Release@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ PROC ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Release, COMDAT
; _this$ = ecx

; 1625 :         _First = _Last;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], eax

; 1626 :         return _Last;
; 1627 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@XZ ENDP ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::~_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >, COMDAT
; _this$ = ecx

; 1615 :         _Destroy_range(_First, _Last, _Al);
; 1616 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::~_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Al_$ = 12						; size = 4
??0?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z PROC ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >, COMDAT
; _this$ = ecx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __Al_$[esp-4]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, ecx
	ret	8
??0?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAE@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z ENDP ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@XZ
_TEXT	SEGMENT
?_Release@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@XZ PROC ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Release, COMDAT
; _this$ = ecx

; 1625 :         _First = _Last;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], eax

; 1626 :         return _Last;
; 1627 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@XZ ENDP ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::~_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; _this$ = ecx

; 1615 :         _Destroy_range(_First, _Last, _Al);
; 1616 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::~_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Al_$ = 12						; size = 4
??0?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z PROC ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; _this$ = ecx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __Al_$[esp-4]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, ecx
	ret	8
??0?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ENDP ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@CAXXZ PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Xlength, COMDAT

; 1761 :         _Xlength_error("vector too long");

	push	OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN3@Xlength:
	int	3
?_Xlength@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@CAXXZ ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Change_array@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@II@Z PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Change_array, COMDAT
; _this$ = ecx

; 1723 :         const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

	push	esi
	mov	esi, ecx

; 1724 :         // orphan all iterators, discard old array, acquire new array
; 1725 :         auto& _My_data    = _Mypair._Myval2;
; 1726 :         pointer& _Myfirst = _My_data._Myfirst;
; 1727 :         pointer& _Mylast  = _My_data._Mylast;
; 1728 :         pointer& _Myend   = _My_data._Myend;
; 1729 : 
; 1730 :         _My_data._Orphan_all();
; 1731 : 
; 1732 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN7@Change_arr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN7@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1737 :         _Myfirst = _Newvec;

	mov	ecx, DWORD PTR __Newvec$[esp]

; 1738 :         _Mylast  = _Newvec + _Newsize;

	mov	eax, DWORD PTR __Newsize$[esp]
	mov	DWORD PTR [esi], ecx
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+4], eax

; 1739 :         _Myend   = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[esp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+8], eax
	pop	esi

; 1740 :     }

	ret	12					; 0000000cH
?_Change_array@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@II@Z ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Calculate_growth@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEII@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEII@Z PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]

; 1671 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1672 :         const size_type _Oldcapacity = capacity();
; 1673 :         const auto _Max              = max_size();
; 1674 : 
; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	ecx, 357913941				; 15555555H

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sar	eax, 2

; 1670 :     _CONSTEXPR20_CONTAINER size_type _Calculate_growth(const size_type _Newsize) const {

	push	esi

; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	imul	esi, eax, -1431655765

; 1671 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1672 :         const size_type _Oldcapacity = capacity();
; 1673 :         const auto _Max              = max_size();
; 1674 : 
; 1675 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	edx, esi
	shr	edx, 1
	sub	ecx, edx
	cmp	esi, ecx
	jbe	SHORT $LN2@Calculate_

; 1676 :             return _Max; // geometric growth would overflow

	mov	eax, 357913941				; 15555555H
	pop	esi

; 1682 :             return _Newsize; // geometric growth would be insufficient
; 1683 :         }
; 1684 : 
; 1685 :         return _Geometric; // geometric growth is sufficient
; 1686 :     }

	ret	4
$LN2@Calculate_:

; 1677 :         }
; 1678 : 
; 1679 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	eax, DWORD PTR [edx+esi]

; 1680 : 
; 1681 :         if (_Geometric < _Newsize) {

	cmp	eax, DWORD PTR __Newsize$[esp]
	pop	esi
	cmovb	eax, DWORD PTR __Newsize$[esp-4]

; 1682 :             return _Newsize; // geometric growth would be insufficient
; 1683 :         }
; 1684 : 
; 1685 :         return _Geometric; // geometric growth is sufficient
; 1686 :     }

	ret	4
?_Calculate_growth@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEII@Z ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
tv578 = 16						; size = 4
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@00@Z PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Umove_if_noexcept, COMDAT
; _this$dead$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	ecx, DWORD PTR __First$[esp-4]
	cmp	ecx, DWORD PTR __Last$[esp-4]
	je	$LN7@Umove_if_n

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]
	mov	edx, ecx
	push	ebx
	push	ebp
	push	esi
	sub	edx, eax
	lea	ebx, DWORD PTR [eax+4]
	push	edi
	mov	DWORD PTR tv578[esp+12], edx
$LL8@Umove_if_n:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ebx-4], 0
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [ebx+4], 0

; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	esi, DWORD PTR [ecx]

; 547  :         const pointer _Rightlast  = _Right_data._Mylast;

	mov	ebp, DWORD PTR [ebx+edx]

; 548  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 549  :         if (_Rightfirst != _Rightlast) {

	cmp	esi, ebp
	je	SHORT $LN50@Umove_if_n
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 550  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

	mov	eax, ebp
	sub	eax, esi
	sar	eax, 2
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	edi, DWORD PTR [eax*4]
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1698 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	edx, eax

; 1699 :         _Myfirst           = _Newvec;

	mov	DWORD PTR [ebx-4], edx

; 1700 :         _Mylast            = _Newvec;

	mov	DWORD PTR [ebx], edx

; 1701 :         _Myend             = _Newvec + _Newcapacity;

	lea	ecx, DWORD PTR [edi+edx]
	mov	DWORD PTR [ebx+4], ecx
$LL38@Umove_if_n:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [esi]

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	esi, 4

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	esi, ebp
	jne	SHORT $LL38@Umove_if_n
	mov	ecx, DWORD PTR __First$[esp+12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 552  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

	mov	DWORD PTR [ebx], edx
	mov	edx, DWORD PTR tv578[esp+12]
$LN50@Umove_if_n:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1621 :         ++_Last;

	add	ecx, 12					; 0000000cH
	add	ebx, 12					; 0000000cH
	mov	DWORD PTR __First$[esp+12], ecx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, DWORD PTR __Last$[esp+12]
	jne	SHORT $LL8@Umove_if_n
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
$LN7@Umove_if_n:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1663 :     }

	ret	12					; 0000000cH
?_Umove_if_noexcept@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@00@Z ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?max_size@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QBEIXZ PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::max_size, COMDAT
; _this$dead$ = ecx

; 1540 :         return (_STD min)(

	mov	eax, 357913941				; 15555555H

; 1541 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1542 :     }

	ret	0
?max_size@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QBEIXZ ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?destroy@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z
_TEXT	SEGMENT
_p$dead$ = 8						; size = 4
?destroy@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z PROC ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::destroy, COMDAT
; _this$dead$ = ecx

; 85   : 							void					destroy			(pointer p)								{	std::_Destroy_in_place(p);			}

	ret	4
?destroy@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ENDP ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?allocate@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@IPBX@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
_p$dead$ = 12						; size = 4
?allocate@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@IPBX@Z PROC ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::allocate, COMDAT
; _this$dead$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	eax, DWORD PTR _n$[esp-4]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 2
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 80   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	ret	8
?allocate@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@IPBX@Z ENDP ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ
_TEXT	SEGMENT
?_Getal@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Getal, COMDAT
; _this$ = ecx

; 1809 :         return _Mypair._Get_first();

	mov	eax, ecx

; 1810 :     }

	ret	0
?_Getal@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@ABEABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
tv546 = 16						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Umove_if_noexcept1, COMDAT
; _this$dead$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	ecx, DWORD PTR __First$[esp-4]
	cmp	ecx, DWORD PTR __Last$[esp-4]
	je	$LN5@Umove_if_n

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]
	mov	edx, ecx
	push	ebx
	push	ebp
	push	esi
	sub	edx, eax
	lea	ebx, DWORD PTR [eax+4]
	push	edi
	mov	DWORD PTR tv546[esp+12], edx
$LL6@Umove_if_n:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ebx-4], 0
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [ebx+4], 0

; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	esi, DWORD PTR [ecx]

; 547  :         const pointer _Rightlast  = _Right_data._Mylast;

	mov	ebp, DWORD PTR [ebx+edx]

; 548  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 549  :         if (_Rightfirst != _Rightlast) {

	cmp	esi, ebp
	je	SHORT $LN48@Umove_if_n
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 550  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

	mov	eax, ebp
	sub	eax, esi
	sar	eax, 2
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	edi, DWORD PTR [eax*4]
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1698 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	edx, eax

; 1699 :         _Myfirst           = _Newvec;

	mov	DWORD PTR [ebx-4], edx

; 1700 :         _Mylast            = _Newvec;

	mov	DWORD PTR [ebx], edx

; 1701 :         _Myend             = _Newvec + _Newcapacity;

	lea	ecx, DWORD PTR [edi+edx]
	mov	DWORD PTR [ebx+4], ecx
$LL36@Umove_if_n:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [esi]

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	esi, 4

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	esi, ebp
	jne	SHORT $LL36@Umove_if_n
	mov	ecx, DWORD PTR __First$[esp+12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 552  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

	mov	DWORD PTR [ebx], edx
	mov	edx, DWORD PTR tv546[esp+12]
$LN48@Umove_if_n:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1621 :         ++_Last;

	add	ecx, 12					; 0000000cH
	add	ebx, 12					; 0000000cH
	mov	DWORD PTR __First$[esp+12], ecx

; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, DWORD PTR __Last$[esp+12]
	jne	SHORT $LL6@Umove_if_n
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
$LN5@Umove_if_n:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1652 :     }

	ret	16					; 00000010H
?_Umove_if_noexcept1@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@AAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?capacity@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QBEIXZ PROC ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::capacity, COMDAT
; _this$ = ecx

; 1545 :         auto& _My_data = _Mypair._Myval2;
; 1546 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	imul	eax, eax, -1431655765

; 1547 :     }

	ret	0
?capacity@?$vector@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QBEIXZ ENDP ; std::vector<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?max_size@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAIABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z
_TEXT	SEGMENT
?max_size@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAIABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z PROC ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::max_size, COMDAT
; __Al$dead$ = ecx

; 591  :         if constexpr (_Has_max_size<_Alloc>::value) {
; 592  :             return _Al.max_size();

	mov	eax, 357913941				; 15555555H

; 593  :         } else {
; 594  :             return (numeric_limits<size_type>::max)() / sizeof(value_type);
; 595  :         }
; 596  :     }

	ret	0
?max_size@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAIABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z ENDP ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QBEABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QBEABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ PROC ; std::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1343 :         return *this;

	mov	eax, ecx

; 1344 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@V?$_Vector_val@U?$_Simple_types@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@@std@@$00@std@@QBEABV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@XZ ENDP ; std::_Compressed_pair<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >,std::_Vector_val<std::_Simple_types<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?max_size@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEIXZ PROC ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::max_size, COMDAT
; _this$dead$ = ecx

; 86   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	eax, 357913941				; 15555555H
	ret	0
?max_size@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QBEIXZ ENDP ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$destroy@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z
_TEXT	SEGMENT
??$destroy@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z PROC ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::destroy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; __Al$dead$ = ecx
; __Ptr$dead$ = edx

; 579  :         if constexpr (_Uses_default_destroy<_Alloc, _Ty*>::value) {
; 580  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 581  :             _STD destroy_at(_Ptr);
; 582  : #else // __cpp_lib_constexpr_dynamic_alloc
; 583  :             _Ptr->~_Ty();
; 584  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 585  :         } else {
; 586  :             _Al.destroy(_Ptr);
; 587  :         }
; 588  :     }

	ret	0
??$destroy@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ENDP ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::destroy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Emplace_back@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEX$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z
_TEXT	SEGMENT
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEX$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z PROC ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_back<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; _this$ = ecx

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _<_Vals_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	DWORD PTR [ecx+4], 4

; 1622 :     }

	ret	4
??$_Emplace_back@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEX$$QAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ENDP ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_back<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXXZ
_TEXT	SEGMENT
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXXZ PROC ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Emplace_back<>, COMDAT
; _this$ = ecx

; 1331 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	eax, DWORD PTR [ecx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1621 :         ++_Last;

	add	DWORD PTR [ecx+4], 12			; 0000000cH

; 1622 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEXXZ ENDP ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Emplace_back@PAUSlotItem@CDetailManager@@@?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEX$$QAPAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@PAUSlotItem@CDetailManager@@@?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEX$$QAPAUSlotItem@CDetailManager@@@Z PROC ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::_Emplace_back<CDetailManager::SlotItem *>, COMDAT
; _this$ = ecx

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _<_Vals_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	DWORD PTR [ecx+4], 4

; 1622 :     }

	ret	4
??$_Emplace_back@PAUSlotItem@CDetailManager@@@?$_Uninitialized_backout_al@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAEX$$QAPAUSlotItem@CDetailManager@@@Z ENDP ; std::_Uninitialized_backout_al<xalloc<CDetailManager::SlotItem *> >::_Emplace_back<CDetailManager::SlotItem *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YAXAAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z
_TEXT	SEGMENT
??$_Destroy_in_place@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YAXAAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z PROC ; std::_Destroy_in_place<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > *>, COMDAT
; __Obj$dead$ = ecx

; 295  :     if constexpr (is_array_v<_Ty>) {
; 296  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 297  :     } else {
; 298  :         _Obj.~_Ty();
; 299  :     }
; 300  : }

	ret	0
??$_Destroy_in_place@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YAXAAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ENDP ; std::_Destroy_in_place<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
;	COMDAT ??$xr_alloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z
_TEXT	SEGMENT
??$xr_alloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z PROC ; xr_alloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >, COMDAT
; _count$ = ecx

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	eax, DWORD PTR [ecx+ecx*2]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	shl	eax, 2
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??$xr_alloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@I@Z ENDP ; xr_alloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAV1@0PAV1@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z
_TEXT	SEGMENT
__Last$1$ = -4						; size = 4
__First$1$ = 8						; size = 4
__Dest$ = 8						; size = 4
__Al$dead$ = 12						; size = 4
??$_Uninitialized_move@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAV1@0PAV1@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z PROC ; std::_Uninitialized_move<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > *,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >, COMDAT
; __First$ = ecx
; __Last$ = edx

; 1699 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

	push	ecx
	mov	eax, ecx
	mov	DWORD PTR __Last$1$[esp+4], edx
	push	ebx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	ebx, DWORD PTR __Dest$[esp+4]

; 1700 :     // move [_First, _Last) to raw _Dest, using _Al
; 1701 :     // note: only called internally from elsewhere in the STL
; 1702 :     using _Ptrval     = typename _Alloc::value_type*;
; 1703 :     auto _UFirst      = _Get_unwrapped(_First);
; 1704 :     const auto _ULast = _Get_unwrapped(_Last);
; 1705 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1706 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1707 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1708 :         if (!_STD is_constant_evaluated())
; 1709 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1710 :         {
; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1712 :             return _Dest + (_ULast - _UFirst);
; 1713 :         }
; 1714 :     }
; 1715 : 
; 1716 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	eax, edx
	je	SHORT $LN63@Uninitiali

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	push	ebp
	sub	eax, ebx
	push	esi
	mov	DWORD PTR __First$1$[esp+12], eax
	push	edi
	npad	8
$LL4@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [ebx+4], 0
	mov	DWORD PTR [ebx+8], 0

; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	esi, DWORD PTR [eax+ebx]

; 547  :         const pointer _Rightlast  = _Right_data._Mylast;

	mov	ebp, DWORD PTR [eax+ebx+4]

; 548  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 549  :         if (_Rightfirst != _Rightlast) {

	cmp	esi, ebp
	je	SHORT $LN46@Uninitiali
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 550  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

	mov	eax, ebp
	sub	eax, esi
	sar	eax, 2
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	edi, DWORD PTR [eax*4]
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1698 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	ecx, eax

; 1699 :         _Myfirst           = _Newvec;

	mov	DWORD PTR [ebx], ecx

; 1700 :         _Mylast            = _Newvec;

	mov	DWORD PTR [ebx+4], ecx

; 1701 :         _Myend             = _Newvec + _Newcapacity;

	lea	eax, DWORD PTR [edi+ecx]
	mov	DWORD PTR [ebx+8], eax
$LL34@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [esi]

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	esi, 4

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	DWORD PTR [ecx], eax

; 1621 :         ++_Last;

	add	ecx, 4

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	esi, ebp
	jne	SHORT $LL34@Uninitiali
	mov	eax, DWORD PTR __First$1$[esp+16]
	mov	edx, DWORD PTR __Last$1$[esp+20]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 552  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

	mov	DWORD PTR [ebx+4], ecx
$LN46@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1621 :         ++_Last;

	add	ebx, 12					; 0000000cH

; 1700 :     // move [_First, _Last) to raw _Dest, using _Al
; 1701 :     // note: only called internally from elsewhere in the STL
; 1702 :     using _Ptrval     = typename _Alloc::value_type*;
; 1703 :     auto _UFirst      = _Get_unwrapped(_First);
; 1704 :     const auto _ULast = _Get_unwrapped(_Last);
; 1705 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1706 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1707 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1708 :         if (!_STD is_constant_evaluated())
; 1709 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1710 :         {
; 1711 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1712 :             return _Dest + (_ULast - _UFirst);
; 1713 :         }
; 1714 :     }
; 1715 : 
; 1716 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1717 :     for (; _UFirst != _ULast; ++_UFirst) {

	lea	ecx, DWORD PTR [eax+ebx]
	cmp	ecx, edx
	jne	SHORT $LL4@Uninitiali

; 1718 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1719 :     }
; 1720 : 
; 1721 :     return _Backout._Release();

	pop	edi
	pop	esi
	pop	ebp
$LN63@Uninitiali:

; 1722 : }

	mov	eax, ebx
	pop	ebx
	pop	ecx
	ret	0
??$_Uninitialized_move@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@YAPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAV1@0PAV1@AAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@Z ENDP ; std::_Uninitialized_move<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > *,xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA?A_TABQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z
_TEXT	SEGMENT
??$_Get_unwrapped@ABQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA?A_TABQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z PROC ; std::_Get_unwrapped<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > * const &>, COMDAT
; __It$ = ecx

; 1275 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1276 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1277 :         return _It + 0;

	mov	eax, DWORD PTR [ecx]

; 1278 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1279 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1280 :     } else {
; 1281 :         return static_cast<_Iter&&>(_It);
; 1282 :     }
; 1283 : }

	ret	0
??$_Get_unwrapped@ABQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA?A_TABQAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ENDP ; std::_Get_unwrapped<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?destroy@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z
_TEXT	SEGMENT
_p$dead$ = 8						; size = 4
?destroy@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z PROC ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::destroy, COMDAT
; _this$dead$ = ecx

; 85   : 							void					destroy			(pointer p)								{	std::_Destroy_in_place(p);			}

	ret	4
?destroy@?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAEXPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ENDP ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@$$V@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z
_TEXT	SEGMENT
??$construct@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@$$V@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z PROC ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::construct<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >, COMDAT
; __Al$dead$ = ecx
; __Ptr$ = edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [edx], 0
	mov	DWORD PTR [edx+4], 0
	mov	DWORD PTR [edx+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 575  :     }

	ret	0
??$construct@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@$$V@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ENDP ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::construct<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@PAUSlotItem@CDetailManager@@@std@@YA$$QAPAUSlotItem@CDetailManager@@AAPAU12@@Z
_TEXT	SEGMENT
??$forward@PAUSlotItem@CDetailManager@@@std@@YA$$QAPAUSlotItem@CDetailManager@@AAPAU12@@Z PROC ; std::forward<CDetailManager::SlotItem *>, COMDAT
; __Arg$ = ecx

; 1386 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1387 : }

	ret	0
??$forward@PAUSlotItem@CDetailManager@@@std@@YA$$QAPAUSlotItem@CDetailManager@@AAPAU12@@Z ENDP ; std::forward<CDetailManager::SlotItem *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@PAUSlotItem@CDetailManager@@PAU12@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@$$QAPAU34@@Z
_TEXT	SEGMENT
_<_Args_0>$ = 8						; size = 4
??$construct@PAUSlotItem@CDetailManager@@PAU12@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@$$QAPAU34@@Z PROC ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::construct<CDetailManager::SlotItem *,CDetailManager::SlotItem *>, COMDAT
; __Al$dead$ = ecx
; __Ptr$ = edx

; 565  :         if constexpr (_Uses_default_construct<_Alloc, _Ty*, _Types...>::value) {
; 566  :             (void) _Al; // TRANSITION, DevCom-1004719
; 567  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 568  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 569  : #else // __cpp_lib_constexpr_dynamic_alloc
; 570  :             ::new (static_cast<void*>(_Ptr)) _Ty(_STD forward<_Types>(_Args)...);
; 571  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 572  :         } else {
; 573  :             _Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 574  :         }
; 575  :     }

	ret	0
??$construct@PAUSlotItem@CDetailManager@@PAU12@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@$$QAPAU34@@Z ENDP ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::construct<CDetailManager::SlotItem *,CDetailManager::SlotItem *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$move@AAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV1@@Z
_TEXT	SEGMENT
??$move@AAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV1@@Z PROC ; std::move<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > &>, COMDAT
; __Arg$ = ecx

; 1397 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, ecx

; 1398 : }

	ret	0
??$move@AAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV1@@Z ENDP ; std::move<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Emplace_back@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEX$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z
_TEXT	SEGMENT
$T2 = -4						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEX$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z PROC ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Emplace_back<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >, COMDAT
; _this$ = ecx

; 1619 :     _CONSTEXPR20_DYNALLOC void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

	push	ecx
	push	ebx
	mov	ebx, ecx
	push	ebp
	push	esi
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 84   : 							void					construct		(pointer p, const T& _Val)				{	::new((void*)p) value_type (_Val); }

	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR $T2[esp+16], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 0

; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	eax, DWORD PTR _<_Vals_0>$[esp+12]
	mov	esi, DWORD PTR [eax]

; 547  :         const pointer _Rightlast  = _Right_data._Mylast;

	mov	ebp, DWORD PTR [eax+4]

; 548  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 549  :         if (_Rightfirst != _Rightlast) {

	cmp	esi, ebp
	je	SHORT $LN50@Emplace_ba
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 550  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

	mov	eax, ebp
	sub	eax, esi
	sar	eax, 2
	push	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	edi, DWORD PTR [eax*4]
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1698 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	edx, eax

; 1699 :         _Myfirst           = _Newvec;

	mov	eax, DWORD PTR $T2[esp+20]
	mov	DWORD PTR [eax], edx

; 1700 :         _Mylast            = _Newvec;
; 1701 :         _Myend             = _Newvec + _Newcapacity;

	lea	ecx, DWORD PTR [edi+edx]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	pop	edi
	npad	4
$LL27@Emplace_ba:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [esi]

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	esi, 4

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	esi, ebp
	jne	SHORT $LL27@Emplace_ba
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 552  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

	mov	eax, DWORD PTR $T2[esp+16]
	mov	DWORD PTR [eax+4], edx
$LN50@Emplace_ba:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1622 :     }

	add	DWORD PTR [ebx+4], 12			; 0000000cH
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
??$_Emplace_back@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@QAEX$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@Z ENDP ; std::_Uninitialized_backout_al<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::_Emplace_back<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAXAAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z
_TEXT	SEGMENT
??$_Destroy_in_place@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAXAAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z PROC ; std::_Destroy_in_place<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *>, COMDAT
; __Obj$dead$ = ecx

; 295  :     if constexpr (is_array_v<_Ty>) {
; 296  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 297  :     } else {
; 298  :         _Obj.~_Ty();
; 299  :     }
; 300  : }

	ret	0
??$_Destroy_in_place@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAXAAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ENDP ; std::_Destroy_in_place<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ??0?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAE@XZ PROC ; xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 122  : 			xr_vector			()									: inherited	()					{}

	mov	eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 122  : 			xr_vector			()									: inherited	()					{}

	ret	0
??0?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAE@XZ ENDP ; xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::~vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; _this$ = ecx

; 698  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

	push	esi
	mov	esi, ecx

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN4@vector:
	pop	esi

; 699  :         _Tidy();
; 700  : #if _ITERATOR_DEBUG_LEVEL != 0
; 701  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 702  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 703  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 704  :     }

	ret	0
??1?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::~vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; _this$ = ecx

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0

; 464  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 465  :     }

	mov	eax, ecx

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0

; 464  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 465  :     }

	ret	0
??0?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@XZ ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Tidy@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXXZ PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Tidy, COMDAT
; _this$ = ecx

; 1742 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

	push	esi
	mov	esi, ecx

; 1743 :         auto& _My_data    = _Mypair._Myval2;
; 1744 :         pointer& _Myfirst = _My_data._Myfirst;
; 1745 :         pointer& _Mylast  = _My_data._Mylast;
; 1746 :         pointer& _Myend   = _My_data._Myend;
; 1747 : 
; 1748 :         _My_data._Orphan_all();
; 1749 : 
; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@Tidy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN2@Tidy:

; 1757 :         }
; 1758 :     }

	pop	esi
	ret	0
?_Tidy@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXXZ ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV1@@Z
_TEXT	SEGMENT
??$forward@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV1@@Z PROC ; std::forward<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >, COMDAT
; __Arg$ = ecx

; 1386 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1387 : }

	ret	0
??$forward@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@std@@YA$$QAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@AAV1@@Z ENDP ; std::forward<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V1@@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@$$QAV3@@Z
_TEXT	SEGMENT
_<_Args_0>$ = 8						; size = 4
??$construct@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V1@@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@$$QAV3@@Z PROC ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::construct<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >, COMDAT
; __Al$dead$ = ecx
; __Ptr$ = edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 564  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc& _Al, _Ty* _Ptr, _Types&&... _Args) {

	push	ebx
	push	ebp
	mov	ebp, edx
	push	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ebp], 0
	mov	DWORD PTR [ebp+4], 0
	mov	DWORD PTR [ebp+8], 0

; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	esi, DWORD PTR [eax]

; 547  :         const pointer _Rightlast  = _Right_data._Mylast;

	mov	ebx, DWORD PTR [eax+4]

; 548  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 549  :         if (_Rightfirst != _Rightlast) {

	cmp	esi, ebx
	je	SHORT $LN37@construct
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 550  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

	mov	eax, ebx
	sub	eax, esi
	sar	eax, 2
	push	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	edi, DWORD PTR [eax*4]
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1698 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	edx, eax

; 1699 :         _Myfirst           = _Newvec;

	mov	DWORD PTR [ebp], edx

; 1700 :         _Mylast            = _Newvec;

	mov	DWORD PTR [ebp+4], edx

; 1701 :         _Myend             = _Newvec + _Newcapacity;

	lea	ecx, DWORD PTR [edi+edx]
	mov	DWORD PTR [ebp+8], ecx
	pop	edi
$LL25@construct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [esi]

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	esi, 4

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	esi, ebx
	jne	SHORT $LL25@construct
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 552  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

	mov	DWORD PTR [ebp+4], edx
$LN37@construct:
	pop	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 575  :     }

	pop	ebp
	pop	ebx
	ret	0
??$construct@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@V1@@?$_Normal_allocator_traits@V?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@@std@@SAXAAV?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@PAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@$$QAV3@@Z ENDP ; std::_Normal_allocator_traits<xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > > >::construct<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1><>, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1331 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1331 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	ret	4
??$?0$$V@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; _this$ = ecx

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ??0?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAE@XZ PROC ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; _this$ = ecx

; 76   : 													xalloc			()										{	}

	mov	eax, ecx
	ret	0
??0?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAE@XZ ENDP ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?construct@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@ABV2@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
__Val$ = 12						; size = 4
?construct@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@ABV2@@Z PROC ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::construct, COMDAT
; _this$dead$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	eax, DWORD PTR __Val$[esp-4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 84   : 							void					construct		(pointer p, const T& _Val)				{	::new((void*)p) value_type (_Val); }

	push	ebx
	push	ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	ebp, DWORD PTR _p$[esp+4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 84   : 							void					construct		(pointer p, const T& _Val)				{	::new((void*)p) value_type (_Val); }

	push	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ebp], 0
	mov	DWORD PTR [ebp+4], 0
	mov	DWORD PTR [ebp+8], 0

; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	esi, DWORD PTR [eax]

; 547  :         const pointer _Rightlast  = _Right_data._Mylast;

	mov	ebx, DWORD PTR [eax+4]

; 548  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 549  :         if (_Rightfirst != _Rightlast) {

	cmp	esi, ebx
	je	SHORT $LN35@construct
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 550  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

	mov	eax, ebx
	sub	eax, esi
	sar	eax, 2
	push	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	edi, DWORD PTR [eax*4]
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1698 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	edx, eax

; 1699 :         _Myfirst           = _Newvec;

	mov	DWORD PTR [ebp], edx

; 1700 :         _Mylast            = _Newvec;

	mov	DWORD PTR [ebp+4], edx

; 1701 :         _Myend             = _Newvec + _Newcapacity;

	lea	ecx, DWORD PTR [edi+edx]
	mov	DWORD PTR [ebp+8], ecx
	pop	edi
$LL23@construct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [esi]

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	esi, 4

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	esi, ebx
	jne	SHORT $LL23@construct
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 552  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

	mov	DWORD PTR [ebp+4], edx
$LN35@construct:
	pop	esi
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 84   : 							void					construct		(pointer p, const T& _Val)				{	::new((void*)p) value_type (_Val); }

	pop	ebp
	pop	ebx
	ret	8
?construct@?$xalloc@V?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@@@QAEXPAV?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@ABV2@@Z ENDP ; xalloc<xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAE@ABV0@@Z PROC ; xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; _this$ = ecx

; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	eax, DWORD PTR ___that$[esp-4]

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	push	ebx
	mov	ebx, ecx
	push	ebp
	push	esi
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [ebx+4], 0
	mov	DWORD PTR [ebx+8], 0

; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	esi, DWORD PTR [eax]

; 547  :         const pointer _Rightlast  = _Right_data._Mylast;

	mov	ebp, DWORD PTR [eax+4]

; 548  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 549  :         if (_Rightfirst != _Rightlast) {

	cmp	esi, ebp
	je	SHORT $LN44@xr_vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 550  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

	mov	eax, ebp
	sub	eax, esi
	sar	eax, 2
	push	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	edi, DWORD PTR [eax*4]
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1698 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	edx, eax

; 1699 :         _Myfirst           = _Newvec;

	mov	DWORD PTR [ebx], edx

; 1700 :         _Mylast            = _Newvec;

	mov	DWORD PTR [ebx+4], edx

; 1701 :         _Myend             = _Newvec + _Newcapacity;

	lea	ecx, DWORD PTR [edi+edx]
	mov	DWORD PTR [ebx+8], ecx
	pop	edi
$LL21@xr_vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [esi]

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	esi, 4

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	esi, ebp
	jne	SHORT $LL21@xr_vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 552  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

	mov	DWORD PTR [ebx+4], edx
$LN44@xr_vector:
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
	ret	4
??0?$xr_vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@@QAE@ABV0@@Z ENDP ; xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::xr_vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@ABV01@@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; _this$ = ecx

; 543  :         auto&& _Alproxy           = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 544  :         auto& _My_data            = _Mypair._Myval2;
; 545  :         const auto& _Right_data   = _Right._Mypair._Myval2;
; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	eax, DWORD PTR __Right$[esp-4]
	push	ebx
	mov	ebx, ecx
	push	ebp
	push	esi

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [ebx+4], 0
	mov	DWORD PTR [ebx+8], 0

; 543  :         auto&& _Alproxy           = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 544  :         auto& _My_data            = _Mypair._Myval2;
; 545  :         const auto& _Right_data   = _Right._Mypair._Myval2;
; 546  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	esi, DWORD PTR [eax]

; 547  :         const pointer _Rightlast  = _Right_data._Mylast;

	mov	ebp, DWORD PTR [eax+4]

; 548  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 549  :         if (_Rightfirst != _Rightlast) {

	cmp	esi, ebp
	je	SHORT $LN42@vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 550  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

	mov	eax, ebp
	sub	eax, esi
	sar	eax, 2
	push	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	edi, DWORD PTR [eax*4]
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1698 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	edx, eax

; 1699 :         _Myfirst           = _Newvec;

	mov	DWORD PTR [ebx], edx

; 1700 :         _Mylast            = _Newvec;

	mov	DWORD PTR [ebx+4], edx

; 1701 :         _Myend             = _Newvec + _Newcapacity;

	lea	ecx, DWORD PTR [edi+edx]
	mov	DWORD PTR [ebx+8], ecx
	pop	edi
$LL19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [esi]

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	esi, 4

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	edx, 4

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	esi, ebp
	jne	SHORT $LL19@vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 552  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

	mov	DWORD PTR [ebx+4], edx
$LN42@vector:
	pop	esi

; 553  :             _Guard._Target   = nullptr;
; 554  :         }
; 555  : 
; 556  :         _Proxy._Release();
; 557  :     }

	pop	ebp
	mov	eax, ebx
	pop	ebx
	ret	4
??0?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAE@ABV01@@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tidy_guard@V?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@@std@@QAE@XZ PROC ; std::_Tidy_guard<std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::~_Tidy_guard<std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >, COMDAT
; _this$ = ecx

; 33   :     _CONSTEXPR20_DYNALLOC ~_Tidy_guard() {

	push	esi

; 34   :         if (_Target) {

	mov	esi, DWORD PTR [ecx]
	test	esi, esi
	je	SHORT $LN5@Tidy_guard
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN5@Tidy_guard
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN5@Tidy_guard:
	pop	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 37   :     }

	ret	0
??1?$_Tidy_guard@V?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@@std@@QAE@XZ ENDP ; std::_Tidy_guard<std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >::~_Tidy_guard<std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Buy_raw@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Newcapacity$ = 8					; size = 4
?_Buy_raw@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXI@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Buy_raw, COMDAT
; _this$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	eax, DWORD PTR __Newcapacity$[esp-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1688 :     _CONSTEXPR20_CONTAINER void _Buy_raw(const size_type _Newcapacity) {

	push	esi
	push	edi
	mov	edi, ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 107  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	esi, DWORD PTR [eax*4]
	push	esi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1699 :         _Myfirst           = _Newvec;

	mov	DWORD PTR [edi], eax

; 1700 :         _Mylast            = _Newvec;

	mov	DWORD PTR [edi+4], eax

; 1701 :         _Myend             = _Newvec + _Newcapacity;

	add	eax, esi
	mov	DWORD PTR [edi+8], eax
	pop	edi
	pop	esi

; 1702 :     }

	ret	4
?_Buy_raw@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEXI@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SA?AV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@ABV3@@Z
_TEXT	SEGMENT
?select_on_container_copy_construction@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SA?AV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@ABV3@@Z PROC ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::select_on_container_copy_construction, COMDAT
; ___$ReturnUdt$ = ecx
; __Al$dead$ = edx

; 599  :         if constexpr (_Has_select_on_container_copy_construction<_Alloc>::value) {
; 600  :             return _Al.select_on_container_copy_construction();
; 601  :         } else {
; 602  :             return _Al;

	mov	eax, ecx

; 603  :         }
; 604  :     }

	ret	0
?select_on_container_copy_construction@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SA?AV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@ABV3@@Z ENDP ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ??0?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
??0?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAE@ABV0@@Z PROC ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>, COMDAT
; _this$ = ecx

; 77   : 													xalloc			(const xalloc<T>&)						{	}

	mov	eax, ecx
	ret	4
??0?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@QAE@ABV0@@Z ENDP ; xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>::xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@$$V@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
__Val1$dead$ = 12					; size = 4
??$?0V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@$$V@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z PROC ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1><xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1336 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1336 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	ret	8
??$?0V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@$$V@?$_Compressed_pair@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@V?$_Vector_val@U?$_Simple_types@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@@std@@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ENDP ; std::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1>::_Compressed_pair<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *>,std::_Vector_val<std::_Simple_types<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >,1><xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Ucopy@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Ucopy@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV2@00@Z PROC ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Ucopy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *>, COMDAT
; _this$dead$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	ecx, DWORD PTR __First$[esp-4]

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1639 :     _CONSTEXPR20_CONTAINER pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) {

	push	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	mov	esi, DWORD PTR __Last$[esp]
	cmp	ecx, esi
	je	SHORT $LN5@Ucopy
$LL6@Ucopy:

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	edx, DWORD PTR [ecx]

; 1621 :         ++_Last;

	add	ecx, 4
	mov	DWORD PTR [eax], edx
	add	eax, 4

; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	jne	SHORT $LL6@Ucopy
$LN5@Ucopy:
	pop	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1642 :     }

	ret	12					; 0000000cH
??$_Ucopy@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$vector@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@AAEPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@PAPAV2@00@Z ENDP ; std::vector<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Ucopy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YA$$QAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@AAV1@@Z
_TEXT	SEGMENT
??$forward@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YA$$QAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@AAV1@@Z PROC ; std::forward<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; __Arg$ = ecx

; 1386 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1387 : }

	ret	0
??$forward@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YA$$QAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@AAV1@@Z ENDP ; std::forward<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@0PAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Al$dead$ = 12						; size = 4
??$_Uninitialized_copy@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@0PAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z PROC ; std::_Uninitialized_copy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >, COMDAT
; __First$ = ecx
; __Last$ = edx

; 1609 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	eax, DWORD PTR __Dest$[esp-4]

; 1637 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

	push	esi
	mov	esi, edx

; 1638 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1639 :     // note: only called internally from elsewhere in the STL
; 1640 :     using _Ptrval = typename _Alloc::value_type*;
; 1641 : 
; 1642 :     auto _UFirst      = _Get_unwrapped(_First);
; 1643 :     const auto _ULast = _Get_unwrapped(_Last);
; 1644 : 
; 1645 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1646 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1647 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1648 :         if (!_STD is_constant_evaluated())
; 1649 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1650 :         {
; 1651 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1652 :             _Dest += _ULast - _UFirst;
; 1653 :             return _Dest;
; 1654 :         }
; 1655 :     }
; 1656 : 
; 1657 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	je	SHORT $LN3@Uninitiali
	npad	5
$LL4@Uninitiali:

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	edx, DWORD PTR [ecx]

; 1621 :         ++_Last;

	add	ecx, 4
	mov	DWORD PTR [eax], edx
	add	eax, 4

; 1638 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1639 :     // note: only called internally from elsewhere in the STL
; 1640 :     using _Ptrval = typename _Alloc::value_type*;
; 1641 : 
; 1642 :     auto _UFirst      = _Get_unwrapped(_First);
; 1643 :     const auto _ULast = _Get_unwrapped(_Last);
; 1644 : 
; 1645 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1646 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1647 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1648 :         if (!_STD is_constant_evaluated())
; 1649 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1650 :         {
; 1651 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1652 :             _Dest += _ULast - _UFirst;
; 1653 :             return _Dest;
; 1654 :         }
; 1655 :     }
; 1656 : 
; 1657 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1658 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	ecx, esi
	jne	SHORT $LL4@Uninitiali
$LN3@Uninitiali:
	pop	esi

; 1659 :         _Backout._Emplace_back(*_UFirst);
; 1660 :     }
; 1661 : 
; 1662 :     return _Backout._Release();
; 1663 : }

	ret	0
??$_Uninitialized_copy@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@YAPAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAPAV1@0PAPAV1@AAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@Z ENDP ; std::_Uninitialized_copy<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * *,xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Emplace_back@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEXAAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z
_TEXT	SEGMENT
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEXAAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z PROC ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_back<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>, COMDAT
; _this$ = ecx

; 1620 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _<_Vals_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 1621 :         ++_Last;

	add	DWORD PTR [ecx+4], 4

; 1622 :     }

	ret	4
??$_Emplace_back@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@?$_Uninitialized_backout_al@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@QAEXAAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@Z ENDP ; std::_Uninitialized_backout_al<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::_Emplace_back<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\type_traits
;	COMDAT ??$forward@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAAAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z
_TEXT	SEGMENT
??$forward@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAAAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z PROC ; std::forward<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>, COMDAT
; __Arg$ = ecx

; 1386 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, ecx

; 1387 : }

	ret	0
??$forward@AAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@std@@YAAAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@Z ENDP ; std::forward<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV3@@Z
_TEXT	SEGMENT
_<_Args_0>$ = 8						; size = 4
??$construct@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV3@@Z PROC ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::construct<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>, COMDAT
; __Al$dead$ = ecx
; __Ptr$ = edx

; 565  :         if constexpr (_Uses_default_construct<_Alloc, _Ty*, _Types...>::value) {
; 566  :             (void) _Al; // TRANSITION, DevCom-1004719
; 567  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 568  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 569  : #else // __cpp_lib_constexpr_dynamic_alloc
; 570  :             ::new (static_cast<void*>(_Ptr)) _Ty(_STD forward<_Types>(_Args)...);
; 571  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 572  :         } else {
; 573  :             _Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 574  :         }
; 575  :     }

	ret	0
??$construct@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV1@@?$_Normal_allocator_traits@V?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@@std@@SAXAAV?$xalloc@PAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@@@PAPAV?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@AAPAV3@@Z ENDP ; std::_Normal_allocator_traits<xalloc<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *> >::construct<xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > *,xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> > * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Release@_Fake_proxy_ptr_impl@std@@QAEXXZ
_TEXT	SEGMENT
?_Release@_Fake_proxy_ptr_impl@std@@QAEXXZ PROC		; std::_Fake_proxy_ptr_impl::_Release, COMDAT
; _this$dead$ = ecx

; 1253 :     _CONSTEXPR20_CONTAINER void _Release() noexcept {}

	ret	0
?_Release@_Fake_proxy_ptr_impl@std@@QAEXXZ ENDP		; std::_Fake_proxy_ptr_impl::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??0_Fake_proxy_ptr_impl@std@@QAE@ABU_Fake_allocator@1@ABU_Container_base0@1@@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
___formal$dead$ = 12					; size = 4
??0_Fake_proxy_ptr_impl@std@@QAE@ABU_Fake_allocator@1@ABU_Container_base0@1@@Z PROC ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl, COMDAT
; _this$ = ecx

; 1250 :     _CONSTEXPR20_CONTAINER _Fake_proxy_ptr_impl(const _Fake_allocator&, const _Container_base0&) noexcept {}

	mov	eax, ecx
	ret	8
??0_Fake_proxy_ptr_impl@std@@QAE@ABU_Fake_allocator@1@ABU_Container_base0@1@@Z ENDP ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\limits
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 541  :         return INT_MAX;

	mov	eax, 2147483647				; 7fffffffH

; 542  :     }

	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\utility
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT
; __Left$ = ecx
; __Right$ = edx

; 65   :     // return smaller of _Left and _Right
; 66   :     return _Right < _Left ? _Right : _Left;

	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	cmovb	ecx, edx
	mov	eax, ecx

; 67   : }

	ret	0
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; __Size$dead$ = ecx
; __Where$ = edx

; 168  :         (void)_Size;
; 169  :         return _Where;

	mov	eax, edx

; 170  :     }

	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
;	COMDAT ?iFloor@@YAHM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
?iFloor@@YAHM@Z PROC					; iFloor, COMDAT

; 82   : {

	push	esi

; 83   :     int a			= *(const int*)(&x);
; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	esi, DWORD PTR _x$[esp]
	mov	ecx, 158				; 0000009eH
	mov	eax, esi

; 85   :     int r			= (((u32)(a) << 8) | (1U << 31)) >> exponent;
; 86   :     exponent		+= 31-127;
; 87   :     {
; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	mov	edx, 1
	sar	eax, 23					; 00000017H
	movzx	eax, al
	sub	ecx, eax
	mov	eax, esi
	or	eax, -8388608				; ff800000H
	shl	eax, 8
	shr	eax, cl
	sub	ecx, 96					; 00000060H
	shl	edx, cl
	dec	edx
	sar	edx, 8
	and	edx, esi
	neg	edx
	sbb	edx, edx

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	sar	esi, 31					; 0000001fH
	inc	edx
	add	ecx, 64					; 00000040H

; 92   :         r			-=	(imask&a);

	and	edx, esi
	sar	ecx, 31					; 0000001fH
	sub	eax, edx

; 93   :         r			&=	exponent;

	and	eax, ecx

; 94   :         r			^=	a;

	xor	eax, esi

; 95   :     }
; 96   :     return r;

	pop	esi

; 97   : }

	ret	0
?iFloor@@YAHM@Z ENDP					; iFloor
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
;	COMDAT ?MT_SYNC@CDetailManager@@QAEXXZ
_TEXT	SEGMENT
?MT_SYNC@CDetailManager@@QAEXXZ PROC			; CDetailManager::MT_SYNC, COMDAT
; _this$ = ecx

; 175  : 	ICF	void						MT_SYNC			() {

	push	ecx

; 176  : 		if (m_frame_calc == Device.dwFrame)

	mov	edx, DWORD PTR [ecx+701276]
	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	cmp	edx, DWORD PTR [eax+244]
	je	SHORT $LN1@MT_SYNC

; 177  : 			return;
; 178  : 
; 179  : 		MT_CALC						(); 

	call	?MT_CALC@CDetailManager@@QAGXXZ		; CDetailManager::MT_CALC
$LN1@MT_SYNC:

; 180  : 	}

	pop	ecx
	ret	0
?MT_SYNC@CDetailManager@@QAEXXZ ENDP			; CDetailManager::MT_SYNC
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_flags.h
;	COMDAT ?is@?$_flags@I@@QBEHI@Z
_TEXT	SEGMENT
_mask$ = 8						; size = 4
?is@?$_flags@I@@QBEHI@Z PROC				; _flags<unsigned int>::is, COMDAT
; _this$ = ecx

; 23   : 	IC 	BOOL	is		(const T mask)						const	{ return mask==(flags&mask);			}

	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	and	edx, DWORD PTR _mask$[esp-4]
	cmp	DWORD PTR _mask$[esp-4], edx
	sete	al
	ret	4
?is@?$_flags@I@@QBEHI@Z ENDP				; _flags<unsigned int>::is
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
;	COMDAT ?randI@CRandom@@QAEHXZ
_TEXT	SEGMENT
?randI@CRandom@@QAEHXZ PROC				; CRandom::randI, COMDAT
; _this$ = ecx

; 32   :     ICN	s32		randI	()							{ return(((holdrand = holdrand * 214013L + 2531011L) >> 16) & 0x7fff); }

	imul	eax, DWORD PTR [ecx], 214013
	add	eax, 2531011				; 00269ec3H
	mov	DWORD PTR [ecx], eax
	sar	eax, 16					; 00000010H
	and	eax, 32767				; 00007fffH
	ret	0
?randI@CRandom@@QAEHXZ ENDP				; CRandom::randI
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
;	COMDAT ?randI@CRandom@@QAEHH@Z
_TEXT	SEGMENT
_max$ = 8						; size = 4
?randI@CRandom@@QAEHH@Z PROC				; CRandom::randI, COMDAT
; _this$ = ecx

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	cdq
	idiv	DWORD PTR _max$[esp-4]
	mov	eax, edx
	ret	4
?randI@CRandom@@QAEHH@Z ENDP				; CRandom::randI
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
;	COMDAT ?randI@CRandom@@QAEHHH@Z
_TEXT	SEGMENT
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?randI@CRandom@@QAEHHH@Z PROC				; CRandom::randI, COMDAT
; _this$ = ecx

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	call	?randI@CRandom@@QAEHXZ			; CRandom::randI

; 34   : 	IC 	s32		randI	(s32 min, s32 max)			{ return min+randI(max-min); }

	mov	ecx, DWORD PTR _max$[esp-4]
	sub	ecx, DWORD PTR _min$[esp-4]

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	cdq
	idiv	ecx

; 34   : 	IC 	s32		randI	(s32 min, s32 max)			{ return min+randI(max-min); }

	add	edx, DWORD PTR _min$[esp-4]
	mov	eax, edx
	ret	8
?randI@CRandom@@QAEHHH@Z ENDP				; CRandom::randI
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
;	COMDAT ?UseVS@CDetailManager@@QAE_NXZ
_TEXT	SEGMENT
?UseVS@CDetailManager@@QAE_NXZ PROC			; CDetailManager::UseVS, COMDAT
; _this$dead$ = ecx

; 123  : 	IC bool							UseVS			()		{ return HW.Caps.geometry_major >= 1; }

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	cmp	WORD PTR [eax+48], 1
	setae	al
	ret	0
?UseVS@CDetailManager@@QAE_NXZ ENDP			; CDetailManager::UseVS
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??0?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@PAUSGeometry@@_N@Z
_TEXT	SEGMENT
_p$dead$ = 8						; size = 4
_add_ref$dead$ = 12					; size = 1
??0?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@PAUSGeometry@@_N@Z PROC ; resptr_core<SGeometry,resptrcode_geom>::resptr_core<SGeometry,resptrcode_geom>, COMDAT
; _this$ = ecx

; 62   : 						resptr_core		(T * p, bool add_ref = true) 					{	p_ = p;	if(add_ref)	_inc(); }

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	ret	8
??0?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@PAUSGeometry@@_N@Z ENDP ; resptr_core<SGeometry,resptrcode_geom>::resptr_core<SGeometry,resptrcode_geom>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??4?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??4?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAEAAV0@ABV0@@Z PROC ; resptr_core<SGeometry,resptrcode_geom>::operator=, COMDAT
; _this$ = ecx

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	eax, DWORD PTR _rhs$[esp-4]

; 67   : 	self &				operator=		(const self & rhs)								{	_set(rhs);	return (self&)*this;	}

	push	esi
	push	edi
	mov	edi, ecx

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	esi, DWORD PTR [eax]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	test	esi, esi
	je	SHORT $LN8@operator
	inc	DWORD PTR [esi]
$LN8@operator:
	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
	mov	DWORD PTR [edi], esi

; 67   : 	self &				operator=		(const self & rhs)								{	_set(rhs);	return (self&)*this;	}

	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
??4?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAEAAV0@ABV0@@Z ENDP ; resptr_core<SGeometry,resptrcode_geom>::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??1R_constant@@QAE@XZ
_TEXT	SEGMENT
??1R_constant@@QAE@XZ PROC				; R_constant::~R_constant, COMDAT
; _this$ = ecx

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN7@R_constant
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN7@R_constant
	mov	DWORD PTR [ecx+4], 0
$LN7@R_constant:
	ret	0
??1R_constant@@QAE@XZ ENDP				; R_constant::~R_constant
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??_GR_constant@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$dead$ = 8					; size = 4
??_GR_constant@@QAEPAXI@Z PROC				; R_constant::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN13@scalar
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	mov	eax, ecx
	jne	SHORT $LN10@scalar
	mov	DWORD PTR [ecx+4], 0
	ret	4
$LN13@scalar:
	mov	eax, ecx
$LN10@scalar:
	ret	4
??_GR_constant@@QAEPAXI@Z ENDP				; R_constant::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??R?$xr_special_free@$0A@UR_constant@@@@QAEXAAPAUR_constant@@@Z
_TEXT	SEGMENT
_ptr$ = 8						; size = 4
??R?$xr_special_free@$0A@UR_constant@@@@QAEXAAPAUR_constant@@@Z PROC ; xr_special_free<0,R_constant>::operator(), COMDAT
; _this$dead$ = ecx

; 143  : 		ptr->~T			();

	mov	edx, DWORD PTR _ptr$[esp-4]
	mov	ecx, DWORD PTR [edx]
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN12@operator
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN12@operator
	mov	DWORD PTR [ecx+4], 0
$LN12@operator:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [edx]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 145  : 	}

	ret	4
??R?$xr_special_free@$0A@UR_constant@@@@QAEXAAPAUR_constant@@@Z ENDP ; xr_special_free<0,R_constant>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_delete@UR_constant@@@@YAXAAPAUR_constant@@@Z
_TEXT	SEGMENT
??$xr_delete@UR_constant@@@@YAXAAPAUR_constant@@@Z PROC	; xr_delete<R_constant>, COMDAT
; _ptr$ = ecx

; 150  : {

	push	esi
	mov	esi, ecx

; 151  : 	if (ptr) 

	mov	edx, DWORD PTR [esi]
	test	edx, edx
	je	SHORT $LN2@xr_delete
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [edx+4]
	test	eax, eax
	je	SHORT $LN15@xr_delete
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN15@xr_delete
	mov	DWORD PTR [edx+4], 0
$LN15@xr_delete:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);
; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi], 0
$LN2@xr_delete:

; 155  : 	}
; 156  : }

	pop	esi
	ret	0
??$xr_delete@UR_constant@@@@YAXAAPAUR_constant@@@Z ENDP	; xr_delete<R_constant>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ?_dec@?$resptr_base@UR_constant@@@@IAEXXZ
_TEXT	SEGMENT
?_dec@?$resptr_base@UR_constant@@@@IAEXXZ PROC		; resptr_base<R_constant>::_dec, COMDAT
; _this$ = ecx

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@dec
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN6@dec
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN19@dec
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN19@dec
	mov	DWORD PTR [ecx+4], 0
$LN19@dec:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi], 0
$LN6@dec:
	pop	esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	ret	0
?_dec@?$resptr_base@UR_constant@@@@IAEXXZ ENDP		; resptr_base<R_constant>::_dec
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??1?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@QAE@XZ PROC ; resptr_core<R_constant,resptr_base<R_constant> >::~resptr_core<R_constant,resptr_base<R_constant> >, COMDAT
; _this$ = ecx

; 64   : 						~resptr_core	()												{	_dec();						}

	push	esi
	mov	esi, ecx

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN8@resptr_cor
	dec	DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN8@resptr_cor
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN21@resptr_cor
	dec	DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN21@resptr_cor
	mov	DWORD PTR [ecx+4], 0
$LN21@resptr_cor:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 144  : 		Memory.mem_free	(ptr);

	push	DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi], 0
$LN8@resptr_cor:
	pop	esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	ret	0
??1?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@QAE@XZ ENDP ; resptr_core<R_constant,resptr_base<R_constant> >::~resptr_core<R_constant,resptr_base<R_constant> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??1?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@XZ
_TEXT	SEGMENT
??1?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@XZ PROC ; resptr_core<SGeometry,resptrcode_geom>::~resptr_core<SGeometry,resptrcode_geom>, COMDAT
; _this$ = ecx

; 64   : 						~resptr_core	()												{	_dec();						}

	jmp	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
??1?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@XZ ENDP ; resptr_core<SGeometry,resptrcode_geom>::~resptr_core<SGeometry,resptrcode_geom>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??0?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@XZ
_TEXT	SEGMENT
??0?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@XZ PROC ; resptr_core<SGeometry,resptrcode_geom>::resptr_core<SGeometry,resptrcode_geom>, COMDAT
; _this$ = ecx

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	ret	0
??0?$resptr_core@USGeometry@@Uresptrcode_geom@@@@QAE@XZ ENDP ; resptr_core<SGeometry,resptrcode_geom>::resptr_core<SGeometry,resptrcode_geom>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ??0?$xalloc@PAUSlotItem@CDetailManager@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@PAUSlotItem@CDetailManager@@@@QAE@XZ PROC	; xalloc<CDetailManager::SlotItem *>::xalloc<CDetailManager::SlotItem *>, COMDAT
; _this$ = ecx

; 76   : 													xalloc			()										{	}

	mov	eax, ecx
	ret	0
??0?$xalloc@PAUSlotItem@CDetailManager@@@@QAE@XZ ENDP	; xalloc<CDetailManager::SlotItem *>::xalloc<CDetailManager::SlotItem *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >, COMDAT
; _this$ = ecx

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1>::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1><>, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1331 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1331 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	ret	4
??$?0$$V@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1>::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Alloc_proxy@_Container_base0@std@@QAEXABU_Fake_allocator@2@@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
?_Alloc_proxy@_Container_base0@std@@QAEXABU_Fake_allocator@2@@Z PROC ; std::_Container_base0::_Alloc_proxy, COMDAT
; _this$dead$ = ecx

; 984  :     _CONSTEXPR20_CONTAINER void _Alloc_proxy(const _Fake_allocator&) noexcept {}

	ret	4
?_Alloc_proxy@_Container_base0@std@@QAEXABU_Fake_allocator@2@@Z ENDP ; std::_Container_base0::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >, COMDAT
; _this$ = ecx

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0

; 464  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 465  :     }

	mov	eax, ecx

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0

; 464  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 465  :     }

	ret	0
??0?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ??0?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAE@XZ PROC ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >, COMDAT
; _this$ = ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 122  : 			xr_vector			()									: inherited	()					{}

	mov	eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 122  : 			xr_vector			()									: inherited	()					{}

	ret	0
??0?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAE@XZ ENDP ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??0SlotPart@CDetailManager@@QAE@XZ
_TEXT	SEGMENT
??0SlotPart@CDetailManager@@QAE@XZ PROC			; CDetailManager::SlotPart::SlotPart, COMDAT
; _this$ = ecx

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [ecx+4], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+28], 0
	mov	DWORD PTR [ecx+20], 0
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+32], 0
	mov	DWORD PTR [ecx+36], 0
	mov	DWORD PTR [ecx+40], 0
	mov	DWORD PTR [ecx+44], 0
	mov	DWORD PTR [ecx+48], 0
	ret	0
??0SlotPart@CDetailManager@@QAE@XZ ENDP			; CDetailManager::SlotPart::SlotPart
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$dead$ = ecx

; 982  :     _CONSTEXPR20_CONTAINER void _Orphan_all() noexcept {}

	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAPAUSlotItem@CDetailManager@@@std@@YAXAAPAPAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
??$_Destroy_in_place@PAPAUSlotItem@CDetailManager@@@std@@YAXAAPAPAUSlotItem@CDetailManager@@@Z PROC ; std::_Destroy_in_place<CDetailManager::SlotItem * *>, COMDAT
; __Obj$dead$ = ecx

; 295  :     if constexpr (is_array_v<_Ty>) {
; 296  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 297  :     } else {
; 298  :         _Obj.~_Ty();
; 299  :     }
; 300  : }

	ret	0
??$_Destroy_in_place@PAPAUSlotItem@CDetailManager@@@std@@YAXAAPAPAUSlotItem@CDetailManager@@@Z ENDP ; std::_Destroy_in_place<CDetailManager::SlotItem * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?destroy@?$xalloc@PAUSlotItem@CDetailManager@@@@QAEXPAPAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
_p$dead$ = 8						; size = 4
?destroy@?$xalloc@PAUSlotItem@CDetailManager@@@@QAEXPAPAUSlotItem@CDetailManager@@@Z PROC ; xalloc<CDetailManager::SlotItem *>::destroy, COMDAT
; _this$dead$ = ecx

; 85   : 							void					destroy			(pointer p)								{	std::_Destroy_in_place(p);			}

	ret	4
?destroy@?$xalloc@PAUSlotItem@CDetailManager@@@@QAEXPAPAUSlotItem@CDetailManager@@@Z ENDP ; xalloc<CDetailManager::SlotItem *>::destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$destroy@PAUSlotItem@CDetailManager@@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
??$destroy@PAUSlotItem@CDetailManager@@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@@Z PROC ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::destroy<CDetailManager::SlotItem *>, COMDAT
; __Al$dead$ = ecx
; __Ptr$dead$ = edx

; 579  :         if constexpr (_Uses_default_destroy<_Alloc, _Ty*>::value) {
; 580  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 581  :             _STD destroy_at(_Ptr);
; 582  : #else // __cpp_lib_constexpr_dynamic_alloc
; 583  :             _Ptr->~_Ty();
; 584  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 585  :         } else {
; 586  :             _Al.destroy(_Ptr);
; 587  :         }
; 588  :     }

	ret	0
??$destroy@PAUSlotItem@CDetailManager@@@?$_Normal_allocator_traits@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@SAXAAV?$xalloc@PAUSlotItem@CDetailManager@@@@PAPAUSlotItem@CDetailManager@@@Z ENDP ; std::_Normal_allocator_traits<xalloc<CDetailManager::SlotItem *> >::destroy<CDetailManager::SlotItem *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xstddef
;	COMDAT ??$_Unfancy@PAUSlotItem@CDetailManager@@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@@Z
_TEXT	SEGMENT
??$_Unfancy@PAUSlotItem@CDetailManager@@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@@Z PROC ; std::_Unfancy<CDetailManager::SlotItem *>, COMDAT
; __Ptr$ = ecx

; 266  :     return _Ptr;

	mov	eax, ecx

; 267  : }

	ret	0
??$_Unfancy@PAUSlotItem@CDetailManager@@@std@@YAPAPAUSlotItem@CDetailManager@@PAPAU12@@Z ENDP ; std::_Unfancy<CDetailManager::SlotItem *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_range@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@YAXPAPAUSlotItem@CDetailManager@@QAPAU12@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z
_TEXT	SEGMENT
__Al$dead$ = 8						; size = 4
??$_Destroy_range@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@YAXPAPAUSlotItem@CDetailManager@@QAPAU12@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z PROC ; std::_Destroy_range<xalloc<CDetailManager::SlotItem *> >, COMDAT
; __First$dead$ = ecx
; __Last$dead$ = edx

; 901  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 902  :     using _Ty = typename _Alloc::value_type;
; 903  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 904  :         for (; _First != _Last; ++_First) {
; 905  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 906  :         }
; 907  :     }
; 908  : }

	ret	0
??$_Destroy_range@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@YAXPAPAUSlotItem@CDetailManager@@QAPAU12@AAV?$xalloc@PAUSlotItem@CDetailManager@@@@@Z ENDP ; std::_Destroy_range<xalloc<CDetailManager::SlotItem *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Destroy@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@0@Z
_TEXT	SEGMENT
__First$dead$ = 8					; size = 4
__Last$dead$ = 12					; size = 4
?_Destroy@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@0@Z PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Destroy, COMDAT
; _this$dead$ = ecx

; 1666 :         // destroy [_First, _Last) using allocator
; 1667 :         _Destroy_range(_First, _Last, _Getal());
; 1668 :     }

	ret	8
?_Destroy@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXPAPAUSlotItem@CDetailManager@@0@Z ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
;	COMDAT ??$xr_free@PAUSlotItem@CDetailManager@@@@YAXAAPAPAUSlotItem@CDetailManager@@@Z
_TEXT	SEGMENT
??$xr_free@PAUSlotItem@CDetailManager@@@@YAXAAPAPAUSlotItem@CDetailManager@@@Z PROC ; xr_free<CDetailManager::SlotItem *>, COMDAT
; _P$ = ecx

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@xr_free
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN2@xr_free:
	pop	esi
	ret	0
??$xr_free@PAUSlotItem@CDetailManager@@@@YAXAAPAPAUSlotItem@CDetailManager@@@Z ENDP ; xr_free<CDetailManager::SlotItem *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
;	COMDAT ?deallocate@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEXPAPAUSlotItem@CDetailManager@@I@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_n$dead$ = 12						; size = 4
?deallocate@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEXPAPAUSlotItem@CDetailManager@@I@Z PROC ; xalloc<CDetailManager::SlotItem *>::deallocate, COMDAT
; _this$dead$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR _p$[esp-4]
	test	eax, eax
	je	SHORT $LN4@deallocate
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN4@deallocate:
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 82   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

	ret	8
?deallocate@?$xalloc@PAUSlotItem@CDetailManager@@@@QBEXPAPAUSlotItem@CDetailManager@@I@Z ENDP ; xalloc<CDetailManager::SlotItem *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QAEAAV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QAEAAV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ PROC ; std::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1339 :         return *this;

	mov	eax, ecx

; 1340 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$xalloc@PAUSlotItem@CDetailManager@@@@V?$_Vector_val@U?$_Simple_types@PAUSlotItem@CDetailManager@@@std@@@std@@$00@std@@QAEAAV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ ENDP ; std::_Compressed_pair<xalloc<CDetailManager::SlotItem *>,std::_Vector_val<std::_Simple_types<CDetailManager::SlotItem *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEAAV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ
_TEXT	SEGMENT
?_Getal@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEAAV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Getal, COMDAT
; _this$ = ecx

; 1805 :         return _Mypair._Get_first();

	mov	eax, ecx

; 1806 :     }

	ret	0
?_Getal@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEAAV?$xalloc@PAUSlotItem@CDetailManager@@@@XZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Tidy@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXXZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Tidy, COMDAT
; _this$ = ecx

; 1742 :     _CONSTEXPR20_CONTAINER void _Tidy() noexcept { // free all storage

	push	esi
	mov	esi, ecx

; 1743 :         auto& _My_data    = _Mypair._Myval2;
; 1744 :         pointer& _Myfirst = _My_data._Myfirst;
; 1745 :         pointer& _Mylast  = _My_data._Mylast;
; 1746 :         pointer& _Myend   = _My_data._Myend;
; 1747 : 
; 1748 :         _My_data._Orphan_all();
; 1749 : 
; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@Tidy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN2@Tidy:

; 1757 :         }
; 1758 :     }

	pop	esi
	ret	0
?_Tidy@?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@AAEXXZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ PROC ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::~vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >, COMDAT
; _this$ = ecx

; 698  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

	push	esi
	mov	esi, ecx

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN4@vector:
	pop	esi

; 699  :         _Tidy();
; 700  : #if _ITERATOR_DEBUG_LEVEL != 0
; 701  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 702  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 703  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 704  :     }

	ret	0
??1?$vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@std@@QAE@XZ ENDP ; std::vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::~vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAE@XZ PROC ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::~xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >, COMDAT
; _this$ = ecx

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@xr_vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN6@xr_vector:
	pop	esi
	ret	0
??1?$xr_vector@PAUSlotItem@CDetailManager@@V?$xalloc@PAUSlotItem@CDetailManager@@@@@@QAE@XZ ENDP ; xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >::~xr_vector<CDetailManager::SlotItem *,xalloc<CDetailManager::SlotItem *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1SlotPart@CDetailManager@@QAE@XZ
_TEXT	SEGMENT
??1SlotPart@CDetailManager@@QAE@XZ PROC			; CDetailManager::SlotPart::~SlotPart, COMDAT
; _this$ = ecx
	push	ebx
	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	push	ebp
	mov	ebp, ecx
	push	esi
	push	edi
	mov	edi, 3
	lea	esi, DWORD PTR [ebp+52]
$LL33@SlotPart:

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [esi-12]
	lea	esi, DWORD PTR [esi-12]
	dec	edi
	test	eax, eax
	je	SHORT $LN12@SlotPart
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [esi], 0

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [esi+4], 0

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [esi+8], 0
$LN12@SlotPart:
	test	edi, edi
	jne	SHORT $LL33@SlotPart

; 1750 :         if (_Myfirst) { // destroy and deallocate old array

	mov	eax, DWORD PTR [ebp+4]
	test	eax, eax
	je	SHORT $LN24@SlotPart
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory.h

; 109  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1754 :             _Myfirst = nullptr;

	mov	DWORD PTR [ebp+4], edi

; 1755 :             _Mylast  = nullptr;

	mov	DWORD PTR [ebp+8], edi

; 1756 :             _Myend   = nullptr;

	mov	DWORD PTR [ebp+12], edi
$LN24@SlotPart:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??1SlotPart@CDetailManager@@QAE@XZ ENDP			; CDetailManager::SlotPart::~SlotPart
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
;	COMDAT ??0Slot@CDetailManager@@QAE@XZ
_TEXT	SEGMENT
??0Slot@CDetailManager@@QAE@XZ PROC			; CDetailManager::Slot::Slot, COMDAT
; _this$ = ecx

; 67   : 									Slot()				{ frame=0;empty=1; type=stReady; sx=sz=0; vis.clear(); }

	push	esi
	mov	esi, ecx
	mov	edx, 4
	lea	eax, DWORD PTR [esi+104]
	npad	5
$LL4@Slot:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 390  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	DWORD PTR [eax-32], 0
	lea	eax, DWORD PTR [eax+52]
	mov	DWORD PTR [eax-80], 0
	mov	DWORD PTR [eax-76], 0
	mov	DWORD PTR [eax-72], 0
	mov	DWORD PTR [eax-60], 0
	mov	DWORD PTR [eax-68], 0
	mov	DWORD PTR [eax-64], 0
	mov	DWORD PTR [eax-56], 0
	mov	DWORD PTR [eax-52], 0
	mov	DWORD PTR [eax-48], 0
	mov	DWORD PTR [eax-44], 0
	mov	DWORD PTR [eax-40], 0
	sub	edx, 1
	jne	SHORT $LL4@Slot
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h

; 67   : 									Slot()				{ frame=0;empty=1; type=stReady; sx=sz=0; vis.clear(); }

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], 1
	mov	DWORD PTR [esi+8], edx
	mov	DWORD PTR [esi+4], edx
	call	?clear@vis_data@@QAEXXZ			; vis_data::clear
	mov	eax, esi
	pop	esi
	ret	0
??0Slot@CDetailManager@@QAE@XZ ENDP			; CDetailManager::Slot::Slot
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
;	COMDAT ?set@?$_vector3@M@@QAEAAU1@MMM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
?set@?$_vector3@M@@QAEAAU1@MMM@Z PROC			; _vector3<float>::set, COMDAT
; _this$ = ecx

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	movss	xmm0, DWORD PTR __x$[esp-4]
	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[esp-4]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[esp-4]
	movss	DWORD PTR [ecx+8], xmm0
	ret	12					; 0000000cH
?set@?$_vector3@M@@QAEAAU1@MMM@Z ENDP			; _vector3<float>::set
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\limits
;	COMDAT ?max@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?max@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::max, COMDAT

; 853  :         return FLT_MAX;

	fld	DWORD PTR __real@7f7fffff

; 854  :     }

	ret	0
?max@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::max
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_fbox.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_fbox.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_fbox.h
;	COMDAT ?invalidate@?$_box3@M@@QAEAAV1@XZ
_TEXT	SEGMENT
?invalidate@?$_box3@M@@QAEAAV1@XZ PROC			; _box3<float>::invalidate, COMDAT
; _this$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	mov	DWORD PTR [ecx], 2139095039		; 7f7fffffH
; File I:\Vitalya\mine\NSProjectX\xrCore\_fbox.h

; 37   : 	IC	SelfRef	invalidate	()								{ min.set(type_max(T),type_max(T),type_max(T)); max.set(type_min(T),type_min(T),type_min(T));	return *this;	}

	mov	eax, ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	mov	DWORD PTR [ecx+4], 2139095039		; 7f7fffffH
	mov	DWORD PTR [ecx+8], 2139095039		; 7f7fffffH
	mov	DWORD PTR [ecx+12], -8388609		; ff7fffffH
	mov	DWORD PTR [ecx+16], -8388609		; ff7fffffH
	mov	DWORD PTR [ecx+20], -8388609		; ff7fffffH
; File I:\Vitalya\mine\NSProjectX\xrCore\_fbox.h

; 37   : 	IC	SelfRef	invalidate	()								{ min.set(type_max(T),type_max(T),type_max(T)); max.set(type_min(T),type_min(T),type_min(T));	return *this;	}

	ret	0
?invalidate@?$_box3@M@@QAEAAV1@XZ ENDP			; _box3<float>::invalidate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrEngine\vis_common.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\vis_common.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\vis_common.h
;	COMDAT ?clear@vis_data@@QAEXXZ
_TEXT	SEGMENT
?clear@vis_data@@QAEXXZ PROC				; vis_data::clear, COMDAT
; _this$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
; File I:\Vitalya\mine\NSProjectX\xrEngine\vis_common.h

; 18   : 		sphere.R = 0;

	mov	DWORD PTR [ecx+12], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	mov	DWORD PTR [ecx+16], 2139095039		; 7f7fffffH
	mov	DWORD PTR [ecx+20], 2139095039		; 7f7fffffH
	mov	DWORD PTR [ecx+24], 2139095039		; 7f7fffffH
	mov	DWORD PTR [ecx+28], -8388609		; ff7fffffH
	mov	DWORD PTR [ecx+32], -8388609		; ff7fffffH
	mov	DWORD PTR [ecx+36], -8388609		; ff7fffffH
; File I:\Vitalya\mine\NSProjectX\xrEngine\vis_common.h

; 20   : 		marker = 0;

	mov	DWORD PTR [ecx+40], 0

; 21   : 		accept_frame = 0;

	mov	DWORD PTR [ecx+44], 0

; 22   : 		hom_frame = 0;

	mov	DWORD PTR [ecx+48], 0

; 23   : 		hom_tested = 0;

	mov	DWORD PTR [ecx+52], 0

; 24   : 	}

	ret	0
?clear@vis_data@@QAEXXZ ENDP				; vis_data::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\detailmanager.h
;	COMDAT ??0CacheSlot1@CDetailManager@@QAE@XZ
_TEXT	SEGMENT
??0CacheSlot1@CDetailManager@@QAE@XZ PROC		; CDetailManager::CacheSlot1::CacheSlot1, COMDAT
; _this$ = ecx

; 73   : 		CacheSlot1()				{empty=1; vis.clear();}

	mov	eax, ecx
	mov	DWORD PTR [eax], 1
	lea	ecx, DWORD PTR [eax+4]
	jmp	?clear@vis_data@@QAEXXZ			; vis_data::clear
??0CacheSlot1@CDetailManager@@QAE@XZ ENDP		; CDetailManager::CacheSlot1::CacheSlot1
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_I@YGXPAXIIP6EX0@Z@Z
_TEXT	SEGMENT
___n$ = 8						; size = 4
___f$ = 12						; size = 4
??_I@YGXPAXIIP6EX0@Z@Z PROC				; `vector destructor iterator', COMDAT
; ___t$ = ecx
; ___s$ = edx
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR ___f$[esp+4]
	mov	ebx, edx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___n$[esp+12]
	mov	esi, ebx
	imul	esi, edi
	add	esi, ecx
$LL2@vector:
	sub	esi, ebx
	mov	ecx, esi
	call	ebp
	sub	edi, 1
	jne	SHORT $LL2@vector
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	8
??_I@YGXPAXIIP6EX0@Z@Z ENDP				; `vector destructor iterator'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	esi
	mov	esi, DWORD PTR ___n$[esp]
	test	esi, esi
	je	SHORT $LN6@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR ___s$[esp+8]
	push	edi
	mov	edi, DWORD PTR ___t$[esp+12]
$LL2@vector:
	mov	ecx, edi
	call	ebx
	add	edi, ebp
	sub	esi, 1
	jne	SHORT $LL2@vector
	pop	edi
	pop	ebp
	pop	ebx
$LN6@vector:
	pop	esi
	ret	16					; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
