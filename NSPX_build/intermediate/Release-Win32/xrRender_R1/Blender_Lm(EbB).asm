; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\blender_lm(ebb).obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BH@NBNHOBII@LEVEL?3?5lmap?$CK?$CIenv?$FObase?$CJ@ ; `string'
PUBLIC	??_C@_0BA@KHCMMLLL@Environment?5map@		; `string'
PUBLIC	??_C@_0M@IHIJOGDO@Alpha?9Blend@			; `string'
PUBLIC	??_C@_0BF@BNBCACCK@CBlender_LmEbB?3?3Load@	; `string'
PUBLIC	??_C@_0DP@JEKNKDHH@I?3?2Vitalya?2mine?2NSProjectX?2laye@ ; `string'
PUBLIC	??_C@_0BI@NALOCGFL@CBlender_LmEbB?3?3Compile@	; `string'
PUBLIC	??_C@_05KMMGBPH@lmapE@				; `string'
PUBLIC	??_C@_06BDEBODDF@s_hemi@			; `string'
PUBLIC	??_C@_05EOBMEGEC@s_env@				; `string'
PUBLIC	??_C@_0L@IHAOFHAJ@lmap_point@			; `string'
PUBLIC	??_C@_09KKOGNFME@lmap_spot@			; `string'
PUBLIC	??_C@_06PLCKKJND@lmap_l@			; `string'
PUBLIC	??_R2CBlender_LmEbB@@8				; CBlender_LmEbB::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBlender_LmEbB@@8			; CBlender_LmEbB::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3CBlender_LmEbB@@8				; CBlender_LmEbB::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCBlender_LmEbB@@@8			; CBlender_LmEbB `RTTI Type Descriptor'
PUBLIC	??_R4CBlender_LmEbB@@6B@			; CBlender_LmEbB::`RTTI Complete Object Locator'
PUBLIC	??_7CBlender_LmEbB@@6B@				; CBlender_LmEbB::`vftable'
;	COMDAT ?ignore_always@?BG@??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BG@??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_LmEbB::Load'::`22'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?M@??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?M@??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_LmEbB::Load'::`12'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?4??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?4??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_LmEbB::Load'::`5'::ignore_always
_BSS	ENDS
;	COMDAT ??_7CBlender_LmEbB@@6B@
CONST	SEGMENT
??_7CBlender_LmEbB@@6B@ DD FLAT:??_R4CBlender_LmEbB@@6B@ ; CBlender_LmEbB::`vftable'
	DD	FLAT:?getName@IBlender@@UAEPBDXZ
	DD	FLAT:?getComment@CBlender_LmEbB@@UAEPBDXZ
	DD	FLAT:?Save@CBlender_LmEbB@@UAEXAAVIWriter@@@Z
	DD	FLAT:?Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z
	DD	FLAT:?canBeDetailed@IBlender@@UAEHXZ
	DD	FLAT:?canBeLMAPped@CBlender_LmEbB@@UAEHXZ
	DD	FLAT:?Compile@CBlender_LmEbB@@UAEXAAVCBlender_Compile@@@Z
	DD	FLAT:??_ECBlender_LmEbB@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CBlender_LmEbB@@6B@
rdata$r	SEGMENT
??_R4CBlender_LmEbB@@6B@ DD 00H				; CBlender_LmEbB::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBlender_LmEbB@@@8
	DD	FLAT:??_R3CBlender_LmEbB@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBlender_LmEbB@@@8
data$rs	SEGMENT
??_R0?AVCBlender_LmEbB@@@8 DD FLAT:??_7type_info@@6B@	; CBlender_LmEbB `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBlender_LmEbB@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CBlender_LmEbB@@8
rdata$r	SEGMENT
??_R3CBlender_LmEbB@@8 DD 00H				; CBlender_LmEbB::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBlender_LmEbB@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBlender_LmEbB@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBlender_LmEbB@@8 DD FLAT:??_R0?AVCBlender_LmEbB@@@8 ; CBlender_LmEbB::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBlender_LmEbB@@8
rdata$r	ENDS
;	COMDAT ??_R2CBlender_LmEbB@@8
rdata$r	SEGMENT
??_R2CBlender_LmEbB@@8 DD FLAT:??_R1A@?0A@EA@CBlender_LmEbB@@8 ; CBlender_LmEbB::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IBlender@@8
	DD	FLAT:??_R1A@?0A@EA@CPropertyBase@@8
rdata$r	ENDS
;	COMDAT ??_C@_06PLCKKJND@lmap_l@
CONST	SEGMENT
??_C@_06PLCKKJND@lmap_l@ DB 'lmap_l', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KKOGNFME@lmap_spot@
CONST	SEGMENT
??_C@_09KKOGNFME@lmap_spot@ DB 'lmap_spot', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IHAOFHAJ@lmap_point@
CONST	SEGMENT
??_C@_0L@IHAOFHAJ@lmap_point@ DB 'lmap_point', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05EOBMEGEC@s_env@
CONST	SEGMENT
??_C@_05EOBMEGEC@s_env@ DB 's_env', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06BDEBODDF@s_hemi@
CONST	SEGMENT
??_C@_06BDEBODDF@s_hemi@ DB 's_hemi', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KMMGBPH@lmapE@
CONST	SEGMENT
??_C@_05KMMGBPH@lmapE@ DB 'lmapE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NALOCGFL@CBlender_LmEbB?3?3Compile@
CONST	SEGMENT
??_C@_0BI@NALOCGFL@CBlender_LmEbB?3?3Compile@ DB 'CBlender_LmEbB::Compile'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@JEKNKDHH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
CONST	SEGMENT
??_C@_0DP@JEKNKDHH@I?3?2Vitalya?2mine?2NSProjectX?2laye@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BNBCACCK@CBlender_LmEbB?3?3Load@
CONST	SEGMENT
??_C@_0BF@BNBCACCK@CBlender_LmEbB?3?3Load@ DB 'CBlender_LmEbB::Load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IHIJOGDO@Alpha?9Blend@
CONST	SEGMENT
??_C@_0M@IHIJOGDO@Alpha?9Blend@ DB 'Alpha-Blend', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KHCMMLLL@Environment?5map@
CONST	SEGMENT
??_C@_0BA@KHCMMLLL@Environment?5map@ DB 'Environment map', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NBNHOBII@LEVEL?3?5lmap?$CK?$CIenv?$FObase?$CJ@
CONST	SEGMENT
??_C@_0BH@NBNHOBII@LEVEL?3?5lmap?$CK?$CIenv?$FObase?$CJ@ DB 'LEVEL: lmap*'
	DB	'(env^base)', 00H				; `string'
PUBLIC	?Compile@CBlender_LmEbB@@UAEXAAVCBlender_Compile@@@Z ; CBlender_LmEbB::Compile
PUBLIC	?Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z	; CBlender_LmEbB::Load
PUBLIC	?Save@CBlender_LmEbB@@UAEXAAVIWriter@@@Z	; CBlender_LmEbB::Save
PUBLIC	??1CBlender_LmEbB@@UAE@XZ			; CBlender_LmEbB::~CBlender_LmEbB
PUBLIC	??_GCBlender_LmEbB@@UAEPAXI@Z			; CBlender_LmEbB::`scalar deleting destructor'
PUBLIC	??0CBlender_LmEbB@@QAE@XZ			; CBlender_LmEbB::CBlender_LmEbB
PUBLIC	?canBeLMAPped@CBlender_LmEbB@@UAEHXZ		; CBlender_LmEbB::canBeLMAPped
PUBLIC	?getComment@CBlender_LmEbB@@UAEPBDXZ		; CBlender_LmEbB::getComment
EXTRN	??_ECBlender_LmEbB@@UAEPAXI@Z:PROC		; CBlender_LmEbB::`vector deleting destructor'
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\blender_Lm(EbB).h
;	COMDAT ?getComment@CBlender_LmEbB@@UAEPBDXZ
_TEXT	SEGMENT
?getComment@CBlender_LmEbB@@UAEPBDXZ PROC		; CBlender_LmEbB::getComment, COMDAT
; _this$ = ecx

; 16   : 	virtual		LPCSTR		getComment()	{ return "LEVEL: lmap*(env^base)";	}

	mov	eax, OFFSET ??_C@_0BH@NBNHOBII@LEVEL?3?5lmap?$CK?$CIenv?$FObase?$CJ@
	ret	0
?getComment@CBlender_LmEbB@@UAEPBDXZ ENDP		; CBlender_LmEbB::getComment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\blender_Lm(EbB).h
;	COMDAT ?canBeLMAPped@CBlender_LmEbB@@UAEHXZ
_TEXT	SEGMENT
?canBeLMAPped@CBlender_LmEbB@@UAEHXZ PROC		; CBlender_LmEbB::canBeLMAPped, COMDAT
; _this$ = ecx

; 17   : 	virtual		BOOL		canBeLMAPped()	{ return TRUE; }

	mov	eax, 1
	ret	0
?canBeLMAPped@CBlender_LmEbB@@UAEHXZ ENDP		; CBlender_LmEbB::canBeLMAPped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
_TEXT	SEGMENT
??0CBlender_LmEbB@@QAE@XZ PROC				; CBlender_LmEbB::CBlender_LmEbB
; _this$ = ecx

; 15   : {

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_LmEbB@@6B@

; 17   : 	description.version	= 0x1;

	mov	eax, 1
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 52   : 	xrP_BOOL() : value(FALSE) {}

	mov	DWORD PTR [esi+452], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 17   : 	description.version	= 0x1;

	mov	WORD PTR [esi+176], ax
	mov	DWORD PTR [esi+4], 1109401632		; 42202020H
	mov	DWORD PTR [esi+8], 1282229602		; 4c6d4562H

; 18   : 	strcpy				(oT2_Name,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+324], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+328], ax

; 19   : 	strcpy				(oT2_xform,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+388], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+392], ax

; 20   : 	oBlend.value		= FALSE;
; 21   : }

	mov	eax, esi
	pop	esi
	ret	0
??0CBlender_LmEbB@@QAE@XZ ENDP				; CBlender_LmEbB::CBlender_LmEbB
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
;	COMDAT ??_GCBlender_LmEbB@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBlender_LmEbB@@UAEPAXI@Z PROC			; CBlender_LmEbB::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 24   : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_LmEbB@@6B@

; 25   : }

	call	DWORD PTR __imp_??1IBlender@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	456					; 000001c8H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCBlender_LmEbB@@UAEPAXI@Z ENDP			; CBlender_LmEbB::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
_TEXT	SEGMENT
??1CBlender_LmEbB@@UAE@XZ PROC				; CBlender_LmEbB::~CBlender_LmEbB
; _this$ = ecx

; 24   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CBlender_LmEbB@@6B@

; 25   : }

	jmp	DWORD PTR __imp_??1IBlender@@UAE@XZ
??1CBlender_LmEbB@@UAE@XZ ENDP				; CBlender_LmEbB::~CBlender_LmEbB
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
?Save@CBlender_LmEbB@@UAEXAAVIWriter@@@Z PROC		; CBlender_LmEbB::Save
; _this$ = ecx

; 28   : {

	push	ebx
	push	esi

; 29   : 	description.version	= 0x1;
; 30   : 	IBlender::Save		(fs);

	mov	esi, DWORD PTR _fs$[esp+4]
	mov	eax, 1
	push	edi
	mov	edi, ecx
	push	esi
	mov	WORD PTR [edi+176], ax
	call	DWORD PTR __imp_?Save@IBlender@@UAEXAAVIWriter@@@Z
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	push	0
	mov	ecx, esi
	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_0BA@KHCMMLLL@Environment?5map@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 101  : 	fs.w_u32(ID);

	push	3
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 32   : 	xrPWRITE_PROP		(fs,"Name",				xrPID_TEXTURE,	oT2_Name);

	lea	ebx, DWORD PTR [edi+324]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_04FABLJDN@Name@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN9@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	64					; 00000040H
	push	ebx
	call	DWORD PTR [eax+12]
$LN9@Save:

; 101  : 	fs.w_u32(ID);

	push	1
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 33   : 	xrPWRITE_PROP		(fs,"Transform",		xrPID_MATRIX,	oT2_xform);

	lea	ebx, DWORD PTR [edi+388]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_09MKLAHOHG@Transform@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN12@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	64					; 00000040H
	push	ebx
	call	DWORD PTR [eax+12]
$LN12@Save:

; 101  : 	fs.w_u32(ID);

	push	6
	mov	ecx, esi
	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_0M@IHIJOGDO@Alpha?9Blend@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 34   : 	xrPWRITE_PROP		(fs,"Alpha-Blend",		xrPID_BOOL,		oBlend);

	add	edi, 452				; 000001c4H
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 103  : 	if (data && size)	fs.w(data, size);

	je	SHORT $LN15@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	4
	push	edi
	call	DWORD PTR [eax+12]
$LN15@Save:
	pop	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 35   : }

	pop	esi
	pop	ebx
	ret	4
?Save@CBlender_LmEbB@@UAEXAAVIWriter@@@Z ENDP		; CBlender_LmEbB::Save
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
_version$ = 12						; size = 2
?Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z PROC		; CBlender_LmEbB::Load
; _this$ = ecx

; 38   : {

	push	ebx
	push	ebp
	push	esi
	push	edi

; 39   : 	IBlender::Load	(fs,version);

	push	DWORD PTR _version$[esp+12]
	mov	edi, DWORD PTR _fs$[esp+16]
	mov	ebp, ecx
	push	edi
	call	DWORD PTR __imp_?Load@IBlender@@UAEXAAVIReader@@G@Z
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 124  : 	R_ASSERT(xrPID_MARKER == xrPREAD(fs));

	cmp	BYTE PTR ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA, 0 ; `xrPREAD_MARKER'::`4'::ignore_always
	mov	ebx, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	jne	SHORT $LN29@Load

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ

; 124  : 	R_ASSERT(xrPID_MARKER == xrPREAD(fs));

	test	esi, esi
	je	SHORT $LN29@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??xrPREAD_MARKER@@YAXAAVIReader@@@Z@4_NA ; `xrPREAD_MARKER'::`4'::ignore_always
	push	OFFSET ??_C@_0P@PLOPPKHB@xrPREAD_MARKER@
	push	124					; 0000007cH
	push	OFFSET ??_C@_0DB@CNPOFPKJ@I?3?2Vitalya?2mine?2NSProjectX?2xrEn@
	push	OFFSET ??_C@_0BM@KGILKBEF@xrPID_MARKER?5?$DN?$DN?5xrPREAD?$CIfs?$CJ@
	call	ebx
$LN29@Load:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 41   : 	xrPREAD_PROP	(fs,xrPID_TEXTURE,	oT2_Name);

	cmp	BYTE PTR ?ignore_always@?4??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN2@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 41   : 	xrPREAD_PROP	(fs,xrPID_TEXTURE,	oT2_Name);

	cmp	esi, 3
	je	SHORT $LN2@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?4??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BF@BNBCACCK@CBlender_LmEbB?3?3Load@
	push	41					; 00000029H
	push	OFFSET ??_C@_0DP@JEKNKDHH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@BLIOCLAN@xrPID_TEXTURE?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebx
$LN2@Load:
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebp+324]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 42   : 	xrPREAD_PROP	(fs,xrPID_MATRIX,	oT2_xform);

	cmp	BYTE PTR ?ignore_always@?M@??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN7@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 42   : 	xrPREAD_PROP	(fs,xrPID_MATRIX,	oT2_xform);

	cmp	esi, 1
	je	SHORT $LN7@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?M@??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BF@BNBCACCK@CBlender_LmEbB?3?3Load@
	push	42					; 0000002aH
	push	OFFSET ??_C@_0DP@JEKNKDHH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BK@PIKCNJKB@xrPID_MATRIX?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebx
$LN7@Load:
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebp+388]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 43   : 	if (version>=0x1)	{

	cmp	WORD PTR _version$[esp+12], 1
	jb	SHORT $LN69@Load

; 44   : 		xrPREAD_PROP	(fs,xrPID_BOOL,	oBlend);

	cmp	BYTE PTR ?ignore_always@?BG@??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN12@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 44   : 		xrPREAD_PROP	(fs,xrPID_BOOL,	oBlend);

	cmp	esi, 6
	je	SHORT $LN12@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BG@??Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BF@BNBCACCK@CBlender_LmEbB?3?3Load@
	push	44					; 0000002cH
	push	OFFSET ??_C@_0DP@JEKNKDHH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	ebx
$LN12@Load:
	push	4
	lea	eax, DWORD PTR [ebp+452]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z
$LN69@Load:

; 45   : 	}
; 46   : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	8
?Load@CBlender_LmEbB@@UAEXAAVIReader@@G@Z ENDP		; CBlender_LmEbB::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_C$ = 8							; size = 4
?Compile@CBlender_LmEbB@@UAEXAAVCBlender_Compile@@@Z PROC ; CBlender_LmEbB::Compile
; _this$ = ecx

; 53   : {

	push	ecx
	push	ebx
	push	ebp

; 54   : 	IBlender::Compile		(C);

	mov	ebp, DWORD PTR _C$[esp+8]
	push	esi
	push	edi
	mov	esi, ecx
	push	ebp
	mov	DWORD PTR _this$1$[esp+24], esi
	call	DWORD PTR __imp_?Compile@IBlender@@UAEXAAVCBlender_Compile@@@Z

; 55   : 	if (C.bEditor)	{

	cmp	DWORD PTR [ebp+44], 0
	je	$LN4@Compile

; 56   : 		C.PassBegin		();

	mov	ecx, ebp
	call	DWORD PTR __imp_?PassBegin@CBlender_Compile@@QAEXXZ

; 57   : 		{
; 58   : 			C.PassSET_ZB		(TRUE,TRUE);

	push	0
	push	1
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?PassSET_ZB@CBlender_Compile@@QAEXHHH@Z

; 59   : 			C.PassSET_Blend_SET	();

	push	0
	push	0
	mov	ecx, ebp
	call	DWORD PTR __imp_?PassSET_Blend_SET@CBlender_Compile@@QAEXHI@Z

; 60   : 			C.PassSET_LightFog	(TRUE,TRUE);

	push	1
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?PassSET_LightFog@CBlender_Compile@@QAEXHH@Z

; 61   : 			
; 62   : 			// Stage1 - Env texture
; 63   : 			C.StageBegin		();

	mov	ecx, ebp
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 64   : 			C.StageSET_Address	(D3DTADDRESS_CLAMP);

	push	3
	mov	ecx, ebp
	call	DWORD PTR __imp_?StageSET_Address@CBlender_Compile@@QAEXI@Z

; 65   : 			C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,		D3DTA_DIFFUSE);

	mov	ebx, DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z
	mov	ecx, ebp
	push	0
	push	2
	push	2
	call	ebx

; 66   : 			C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,		D3DTA_DIFFUSE);

	mov	edi, DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z
	mov	ecx, ebp
	push	0
	push	2
	push	2
	call	edi

; 67   : 			C.StageSET_TMC		(oT2_Name, oT2_xform, "$null", 0);

	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	lea	eax, DWORD PTR [esi+388]
	mov	ecx, ebp
	push	eax
	lea	eax, DWORD PTR [esi+324]
	mov	esi, DWORD PTR __imp_?StageSET_TMC@CBlender_Compile@@QAEXPBD00H@Z
	push	eax
	call	esi

; 68   : 			C.StageEnd			();

	mov	ecx, ebp
	mov	ebp, DWORD PTR __imp_?StageEnd@CBlender_Compile@@QAEXXZ
	call	ebp

; 69   : 			
; 70   : 			// Stage2 - Base texture
; 71   : 			C.StageBegin		();

	mov	ecx, DWORD PTR _C$[esp+16]
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 72   : 			C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_BLENDTEXTUREALPHA,	D3DTA_CURRENT);

	mov	ecx, DWORD PTR _C$[esp+16]
	push	1
	push	13					; 0000000dH
	push	2
	call	ebx

; 73   : 			C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,		D3DTA_CURRENT);

	mov	ecx, DWORD PTR _C$[esp+16]
	push	1
	push	2
	push	2
	call	edi

; 74   : 			C.StageSET_TMC		(oT_Name, oT_xform, "$null", 0);

	mov	ecx, DWORD PTR _this$1$[esp+20]
	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	lea	eax, DWORD PTR [ecx+260]
	push	eax
	lea	eax, DWORD PTR [ecx+196]
	mov	ecx, DWORD PTR _C$[esp+28]
	push	eax
	call	esi

; 75   : 			C.StageEnd			();

	mov	esi, DWORD PTR _C$[esp+16]
	mov	ecx, esi
	call	ebp

; 76   : 
; 77   : 			// Stage3 - Lighting - should work on all 2tex hardware
; 78   : 			C.StageBegin		();

	mov	ecx, esi
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 79   : 			C.StageSET_Color	(D3DTA_DIFFUSE,	  D3DTOP_MODULATE,			D3DTA_CURRENT);

	push	1
	push	4
	push	0
	mov	ecx, esi
	call	ebx

; 80   : 			C.StageSET_Alpha	(D3DTA_DIFFUSE,	  D3DTOP_SELECTARG2,		D3DTA_CURRENT);

	push	1
	push	3
	push	0
	mov	ecx, esi
	call	edi

; 81   : 			C.Stage_Texture		("$null"	);

	push	2
	push	2
	push	2
	push	1
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, esi
	call	DWORD PTR __imp_?Stage_Texture@CBlender_Compile@@QAEXPBDIIII@Z

; 82   : 			C.Stage_Matrix		("$null",	0);

	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, esi
	call	DWORD PTR __imp_?Stage_Matrix@CBlender_Compile@@QAEXPBDH@Z

; 83   : 			C.Stage_Constant	("$null"	);

	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, esi
	call	DWORD PTR __imp_?Stage_Constant@CBlender_Compile@@QAEXPBD@Z

; 84   : 			C.StageEnd			();

	mov	ecx, esi
	call	ebp

; 85   : 		}
; 86   : 		C.PassEnd			();

	mov	ecx, esi
	call	DWORD PTR __imp_?PassEnd@CBlender_Compile@@QAEXXZ

; 136  : 			C.r_End			();
; 137  : 			break;
; 138  : 		}
; 139  : 	}
; 140  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN4@Compile:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 1536 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	eax, DWORD PTR [ebp+4]
	mov	ecx, DWORD PTR [ebp]
	sub	eax, ecx
	sar	eax, 2
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 88   : 		if (C.L_textures.size()<2)	Debug.fatal	(DEBUG_INFO,"Not enought textures for shader, base tex: %s",*C.L_textures[0]);

	cmp	eax, 2
	jae	SHORT $LN6@Compile
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 65   : 	str_c				operator*	() const						{	return p_?p_->value:0;							}

	mov	ecx, DWORD PTR [ecx]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 88   : 		if (C.L_textures.size()<2)	Debug.fatal	(DEBUG_INFO,"Not enought textures for shader, base tex: %s",*C.L_textures[0]);

	lea	eax, DWORD PTR [ecx+12]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, eax
	push	ecx
	push	OFFSET ??_C@_0CO@BDAKELHH@Not?5enought?5textures?5for?5shader@
	push	OFFSET ??_C@_0BI@NALOCGFL@CBlender_LmEbB?3?3Compile@
	push	88					; 00000058H
	push	OFFSET ??_C@_0DP@JEKNKDHH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	DWORD PTR __imp_?Debug@@3VxrDebug@@A
	call	DWORD PTR __imp_?fatal@xrDebug@@QAAXPBDH00ZZ
	add	esp, 24					; 00000018H
$LN6@Compile:

; 89   : 		switch (C.iElement)

	mov	eax, DWORD PTR [ebp+60]
	cmp	eax, 4
	ja	$LN2@Compile
	jmp	DWORD PTR $LN202@Compile[eax*4]
$LN7@Compile:

; 90   : 		{
; 91   : 		case SE_R1_NORMAL_HQ:
; 92   : 		case SE_R1_NORMAL_LQ:
; 93   : 			// Level view
; 94   : 			/*
; 95   : 			if (C.bDetail_Diffuse)
; 96   : 			{
; 97   : 				if (oBlend.value)	C.r_Pass	("lmapE_dt","lmapE_dt",TRUE,TRUE,FALSE,TRUE,D3DBLEND_SRCALPHA,D3DBLEND_INVSRCALPHA,TRUE,0);
; 98   : 				else				C.r_Pass	("lmapE_dt","lmapE_dt",TRUE);
; 99   : 				C.r_Sampler	("s_base",	C.L_textures[0]);
; 100  : 				C.r_Sampler	("s_lmap",	C.L_textures[1]);
; 101  : 				C.r_Sampler	("s_env",	oT2_Name,false,D3DTADDRESS_CLAMP);
; 102  : 				C.r_Sampler	("s_detail",C.detail_texture);
; 103  : 				C.r_End		();
; 104  : 			} else
; 105  : 			{
; 106  : 			*/
; 107  : 			if (oBlend.value)	C.r_Pass	("lmapE","lmapE",TRUE,TRUE,FALSE,TRUE,D3DBLEND_SRCALPHA,	D3DBLEND_INVSRCALPHA,	TRUE,0);

	cmp	DWORD PTR [esi+452], 0
	mov	ecx, ebp
	push	0
	je	SHORT $LN9@Compile
	push	1
	push	6
	push	5
	push	1
	push	0
	jmp	SHORT $LN203@Compile
$LN9@Compile:

; 108  : 			else				C.r_Pass	("lmapE","lmapE",TRUE);

	push	0
	push	1
	push	2
	push	0
	push	1
$LN203@Compile:
; File I:\Vitalya\mine\NSProjectX\xrCore\_stl_extensions.h

; 138  : 	reference operator[]		(size_type _Pos)					{ {VERIFY(_Pos<size());} return (*(begin() + _Pos)); }

	push	1
	push	1
	push	OFFSET ??_C@_05KMMGBPH@lmapE@
	push	OFFSET ??_C@_05KMMGBPH@lmapE@
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z
	mov	eax, DWORD PTR [ebp]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 109  : 			C.r_Sampler		("s_base",	C.L_textures[0]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	edx, esp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 59   : 						shared_str	(shared_str const &rhs)			{	p_ = 0;	_set(rhs);								}

	mov	DWORD PTR [edx], 0

; 53   : 	void				_set		(shared_str const &rhs)			{	str_value* v = rhs.p_; if (0!=v) v->dwReference++; _dec(); p_ = v;							}

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN64@Compile
	inc	DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx]

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	test	ecx, ecx
	je	SHORT $LN64@Compile
	dec	DWORD PTR [ecx]
$LN64@Compile:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 109  : 			C.r_Sampler		("s_base",	C.L_textures[0]);

	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 53   : 	void				_set		(shared_str const &rhs)			{	str_value* v = rhs.p_; if (0!=v) v->dwReference++; _dec(); p_ = v;							}

	mov	DWORD PTR [edx], eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 109  : 			C.r_Sampler		("s_base",	C.L_textures[0]);

	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 303  :         _Vector_iterator _Tmp = *this;

	mov	eax, DWORD PTR [ebp]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 110  : 			C.r_Sampler		("s_lmap",	C.L_textures[1]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	edx, esp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 59   : 						shared_str	(shared_str const &rhs)			{	p_ = 0;	_set(rhs);								}

	mov	DWORD PTR [edx], 0

; 53   : 	void				_set		(shared_str const &rhs)			{	str_value* v = rhs.p_; if (0!=v) v->dwReference++; _dec(); p_ = v;							}

	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN90@Compile
	inc	DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx]

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	test	ecx, ecx
	je	SHORT $LN90@Compile
	dec	DWORD PTR [ecx]
$LN90@Compile:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 110  : 			C.r_Sampler		("s_lmap",	C.L_textures[1]);

	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	mov	ecx, ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 53   : 	void				_set		(shared_str const &rhs)			{	str_value* v = rhs.p_; if (0!=v) v->dwReference++; _dec(); p_ = v;							}

	mov	DWORD PTR [edx], eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 110  : 			C.r_Sampler		("s_lmap",	C.L_textures[1]);

	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 65   : 	str_c				operator*	() const						{	return p_?p_->value:0;							}

	mov	eax, DWORD PTR [ebp]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 111  : 			C.r_Sampler_clf	("s_hemi",	*C.L_textures[2]);

	push	0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 65   : 	str_c				operator*	() const						{	return p_?p_->value:0;							}

	mov	ecx, DWORD PTR [eax+8]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 111  : 			C.r_Sampler_clf	("s_hemi",	*C.L_textures[2]);

	lea	eax, DWORD PTR [ecx+12]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, eax
	push	ecx
	push	OFFSET ??_C@_06BDEBODDF@s_hemi@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z

; 112  : 			C.r_Sampler		("s_env",	oT2_Name,false,D3DTADDRESS_CLAMP);

	push	2
	push	2
	push	2
	push	3
	push	0
	lea	eax, DWORD PTR [esi+324]
	mov	ecx, ebp
	push	eax
	push	OFFSET ??_C@_05EOBMEGEC@s_env@
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBD0_NIIII@Z

; 136  : 			C.r_End			();
; 137  : 			break;
; 138  : 		}
; 139  : 	}
; 140  : }

	mov	ecx, ebp
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN11@Compile:

; 113  : 			C.r_End			();
; 114  : 			// }
; 115  : 			break;
; 116  : 		case SE_R1_LPOINT:
; 117  : 			C.r_Pass		("lmap_point","add_point",FALSE,TRUE,FALSE,TRUE,D3DBLEND_ONE,D3DBLEND_ONE,TRUE);

	push	0
	push	1
	push	2
	push	2
	push	1
	push	0
	push	1
	push	0
	push	OFFSET ??_C@_09PNJHBAHM@add_point@
	push	OFFSET ??_C@_0L@IHAOFHAJ@lmap_point@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z

; 118  : 			C.r_Sampler		("s_base",	C.L_textures[0]		);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [ebp]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 119  : 			C.r_Sampler_clf	("s_lmap",	TEX_POINT_ATT		);

	mov	esi, DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z
	mov	ecx, ebp
	push	0
	push	OFFSET ??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	call	esi

; 120  : 			C.r_Sampler_clf	("s_att",	TEX_POINT_ATT		);

	push	0
	push	OFFSET ??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@
	push	OFFSET ??_C@_05OCPJJFDB@s_att@
	mov	ecx, ebp
	call	esi

; 136  : 			C.r_End			();
; 137  : 			break;
; 138  : 		}
; 139  : 	}
; 140  : }

	mov	ecx, ebp
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN12@Compile:

; 121  : 			C.r_End			();
; 122  : 			break;
; 123  : 		case SE_R1_LSPOT:
; 124  : 			C.r_Pass		("lmap_spot","add_spot",FALSE,TRUE,FALSE,TRUE,D3DBLEND_ONE,D3DBLEND_ONE,TRUE);

	push	0
	push	1
	push	2
	push	2
	push	1
	push	0
	push	1
	push	0
	push	OFFSET ??_C@_08FJPLAIEP@add_spot@
	push	OFFSET ??_C@_09KKOGNFME@lmap_spot@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z

; 125  : 			C.r_Sampler		("s_base",	C.L_textures[0]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [ebp]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 126  : 			C.r_Sampler_clf	("s_lmap",	"internal\\internal_light_att",		true);

	mov	esi, DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z
	mov	ecx, ebp
	push	1
	push	OFFSET ??_C@_0BM@EOCKFCCB@internal?2internal_light_att@
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	call	esi

; 127  : 			C.r_Sampler_clf	("s_att",	TEX_SPOT_ATT		);

	push	0
	push	OFFSET ??_C@_0CA@EOOCFOEF@internal?2internal_light_attclip@
	push	OFFSET ??_C@_05OCPJJFDB@s_att@
	mov	ecx, ebp
	call	esi

; 136  : 			C.r_End			();
; 137  : 			break;
; 138  : 		}
; 139  : 	}
; 140  : }

	mov	ecx, ebp
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN13@Compile:

; 128  : 			C.r_End			();
; 129  : 			break;
; 130  : 		case SE_R1_LMODELS:
; 131  : 			// Lighting only, not use alpha-channel
; 132  : 			C.r_Pass		("lmap_l","lmap_l",FALSE);

	push	0
	push	0
	push	1
	push	2
	push	0
	push	1
	push	1
	push	0
	push	OFFSET ??_C@_06PLCKKJND@lmap_l@
	push	OFFSET ??_C@_06PLCKKJND@lmap_l@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z

; 133  : 			C.r_Sampler		("s_base",C.L_textures[0]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [ebp]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	mov	eax, DWORD PTR [ebp]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 134  : 			C.r_Sampler		("s_lmap",C.L_textures[1]);

	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 119  :         _Ptr += _Off;

	add	eax, 4
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 134  : 			C.r_Sampler		("s_lmap",C.L_textures[1]);

	mov	ecx, esp
	push	eax
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 65   : 	str_c				operator*	() const						{	return p_?p_->value:0;							}

	mov	eax, DWORD PTR [ebp]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 135  : 			C.r_Sampler_clf	("s_hemi",*C.L_textures[2]);

	push	0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 65   : 	str_c				operator*	() const						{	return p_?p_->value:0;							}

	mov	ecx, DWORD PTR [eax+8]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 135  : 			C.r_Sampler_clf	("s_hemi",*C.L_textures[2]);

	lea	eax, DWORD PTR [ecx+12]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, eax
	push	ecx
	push	OFFSET ??_C@_06BDEBODDF@s_hemi@
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z

; 136  : 			C.r_End			();
; 137  : 			break;
; 138  : 		}
; 139  : 	}
; 140  : }

	mov	ecx, ebp
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
$LN2@Compile:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
	npad	2
$LN202@Compile:
	DD	$LN7@Compile
	DD	$LN7@Compile
	DD	$LN11@Compile
	DD	$LN12@Compile
	DD	$LN13@Compile
?Compile@CBlender_LmEbB@@UAEXAAVCBlender_Compile@@@Z ENDP ; CBlender_LmEbB::Compile
_TEXT	ENDS
END
