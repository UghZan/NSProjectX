; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\fstaticrender_rendertarget.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BD@HKPIJJFP@$user$rendertarget@		; `string'
PUBLIC	??_C@_0O@LGKJCIJG@$user$distort@		; `string'
PUBLIC	??_C@_07MHHIKOPA@enabled@			; `string'
PUBLIC	??_C@_0O@HCJBNNCF@?$CK?5SSample?3?5?$CFs@	; `string'
PUBLIC	??_C@_0BB@MOEEHFLA@?$CK?5SSample?3?5?$CFdx?$CFd@ ; `string'
PUBLIC	??_C@_0BG@HPOFENMC@CRenderTarget?3?3Create@	; `string'
PUBLIC	??_C@_0EP@KIEBDFAP@I?3?2Vitalya?2mine?2NSProjectX?2laye@ ; `string'
PUBLIC	??_C@_0GM@PJIBGLIO@HW?4pDevice?9?$DOCreateDepthStencilS@ ; `string'
PUBLIC	??_C@_0GI@LLCKMKIM@HW?4pDevice?9?$DOCreateDepthStencilS@ ; `string'
PUBLIC	??_C@_0M@HNLHGNFF@postprocess@			; `string'
PUBLIC	??_C@_0O@JCLOAOGN@postprocess_d@		; `string'
PUBLIC	??_C@_0N@INACFBOF@c_brightness@			; `string'
PUBLIC	??_R2CRenderTarget@@8				; CRenderTarget::`RTTI Base Class Array'
PUBLIC	??_R2IRender_Target@@8				; IRender_Target::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRenderTarget@@8			; CRenderTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IRender_Target@@8			; IRender_Target::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3IRender_Target@@8				; IRender_Target::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVIRender_Target@@@8			; IRender_Target `RTTI Type Descriptor'
PUBLIC	??_R3CRenderTarget@@8				; CRenderTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCRenderTarget@@@8			; CRenderTarget `RTTI Type Descriptor'
PUBLIC	??_R4CRenderTarget@@6B@				; CRenderTarget::`RTTI Complete Object Locator'
PUBLIC	??_7CRenderTarget@@6B@				; CRenderTarget::`vftable'
EXTRN	__imp_??0IRender_Target@@QAE@XZ:PROC
EXTRN	__imp_?_set@?$resptr_base@VCRT@@@@QAEXABV1@@Z:PROC
EXTRN	__imp_?_inc@?$resptr_base@VCRT@@@@IAEXXZ:PROC
EXTRN	__imp_?_get@?$resptr_base@VCRT@@@@QBEPAVCRT@@XZ:PROC
EXTRN	__imp_?set_ColorWriteEnable@CBackend@@QAEXI@Z:PROC
EXTRN	__imp_?Clear@CRenderDevice@@QAEXXZ:PROC
EXTRN	__imp_?set_ZB@CBackend@@QAEXPAUIDirect3DSurface9@@@Z:PROC
EXTRN	__imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z:PROC
EXTRN	__imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ:PROC
EXTRN	__imp_?_set@?$resptr_base@VCRT@@@@QAEXPAVCRT@@@Z:PROC
EXTRN	__imp_?destroy@resptrcode_crt@@QAEXXZ:PROC
EXTRN	__imp_?valid@CRT@@QAEHXZ:PROC
EXTRN	__imp_?create@resptrcode_crt@@QAEXPBDIIW4_D3DFORMAT@@@Z:PROC
EXTRN	__imp_?ps_r__Supersample@@3HA:DWORD
EXTRN	__imp_??_7IRender_Target@@6B@:BYTE
EXTRN	__imp_??1IRender_Target@@UAE@XZ:PROC
;	COMDAT ?ignore_always@?P@??Create@CRenderTarget@@AAEHXZ@4_NA
_BSS	SEGMENT
?ignore_always@?P@??Create@CRenderTarget@@AAEHXZ@4_NA DB 01H DUP (?) ; `CRenderTarget::Create'::`15'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?8??Create@CRenderTarget@@AAEHXZ@4_NA
_BSS	SEGMENT
?ignore_always@?8??Create@CRenderTarget@@AAEHXZ@4_NA DB 01H DUP (?) ; `CRenderTarget::Create'::`9'::ignore_always
_BSS	ENDS
;	COMDAT ??_7CRenderTarget@@6B@
CONST	SEGMENT
??_7CRenderTarget@@6B@ DD FLAT:??_R4CRenderTarget@@6B@	; CRenderTarget::`vftable'
	DD	FLAT:?set_blur@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_gray@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_duality_h@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_duality_v@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_noise@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_noise_scale@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_noise_fps@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_color_base@CRenderTarget@@UAEXI@Z
	DD	FLAT:?set_color_gray@CRenderTarget@@UAEXI@Z
	DD	FLAT:?set_color_add@CRenderTarget@@UAEXI@Z
	DD	FLAT:?get_width@CRenderTarget@@UAEIXZ
	DD	FLAT:?get_height@CRenderTarget@@UAEIXZ
	DD	FLAT:??_ECRenderTarget@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CRenderTarget@@6B@
rdata$r	SEGMENT
??_R4CRenderTarget@@6B@ DD 00H				; CRenderTarget::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRenderTarget@@@8
	DD	FLAT:??_R3CRenderTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRenderTarget@@@8
data$rs	SEGMENT
??_R0?AVCRenderTarget@@@8 DD FLAT:??_7type_info@@6B@	; CRenderTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRenderTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CRenderTarget@@8
rdata$r	SEGMENT
??_R3CRenderTarget@@8 DD 00H				; CRenderTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CRenderTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRender_Target@@@8
data$rs	SEGMENT
??_R0?AVIRender_Target@@@8 DD FLAT:??_7type_info@@6B@	; IRender_Target `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRender_Target@@', 00H
data$rs	ENDS
;	COMDAT ??_R3IRender_Target@@8
rdata$r	SEGMENT
??_R3IRender_Target@@8 DD 00H				; IRender_Target::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IRender_Target@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRender_Target@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRender_Target@@8 DD FLAT:??_R0?AVIRender_Target@@@8 ; IRender_Target::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRender_Target@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRenderTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRenderTarget@@8 DD FLAT:??_R0?AVCRenderTarget@@@8 ; CRenderTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRenderTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2IRender_Target@@8
rdata$r	SEGMENT
??_R2IRender_Target@@8 DD FLAT:??_R1A@?0A@EA@IRender_Target@@8 ; IRender_Target::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R2CRenderTarget@@8
rdata$r	SEGMENT
??_R2CRenderTarget@@8 DD FLAT:??_R1A@?0A@EA@CRenderTarget@@8 ; CRenderTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IRender_Target@@8
rdata$r	ENDS
;	COMDAT ??_C@_0N@INACFBOF@c_brightness@
CONST	SEGMENT
??_C@_0N@INACFBOF@c_brightness@ DB 'c_brightness', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JCLOAOGN@postprocess_d@
CONST	SEGMENT
??_C@_0O@JCLOAOGN@postprocess_d@ DB 'postprocess_d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HNLHGNFF@postprocess@
CONST	SEGMENT
??_C@_0M@HNLHGNFF@postprocess@ DB 'postprocess', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@LLCKMKIM@HW?4pDevice?9?$DOCreateDepthStencilS@
CONST	SEGMENT
??_C@_0GI@LLCKMKIM@HW?4pDevice?9?$DOCreateDepthStencilS@ DB 'HW.pDevice->'
	DB	'CreateDepthStencilSurface (512,512,HW.Caps.fDepth,D3DMULTISAM'
	DB	'PLE_NONE,0,TRUE,&pTempZB,NULL)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GM@PJIBGLIO@HW?4pDevice?9?$DOCreateDepthStencilS@
CONST	SEGMENT
??_C@_0GM@PJIBGLIO@HW?4pDevice?9?$DOCreateDepthStencilS@ DB 'HW.pDevice->'
	DB	'CreateDepthStencilSurface (rtWidth,rtHeight,HW.Caps.fDepth,D3'
	DB	'DMULTISAMPLE_NONE,0,TRUE,&ZB,NULL)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@KIEBDFAP@I?3?2Vitalya?2mine?2NSProjectX?2laye@
CONST	SEGMENT
??_C@_0EP@KIEBDFAP@I?3?2Vitalya?2mine?2NSProjectX?2laye@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarge'
	DB	't.cpp', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HPOFENMC@CRenderTarget?3?3Create@
CONST	SEGMENT
??_C@_0BG@HPOFENMC@CRenderTarget?3?3Create@ DB 'CRenderTarget::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MOEEHFLA@?$CK?5SSample?3?5?$CFdx?$CFd@
CONST	SEGMENT
??_C@_0BB@MOEEHFLA@?$CK?5SSample?3?5?$CFdx?$CFd@ DB '* SSample: %dx%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HCJBNNCF@?$CK?5SSample?3?5?$CFs@
CONST	SEGMENT
??_C@_0O@HCJBNNCF@?$CK?5SSample?3?5?$CFs@ DB '* SSample: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MHHIKOPA@enabled@
CONST	SEGMENT
??_C@_07MHHIKOPA@enabled@ DB 'enabled', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LGKJCIJG@$user$distort@
CONST	SEGMENT
??_C@_0O@LGKJCIJG@$user$distort@ DB '$user$distort', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HKPIJJFP@$user$rendertarget@
CONST	SEGMENT
??_C@_0BD@HKPIJJFP@$user$rendertarget@ DB '$user$rendertarget', 00H ; `string'
?RTname_distort@@3PBDB DD FLAT:??_C@_0O@LGKJCIJG@$user$distort@ ; RTname_distort
?RTname@@3PBDB DD FLAT:??_C@_0BD@HKPIJJFP@$user$rendertarget@ ; RTname
PUBLIC	?Available@CRenderTarget@@AAEHXZ		; CRenderTarget::Available
PUBLIC	?set_blur@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_blur
PUBLIC	?set_gray@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_gray
PUBLIC	?set_duality_h@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_duality_h
PUBLIC	?set_duality_v@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_duality_v
PUBLIC	?set_noise@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_noise
PUBLIC	?set_noise_scale@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_noise_scale
PUBLIC	?set_noise_fps@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_noise_fps
PUBLIC	?set_color_base@CRenderTarget@@UAEXI@Z		; CRenderTarget::set_color_base
PUBLIC	?set_color_gray@CRenderTarget@@UAEXI@Z		; CRenderTarget::set_color_gray
PUBLIC	?set_color_add@CRenderTarget@@UAEXI@Z		; CRenderTarget::set_color_add
PUBLIC	?get_width@CRenderTarget@@UAEIXZ		; CRenderTarget::get_width
PUBLIC	?get_height@CRenderTarget@@UAEIXZ		; CRenderTarget::get_height
PUBLIC	?add@?$_vector2@M@@QAEAAU1@ABU1@@Z		; _vector2<float>::add
PUBLIC	?mul@?$_vector2@M@@QAEAAU1@M@Z			; _vector2<float>::mul
PUBLIC	?size@?$FixedMAP@MU_MatrixItemS@R_dsgraph@@Udoug_lea_allocator@@@@QAEIXZ ; FixedMAP<float,R_dsgraph::_MatrixItemS,doug_lea_allocator>::size
PUBLIC	??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ ; resptr_core<CRT,resptrcode_crt>::resptr_core<CRT,resptrcode_crt>
PUBLIC	??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@PAVCRT@@_N@Z ; resptr_core<CRT,resptrcode_crt>::resptr_core<CRT,resptrcode_crt>
PUBLIC	??1?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ ; resptr_core<CRT,resptrcode_crt>::~resptr_core<CRT,resptrcode_crt>
PUBLIC	??4?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAEAAV0@ABV0@@Z ; resptr_core<CRT,resptrcode_crt>::operator=
PUBLIC	??C?$resptr_core@VCRT@@Uresptrcode_crt@@@@QBEPAVCRT@@XZ ; resptr_core<CRT,resptrcode_crt>::operator->
PUBLIC	?phase_distortion@CRenderTarget@@AAEXXZ		; CRenderTarget::phase_distortion
PUBLIC	?set@TL_2c3uv@@QAEXMMIIMMMMMM@Z			; TL_2c3uv::set
PUBLIC	?Perform@CRenderTarget@@AAEHXZ			; CRenderTarget::Perform
PUBLIC	?NeedPostProcess@CRenderTarget@@AAEHXZ		; CRenderTarget::NeedPostProcess
PUBLIC	?calc_tc_duality_ss@CRenderTarget@@AAEXAAU?$_vector2@M@@000@Z ; CRenderTarget::calc_tc_duality_ss
PUBLIC	?calc_tc_noise@CRenderTarget@@AAEXAAU?$_vector2@M@@0@Z ; CRenderTarget::calc_tc_noise
PUBLIC	??1CRenderTarget@@UAE@XZ			; CRenderTarget::~CRenderTarget
PUBLIC	?Create@CRenderTarget@@AAEHXZ			; CRenderTarget::Create
PUBLIC	??_GCRenderTarget@@UAEPAXI@Z			; CRenderTarget::`scalar deleting destructor'
PUBLIC	?Begin@CRenderTarget@@QAEXXZ			; CRenderTarget::Begin
PUBLIC	?End@CRenderTarget@@QAEXXZ			; CRenderTarget::End
PUBLIC	??0CRenderTarget@@QAE@XZ			; CRenderTarget::CRenderTarget
EXTRN	??_ECRenderTarget@@UAEPAXI@Z:PROC		; CRenderTarget::`vector deleting destructor'
;	COMDAT ?$TSS0@?1??End@CRenderTarget@@QAEXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??End@CRenderTarget@@QAEXXZ@4HA DD 01H DUP (?)	; `CRenderTarget::End'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?s_brightness@?1??End@CRenderTarget@@QAEXXZ@4Vshared_str@@A
_BSS	SEGMENT
?s_brightness@?1??End@CRenderTarget@@QAEXXZ@4Vshared_str@@A DD 01H DUP (?) ; `CRenderTarget::End'::`2'::s_brightness
_BSS	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
_TEXT	SEGMENT
$T1 = -4						; size = 4
??0CRenderTarget@@QAE@XZ PROC				; CRenderTarget::CRenderTarget
; _this$ = ecx

; 10   : {

	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 62   : 						resptr_core		(T * p, bool add_ref = true) 					{	p_ = p;	if(add_ref)	_inc(); }

	mov	DWORD PTR $T1[esp+12], 0

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [edi+24], 0

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	lea	ecx, DWORD PTR [edi+24]

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [edi+28], 0
	mov	DWORD PTR [edi+36], 0
	mov	DWORD PTR [edi+40], 0
	mov	DWORD PTR [edi+44], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 10   : {

	mov	DWORD PTR [edi], OFFSET ??_7CRenderTarget@@6B@

; 11   : 	bAvailable			= FALSE;

	mov	DWORD PTR [edi+4], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T1[esp+12]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	mov	DWORD PTR [edi+24], 0

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 32   : 	bAvailable			= Create	();

	mov	ecx, edi
	mov	DWORD PTR [edi+104], 0
	mov	DWORD PTR [edi+32], 0
	mov	DWORD PTR [edi+60], 0
	mov	DWORD PTR [edi+64], 0
	mov	DWORD PTR [edi+76], 0
	mov	DWORD PTR [edi+68], 0
	mov	DWORD PTR [edi+72], 0
	mov	DWORD PTR [edi+84], 1103626240		; 41c80000H
	mov	DWORD PTR [edi+80], 1065353216		; 3f800000H
	mov	DWORD PTR [edi+48], 0
	mov	DWORD PTR [edi+52], 0
	mov	DWORD PTR [edi+56], 0
	mov	DWORD PTR [edi+88], 8355711		; 007f7f7fH
	mov	DWORD PTR [edi+92], 5592405		; 00555555H
	mov	DWORD PTR [edi+96], 0
	call	?Create@CRenderTarget@@AAEHXZ		; CRenderTarget::Create

; 33   : 	Msg					("* SSample: %s",bAvailable?"enabled":"disabled");

	test	eax, eax
	mov	DWORD PTR [edi+4], eax
	mov	edx, OFFSET ??_C@_08BEHKFNNO@disabled@
	mov	ecx, OFFSET ??_C@_07MHHIKOPA@enabled@
	cmove	ecx, edx
	push	ecx
	push	OFFSET ??_C@_0O@HCJBNNCF@?$CK?5SSample?3?5?$CFs@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 8

; 34   : }

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ecx
	ret	0
??0CRenderTarget@@QAE@XZ ENDP				; CRenderTarget::CRenderTarget
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\fixedmap.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
_TEXT	SEGMENT
tv1745 = -84						; size = 4
_th$1 = -84						; size = 4
$T2 = -80						; size = 4
tv1743 = -80						; size = 4
__real@3f800000$1$ = -76				; size = 4
tv1735 = -76						; size = 4
_tw$3 = -76						; size = 4
_a$4 = -76						; size = 4
_a$5 = -76						; size = 4
_du$1$ = -72						; size = 4
_dv$1$ = -68						; size = 4
__h$ = -64						; size = 4
tv1719 = -60						; size = 4
__v$1$ = -56						; size = 4
__u$1$ = -52						; size = 4
__v$1$ = -48						; size = 4
__w$ = -44						; size = 4
__u$1$ = -40						; size = 4
tv1991 = -40						; size = 4
tv1989 = -40						; size = 4
tv1987 = -40						; size = 4
tv1985 = -40						; size = 4
$T6 = -40						; size = 4
_p_brightness$1$ = -36					; size = 4
tv1874 = -36						; size = 4
tv1872 = -36						; size = 4
tv1870 = -36						; size = 4
_Offset$ = -32						; size = 4
_n0$ = -28						; size = 8
_data$7 = -20						; size = 16
_n1$ = -20						; size = 8
?End@CRenderTarget@@QAEXXZ PROC				; CRenderTarget::End
; _this$ = ecx

; 224  : 	if (g_pGamePersistent)	g_pGamePersistent->OnRenderPPUI_main	()			;	// PP-UI

	mov	eax, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A
	sub	esp, 84					; 00000054H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@End
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+24]
$LN3@End:

; 225  : 
; 226  : 	// find if distortion is needed at all
; 227  : 	BOOL	bPerform	= Perform				()	;

	mov	ecx, edi
	call	?Perform@CRenderTarget@@AAEHXZ		; CRenderTarget::Perform

; 228  : 	BOOL	bDistort	= RImplementation.o.distortion;
; 229  : 	bool	_menu_pp	= g_pGamePersistent?g_pGamePersistent->OnRenderPPUI_query():false;

	mov	ecx, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A
	mov	ebp, eax
	mov	esi, DWORD PTR ?RImplementation@@3VCRender@@A+628
	shr	esi, 1
	and	esi, 1
	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN8@End
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	call	eax
	jmp	SHORT $LN9@End
$LN8@End:
	xor	al, al
$LN9@End:

; 230  : 	if ((0==RImplementation.mapDistort.size()) && !_menu_pp) 	bDistort	= FALSE;

	cmp	DWORD PTR ?RImplementation@@3VCRender@@A+392, 0
	jne	SHORT $LN4@End
	test	al, al
	jne	SHORT $LN4@End
	xor	esi, esi

; 231  : 	if (bDistort)		phase_distortion		();

	jmp	$LN15@End
$LN4@End:
	test	esi, esi
	je	$LN15@End

; 279  : 	frame_distort								= Device.dwFrame;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A

; 280  : 	RCache.set_RT								(RT_distort->pRT);

	push	0
	mov	eax, DWORD PTR [eax+244]
	mov	DWORD PTR [edi+100], eax
	mov	eax, DWORD PTR [edi+28]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	DWORD PTR [eax+16]
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 281  : 	RCache.set_ZB								(ZB);

	push	DWORD PTR [edi+32]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_ZB@CBackend@@QAEXPAUIDirect3DSurface9@@@Z

; 282  : 	RCache.set_CullMode							(CULL_CCW);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 266  : 	if (cull_mode != _mode) { cull_mode = _mode;			CHK_DX(HW.pDevice->SetRenderState(D3DRS_CULLMODE, _mode)); }

	cmp	DWORD PTR [ecx+8916], 3
	je	SHORT $LN18@End
	mov	DWORD PTR [ecx+8916], 3
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	3
	push	22					; 00000016H
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+228]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
$LN18@End:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 283  : 	RCache.set_ColorWriteEnable					( );

	push	15					; 0000000fH
	call	DWORD PTR __imp_?set_ColorWriteEnable@CBackend@@QAEXI@Z

; 284  : 	CHK_DX(HW.pDevice->Clear					( 0L, NULL, D3DCLEAR_TARGET, color_rgba(127,127,127,127), 1.0f, 0L));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	fld1
	push	0
	mov	eax, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	fstp	DWORD PTR [esp]
	push	2139062143				; 7f7f7f7fH
	push	1
	push	0
	push	0
	push	eax
	call	DWORD PTR [ecx+172]

; 285  : 	
; 286  : 	if(g_pGameLevel && g_pGamePersistent && !g_pGamePersistent->OnRenderPPUI_query() )

	mov	eax, DWORD PTR __imp_?g_pGameLevel@@3PAVIGame_Level@@A
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN237@End
	mov	eax, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN237@End
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	call	eax
	test	al, al
	jne	SHORT $LN237@End
; File I:\Vitalya\mine\NSProjectX\xrCore\fixedmap.h

; 209  : 	{ if (pool) recurseRL(nodes,CB);  }

	cmp	DWORD PTR ?RImplementation@@3VCRender@@A+392, 0
	je	SHORT $LN237@End
	mov	ebx, DWORD PTR ?RImplementation@@3VCRender@@A+388

; 83   : 		if (N->right)	recurseRL(N->right,CB);

	mov	eax, DWORD PTR [ebx+88]
	test	eax, eax
	je	SHORT $LN30@End
	push	ecx
	push	eax
	mov	ecx, OFFSET ?RImplementation@@3VCRender@@A+388
	call	?recurseRL@?$FixedMAP@MU_MatrixItemS@R_dsgraph@@Udoug_lea_allocator@@@@AAEXPAUTNode@1@P6IX0@Z@Z ; FixedMAP<float,R_dsgraph::_MatrixItemS,doug_lea_allocator>::recurseRL
$LN30@End:

; 84   : 		CB(N);

	mov	ecx, ebx
	call	?sorted_L1@@YIXPAUTNode@?$FixedMAP@MU_MatrixItemS@R_dsgraph@@Udoug_lea_allocator@@@@@Z ; sorted_L1

; 85   : 		if (N->left)	recurseRL(N->left,CB);

	mov	eax, DWORD PTR [ebx+84]
	test	eax, eax
	je	SHORT $LN237@End
	push	ecx
	push	eax
	mov	ecx, OFFSET ?RImplementation@@3VCRender@@A+388
	call	?recurseRL@?$FixedMAP@MU_MatrixItemS@R_dsgraph@@Udoug_lea_allocator@@@@AAEXPAUTNode@1@P6IX0@Z@Z ; FixedMAP<float,R_dsgraph::_MatrixItemS,doug_lea_allocator>::recurseRL
$LN237@End:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 291  : 	if (g_pGamePersistent)	g_pGamePersistent->OnRenderPPUI_PP()	;	// PP-UI

	mov	eax, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A
	mov	DWORD PTR ?RImplementation@@3VCRender@@A+392, 0
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN15@End
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+28]
$LN15@End:

; 232  : 
; 233  : 	// combination/postprocess
; 234  : 	RCache.set_RT		(HW.pBaseRT);

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	0
	push	DWORD PTR [eax+12]
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 235  : 	RCache.set_ZB		(HW.pBaseZB);

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	DWORD PTR [eax+16]
	call	DWORD PTR __imp_?set_ZB@CBackend@@QAEXPAUIDirect3DSurface9@@@Z

; 236  : 	curWidth			= Device.dwWidth;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [eax+256]
	mov	DWORD PTR [edi+16], eax

; 237  : 	curHeight			= Device.dwHeight;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [eax+260]
	mov	DWORD PTR [edi+20], eax

; 238  : 	
; 239  : 	if (!bPerform)		return;

	test	ebp, ebp
	je	$LN1@End

; 240  : 	RCache.set_Shader	(bDistort ? s_postprocess_D : s_postprocess );

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	add	esi, 9
	push	0
	lea	eax, DWORD PTR [edi+esi*4]
	push	eax
	call	DWORD PTR __imp_?set_Shader@CBackend@@QAEXAAV?$resptr_core@UShader@@Uresptrcode_shader@@@@I@Z

; 242  : 	int		gblend		= clampr		(iFloor((1-param_gray)*255.f),0,255);

	movss	xmm6, DWORD PTR __real@3f800000
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ecx, 158				; 0000009eH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 242  : 	int		gblend		= clampr		(iFloor((1-param_gray)*255.f),0,255);

	movss	xmm1, DWORD PTR __real@437f0000
	movaps	xmm0, xmm6
	subss	xmm0, DWORD PTR [edi+64]
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	mov	ebx, 1
	mov	edx, ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 242  : 	int		gblend		= clampr		(iFloor((1-param_gray)*255.f),0,255);

	mulss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 83   :     int a			= *(const int*)(&x);

	movss	DWORD PTR _a$5[esp+100], xmm0

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ebp, DWORD PTR _a$5[esp+100]
	mov	eax, ebp
	sar	eax, 23					; 00000017H

; 85   :     int r			= (((u32)(a) << 8) | (1U << 31)) >> exponent;

	mov	esi, ebp
	or	esi, -8388608				; ff800000H
	movzx	eax, al
	sub	ecx, eax
	shl	esi, 8
	shr	esi, cl

; 86   :     exponent		+= 31-127;

	sub	ecx, 96					; 00000060H

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	shl	edx, cl
	dec	edx
	sar	edx, 8
	and	edx, ebp
	neg	edx
	sbb	edx, edx

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	sar	ebp, 31					; 0000001fH
	inc	edx
	mov	eax, ebp
	and	eax, edx
	add	ecx, 64					; 00000040H

; 92   :         r			-=	(imask&a);

	sub	esi, eax
	sar	ecx, 31					; 0000001fH

; 93   :         r			&=	exponent;

	and	esi, ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h

; 96   : 	if		( val<_low	)	return _low; 

	mov	eax, 255				; 000000ffH
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 93   :         r			&=	exponent;

	xor	ebp, esi
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h

; 96   : 	if		( val<_low	)	return _low; 

	jge	SHORT $LN36@End
	xor	ebp, ebp
	jmp	SHORT $LN38@End
$LN36@End:

; 97   : 	else if	( val>_high )	return _high;

	cmp	ebp, eax
	cmovg	ebp, eax
$LN38@End:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 243  : 	int		nblend		= clampr		(iFloor((1-param_noise)*255.f),0,255);

	movaps	xmm0, xmm6
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ecx, 158				; 0000009eH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 243  : 	int		nblend		= clampr		(iFloor((1-param_noise)*255.f),0,255);

	subss	xmm0, DWORD PTR [edi+76]
	mulss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 83   :     int a			= *(const int*)(&x);

	movss	DWORD PTR _a$4[esp+100], xmm0

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	esi, DWORD PTR _a$4[esp+100]
	mov	eax, esi
	sar	eax, 23					; 00000017H

; 85   :     int r			= (((u32)(a) << 8) | (1U << 31)) >> exponent;

	mov	edx, esi
	or	edx, -8388608				; ff800000H
	movzx	eax, al
	sub	ecx, eax
	shl	edx, 8
	shr	edx, cl

; 86   :     exponent		+= 31-127;

	sub	ecx, 96					; 00000060H

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	shl	ebx, cl
	dec	ebx
	sar	ebx, 8
	and	ebx, esi
	neg	ebx
	sbb	ebx, ebx

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	sar	esi, 31					; 0000001fH
	inc	ebx
	mov	eax, esi
	add	ecx, 64					; 00000040H
	and	eax, ebx
	sar	ecx, 31					; 0000001fH

; 92   :         r			-=	(imask&a);

	sub	edx, eax

; 93   :         r			&=	exponent;

	and	edx, ecx
	xor	esi, edx
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h

; 96   : 	if		( val<_low	)	return _low; 

	jge	SHORT $LN44@End
	xor	esi, esi
	jmp	SHORT $LN46@End
$LN44@End:

; 97   : 	else if	( val>_high )	return _high;

	cmp	esi, 255				; 000000ffH
	mov	eax, 255				; 000000ffH
	cmovg	esi, eax
$LN46@End:
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 21   : ICF u32 subst_alpha	(u32 rgba, u32 a)				{	return rgba&~color_rgba(0,0,0,0xff)|color_rgba(0,0,0,a);}

	mov	ebx, DWORD PTR [edi+88]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 254  : 	float	_w			= float(Device.dwWidth);

	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 21   : ICF u32 subst_alpha	(u32 rgba, u32 a)				{	return rgba&~color_rgba(0,0,0,0xff)|color_rgba(0,0,0,a);}

	and	ebx, 16777215				; 00ffffffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 246  : 	u32					p_brightness	= param_color_add	;

	mov	eax, DWORD PTR [edi+96]
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	shl	esi, 24					; 00000018H

; 21   : ICF u32 subst_alpha	(u32 rgba, u32 a)				{	return rgba&~color_rgba(0,0,0,0xff)|color_rgba(0,0,0,a);}

	or	ebx, esi

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	shl	ebp, 24					; 00000018H

; 21   : ICF u32 subst_alpha	(u32 rgba, u32 a)				{	return rgba&~color_rgba(0,0,0,0xff)|color_rgba(0,0,0,a);}

	mov	esi, DWORD PTR [edi+92]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 254  : 	float	_w			= float(Device.dwWidth);

	fild	DWORD PTR [ecx+256]
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 21   : ICF u32 subst_alpha	(u32 rgba, u32 a)				{	return rgba&~color_rgba(0,0,0,0xff)|color_rgba(0,0,0,a);}

	and	esi, 16777215				; 00ffffffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 246  : 	u32					p_brightness	= param_color_add	;

	mov	DWORD PTR _p_brightness$1$[esp+100], eax

; 254  : 	float	_w			= float(Device.dwWidth);

	mov	eax, DWORD PTR [ecx+256]
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 21   : ICF u32 subst_alpha	(u32 rgba, u32 a)				{	return rgba&~color_rgba(0,0,0,0xff)|color_rgba(0,0,0,a);}

	or	esi, ebp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 254  : 	float	_w			= float(Device.dwWidth);

	test	eax, eax
	jns	SHORT $LN238@End
	fadd	DWORD PTR __real@4f800000
$LN238@End:

; 255  : 	float	_h			= float(Device.dwHeight);

	mov	ecx, DWORD PTR [ecx+260]
	mov	DWORD PTR tv1989[esp+100], ecx
	fstp	DWORD PTR __w$[esp+100]
	fild	DWORD PTR tv1989[esp+100]
	test	ecx, ecx
	jns	SHORT $LN239@End
	fadd	DWORD PTR __real@4f800000
$LN239@End:

; 119  : 	float	tw			= float(rtWidth);

	mov	eax, DWORD PTR [edi+8]

; 255  : 	float	_h			= float(Device.dwHeight);

	fstp	DWORD PTR __h$[esp+100]

; 119  : 	float	tw			= float(rtWidth);

	fild	DWORD PTR [edi+8]
	test	eax, eax
	jns	SHORT $LN240@End
	fadd	DWORD PTR __real@4f800000
$LN240@End:

; 120  : 	float	th			= float(rtHeight);

	mov	eax, DWORD PTR [edi+12]
	fstp	DWORD PTR _tw$3[esp+100]
	fild	DWORD PTR [edi+12]
	test	eax, eax
	jns	SHORT $LN241@End
	fadd	DWORD PTR __real@4f800000
$LN241@End:
	fstp	DWORD PTR _th$1[esp+100]

; 121  : 	if (rtHeight!=Device.dwHeight)	param_blur = 1.f;

	cmp	eax, ecx
	je	SHORT $LN236@End
	mov	DWORD PTR [edi+60], 1065353216		; 3f800000H
	movaps	xmm7, xmm6
	movss	DWORD PTR $T2[esp+100], xmm6
	jmp	SHORT $LN70@End
$LN236@End:
	movss	xmm7, DWORD PTR [edi+60]
	movss	DWORD PTR $T2[esp+100], xmm7
$LN70@End:

; 122  : 	Fvector2			shift,p0,p1;
; 123  : 	shift.set			(.5f/tw, .5f/th);

	movss	xmm4, DWORD PTR _tw$3[esp+100]

; 256  : 	
; 257  : 	Fvector2			n0,n1,r0,r1,l0,l1;
; 258  : 	calc_tc_duality_ss	(r0,r1,l0,l1);
; 259  : 	calc_tc_noise		(n0,n1);

	lea	eax, DWORD PTR _n1$[esp+100]

; 123  : 	shift.set			(.5f/tw, .5f/th);

	movss	xmm3, DWORD PTR _th$1[esp+100]
	movaps	xmm2, xmm6
	divss	xmm2, xmm4

; 256  : 	
; 257  : 	Fvector2			n0,n1,r0,r1,l0,l1;
; 258  : 	calc_tc_duality_ss	(r0,r1,l0,l1);
; 259  : 	calc_tc_noise		(n0,n1);

	push	eax
	lea	eax, DWORD PTR _n0$[esp+104]
	mov	ecx, edi
	push	eax

; 123  : 	shift.set			(.5f/tw, .5f/th);

	divss	xmm6, xmm3
	movss	xmm5, DWORD PTR __real@3f000000
	movaps	xmm1, xmm2
	mulss	xmm1, xmm5

; 126  : 	p1.set				((tw+.5f)/tw, (th+.5f)/th ).add	(shift);

	addss	xmm4, xmm5
	movaps	xmm0, xmm6
	movss	DWORD PTR __real@3f800000$1$[esp+108], xmm6
	mulss	xmm0, xmm5
	addss	xmm3, xmm5
	movaps	xmm6, xmm1
	mulss	xmm4, xmm2
	mulss	xmm6, xmm7
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 32   : 	IC SelfRef mul(const T s)						{ x*=s; y*=s;					return *this;	}

	movaps	xmm7, xmm0
	mulss	xmm7, DWORD PTR $T2[esp+108]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 126  : 	p1.set				((tw+.5f)/tw, (th+.5f)/th ).add	(shift);

	mulss	xmm3, DWORD PTR __real@3f800000$1$[esp+108]
	movss	DWORD PTR tv1745[esp+108], xmm6
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	addss	xmm6, xmm1
	movss	xmm2, DWORD PTR tv1745[esp+108]

; 29   : 	IC SelfRef add(const Self &p)					{ x+=p.x; y+=p.y;				return *this;	}

	movaps	xmm1, xmm7
	addss	xmm1, xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 129  : 	float	shift_u		= param_duality_h*.5f;

	movss	xmm0, DWORD PTR [edi+68]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	addss	xmm2, xmm4
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 129  : 	float	shift_u		= param_duality_h*.5f;

	mulss	xmm0, xmm5
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 29   : 	IC SelfRef add(const Self &p)					{ x+=p.x; y+=p.y;				return *this;	}

	addss	xmm7, xmm3

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR tv1719[esp+108], xmm6

; 29   : 	IC SelfRef add(const Self &p)					{ x+=p.x; y+=p.y;				return *this;	}

	movss	DWORD PTR tv1743[esp+108], xmm1
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 130  : 	float	shift_v		= param_duality_v*.5f;

	movss	xmm1, DWORD PTR [edi+72]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR tv1745[esp+108], xmm2
	subss	xmm2, xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 130  : 	float	shift_v		= param_duality_v*.5f;

	mulss	xmm1, xmm5
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 29   : 	IC SelfRef add(const Self &p)					{ x+=p.x; y+=p.y;				return *this;	}

	movss	DWORD PTR tv1735[esp+108], xmm7

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR __u$1$[esp+108], xmm2
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 132  : 	r0.set(p0.x,p0.y);					r1.set(p1.x-shift_u,p1.y-shift_v);

	movaps	xmm2, xmm7
	subss	xmm2, xmm1
	movss	DWORD PTR __v$1$[esp+108], xmm2
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movaps	xmm2, xmm6
	addss	xmm2, xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 133  : 	l0.set(p0.x+shift_u,p0.y+shift_v);	l1.set(p1.x,p1.y);

	movss	xmm0, DWORD PTR tv1743[esp+108]
	addss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR __u$1$[esp+108], xmm2
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 133  : 	l0.set(p0.x+shift_u,p0.y+shift_v);	l1.set(p1.x,p1.y);

	movss	DWORD PTR __v$1$[esp+108], xmm0

; 256  : 	
; 257  : 	Fvector2			n0,n1,r0,r1,l0,l1;
; 258  : 	calc_tc_duality_ss	(r0,r1,l0,l1);
; 259  : 	calc_tc_noise		(n0,n1);

	call	?calc_tc_noise@CRenderTarget@@AAEXAAU?$_vector2@M@@0@Z ; CRenderTarget::calc_tc_noise
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	eax, DWORD PTR [edi+44]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 263  : 	TL_2c3uv* pv		= (TL_2c3uv*) RCache.Vertex.Lock	(4,g_postprocess.stride(),Offset);

	lea	ecx, DWORD PTR _Offset$[esp+100]
	movss	xmm0, DWORD PTR ?ps_r1_pps_u@@3MA
	push	ecx
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	DWORD PTR [eax+20]
	movss	DWORD PTR _du$1$[esp+108], xmm0
	movss	xmm0, DWORD PTR ?ps_r1_pps_v@@3MA
	push	4
	movss	DWORD PTR _dv$1$[esp+112], xmm0
	call	DWORD PTR __imp_?Lock@_VertexStream@@QAEPAXIIAAI@Z

; 264  : 	pv->set(du+0,			dv+float(_h),	p_color, p_gray, r0.x, r1.y, l0.x, l1.y, n0.x, n1.y);	pv++;

	movss	xmm7, DWORD PTR _dv$1$[esp+100]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	xmm0, DWORD PTR tv1735[esp+100]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 264  : 	pv->set(du+0,			dv+float(_h),	p_color, p_gray, r0.x, r1.y, l0.x, l1.y, n0.x, n1.y);	pv++;

	movaps	xmm3, xmm7
	addss	xmm3, DWORD PTR __h$[esp+100]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm6, DWORD PTR _du$1$[esp+100]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	xmm4, DWORD PTR tv1719[esp+100]
	movss	xmm5, DWORD PTR __v$1$[esp+100]
	movss	xmm1, DWORD PTR __u$1$[esp+100]
	movss	DWORD PTR [eax+36], xmm0
	movss	xmm0, DWORD PTR _n0$[esp+100]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [eax], xmm6
	movss	DWORD PTR [eax+4], xmm3
	mov	DWORD PTR [eax+8], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+12], 1065353216		; 3f800000H
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 214  : 		color0 = c0; 

	mov	DWORD PTR [eax+16], ebx

; 215  : 		color1 = c1;

	mov	DWORD PTR [eax+20], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR [eax+24], xmm4
	movss	DWORD PTR [eax+28], xmm5
	movss	DWORD PTR [eax+32], xmm1
	movss	xmm2, DWORD PTR _n1$[esp+104]
	movss	DWORD PTR [eax+40], xmm0
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [eax+48], xmm6
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 266  : 	pv->set(du+float(_w),	dv+float(_h),	p_color, p_gray, r1.x, r1.y, l1.x, l1.y, n1.x, n1.y);	pv++;

	addss	xmm6, DWORD PTR __w$[esp+100]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR [eax+72], xmm4
	movss	xmm4, DWORD PTR tv1743[esp+100]
	movss	DWORD PTR [eax+88], xmm0
	movss	xmm0, DWORD PTR tv1735[esp+100]
	movss	DWORD PTR [eax+44], xmm2
	movss	DWORD PTR [eax+76], xmm4
	movss	xmm4, DWORD PTR __v$1$[esp+100]
	movss	DWORD PTR [eax+80], xmm1
	movss	xmm1, DWORD PTR _n0$[esp+104]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [eax+100], xmm3
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	xmm3, DWORD PTR __u$1$[esp+100]
	movss	DWORD PTR [eax+124], xmm5
	movss	xmm5, DWORD PTR tv1745[esp+100]
	movss	DWORD PTR [eax+132], xmm0
	movss	xmm0, DWORD PTR _n1$[esp+100]
	movss	DWORD PTR [eax+140], xmm2
	movss	xmm2, DWORD PTR tv1743[esp+100]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [eax+52], xmm7
	mov	DWORD PTR [eax+56], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+60], 1065353216		; 3f800000H
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 214  : 		color0 = c0; 

	mov	DWORD PTR [eax+64], ebx

; 215  : 		color1 = c1;

	mov	DWORD PTR [eax+68], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR [eax+84], xmm4
	movss	DWORD PTR [eax+92], xmm1
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [eax+96], xmm6
	mov	DWORD PTR [eax+104], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+108], 1065353216		; 3f800000H
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 214  : 		color0 = c0; 

	mov	DWORD PTR [eax+112], ebx

; 215  : 		color1 = c1;

	mov	DWORD PTR [eax+116], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR [eax+120], xmm3
	movss	DWORD PTR [eax+128], xmm5
	movss	DWORD PTR [eax+136], xmm0
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [eax+144], xmm6
	movss	DWORD PTR [eax+148], xmm7
	mov	DWORD PTR [eax+152], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+156], 1065353216		; 3f800000H
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 214  : 		color0 = c0; 

	mov	DWORD PTR [eax+160], ebx

; 215  : 		color1 = c1;

	mov	DWORD PTR [eax+164], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR [eax+168], xmm3
	movss	DWORD PTR [eax+172], xmm2
	movss	DWORD PTR [eax+176], xmm5
	movss	DWORD PTR [eax+180], xmm4
	movss	DWORD PTR [eax+184], xmm0
	movss	DWORD PTR [eax+188], xmm1
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	eax, DWORD PTR [edi+44]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 268  : 	RCache.Vertex.Unlock									(4,g_postprocess.stride());

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	DWORD PTR [eax+20]
	push	4
	call	DWORD PTR __imp_?Unlock@_VertexStream@@QAEXII@Z

; 271  : 	static	shared_str	s_brightness	= "c_brightness";

	mov	eax, DWORD PTR fs:__tls_array
	mov	ecx, DWORD PTR __tls_index
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ?$TSS0@?1??End@CRenderTarget@@QAEXXZ@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[ecx]
	jg	$LN246@End
$LN2@End:

; 272  : 	RCache.set_c		(s_brightness,color_get_R(p_brightness)/255.f,color_get_G(p_brightness)/255.f,color_get_B(p_brightness)/255.f,0);

	mov	ebx, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 207  : 	ICF	void						set_c(shared_str& n, float x, float y, float z, float w) { if (ctable)	set_c(&*ctable->get(n), x, y, z, w); }

	mov	ecx, DWORD PTR [ebx+8864]
	test	ecx, ecx
	je	$LN156@End
	push	OFFSET ?s_brightness@?1??End@CRenderTarget@@QAEXXZ@4Vshared_str@@A
	lea	eax, DWORD PTR $T6[esp+104]
	push	eax
	call	DWORD PTR __imp_?get@R_constant_table@@QAE?AV?$resptr_core@UR_constant@@V?$resptr_base@UR_constant@@@@@@AAVshared_str@@@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	esi, DWORD PTR [eax]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend.h

; 191  : 	ICF	void						set_c(R_constant* C, float x, float y, float z, float w) { if (C)		constants.set(C, x, y, z, w); }

	test	esi, esi
	je	$LN169@End
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 17   : ICF	u32	color_get_R	(u32 rgba)						{	return (((rgba) >> 16) & 0xff);	}

	mov	ecx, DWORD PTR _p_brightness$1$[esp+100]
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	movzx	eax, al
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 272  : 	RCache.set_c		(s_brightness,color_get_R(p_brightness)/255.f,color_get_G(p_brightness)/255.f,color_get_B(p_brightness)/255.f,0);

	mov	DWORD PTR tv1874[esp+100], eax
	fild	DWORD PTR tv1874[esp+100]
	test	eax, eax
	jns	SHORT $LN242@End
	fadd	DWORD PTR __real@4f800000
$LN242@End:
	fld	DWORD PTR __real@3b808081
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 18   : ICF	u32	color_get_G	(u32 rgba)						{	return (((rgba) >> 8) & 0xff);	}

	mov	eax, ecx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 272  : 	RCache.set_c		(s_brightness,color_get_R(p_brightness)/255.f,color_get_G(p_brightness)/255.f,color_get_B(p_brightness)/255.f,0);

	fmul	ST(1), ST(0)
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	fxch	ST(1)
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 18   : ICF	u32	color_get_G	(u32 rgba)						{	return (((rgba) >> 8) & 0xff);	}

	shr	eax, 8
	movzx	eax, al
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 272  : 	RCache.set_c		(s_brightness,color_get_R(p_brightness)/255.f,color_get_G(p_brightness)/255.f,color_get_B(p_brightness)/255.f,0);

	mov	DWORD PTR tv1872[esp+100], eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	fstp	DWORD PTR _data$7[esp+100]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 272  : 	RCache.set_c		(s_brightness,color_get_R(p_brightness)/255.f,color_get_G(p_brightness)/255.f,color_get_B(p_brightness)/255.f,0);

	fild	DWORD PTR tv1872[esp+100]
	test	eax, eax
	jns	SHORT $LN243@End
	fadd	DWORD PTR __real@4f800000
$LN243@End:
	fmul	ST(0), ST(1)
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 19   : ICF	u32	color_get_B	(u32 rgba)						{	return ((rgba) & 0xff);			}

	movzx	eax, cl
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 272  : 	RCache.set_c		(s_brightness,color_get_R(p_brightness)/255.f,color_get_G(p_brightness)/255.f,color_get_B(p_brightness)/255.f,0);

	mov	DWORD PTR tv1870[esp+100], eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	fstp	DWORD PTR _data$7[esp+104]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 272  : 	RCache.set_c		(s_brightness,color_get_R(p_brightness)/255.f,color_get_G(p_brightness)/255.f,color_get_B(p_brightness)/255.f,0);

	fild	DWORD PTR tv1870[esp+100]
	test	eax, eax
	jns	SHORT $LN244@End
	fadd	DWORD PTR __real@4f800000
$LN244@End:
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	movzx	eax, WORD PTR [esi+10]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 272  : 	RCache.set_c		(s_brightness,color_get_R(p_brightness)/255.f,color_get_G(p_brightness)/255.f,color_get_B(p_brightness)/255.f,0);

	fmulp	ST(1), ST(0)
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	mov	ecx, eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	mov	DWORD PTR _data$7[esp+112], 0
	fstp	DWORD PTR _data$7[esp+108]
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 147  : 		if (C->destination & 1) { a_pixel.set(C, C->ps, A); a_pixel.b_dirty = TRUE; }

	test	al, 1
	je	SHORT $LN168@End
	lea	eax, DWORD PTR _data$7[esp+100]
	push	eax
	lea	eax, DWORD PTR [esi+12]
	push	eax
	push	esi
	lea	ecx, DWORD PTR [ebx+608]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [ebx+4720], 1
	movzx	ecx, WORD PTR [esi+10]
$LN168@End:

; 148  : 		if (C->destination & 2) { a_vertex.set(C, C->vs, A); a_vertex.b_dirty = TRUE; }

	test	cl, 2
	je	SHORT $LN169@End
	lea	eax, DWORD PTR _data$7[esp+100]
	push	eax
	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	esi
	lea	ecx, DWORD PTR [ebx+4736]
	call	?set@R_constant_array@@QAEXPAUR_constant@@AAUR_constant_load@@ABU?$_vector4@M@@@Z ; R_constant_array::set
	mov	DWORD PTR [ebx+8848], 1
$LN169@End:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T6[esp+100]
	call	?_dec@?$resptr_base@UR_constant@@@@IAEXXZ ; resptr_base<R_constant>::_dec
$LN156@End:

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	edi, DWORD PTR [edi+44]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 273  : 	RCache.set_Geometry	(g_postprocess);

	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 224  : 	set_Format(_geom->dcl._get()->dcl);

	mov	eax, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [eax+8]

; 131  : 	if (decl != _decl)

	cmp	DWORD PTR [esi+592], edx
	je	SHORT $LN221@End

; 132  : 	{
; 133  : 		PGO(Msg("PGO:v_format:%x", _decl));
; 134  : #ifdef DEBUG
; 135  : 		stat.decl++;
; 136  : #endif
; 137  : 		decl = _decl;

	mov	DWORD PTR [esi+592], edx

; 138  : 		CHK_DX(HW.pDevice->SetVertexDeclaration(decl));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+348]
$LN221@End:

; 225  : 	set_Vertices(_geom->vb, _geom->vb_stride);

	mov	ebx, DWORD PTR [edi+12]
	mov	edx, DWORD PTR [edi+20]

; 172  : 	if ((vb != _vb) || (vb_stride != _vb_stride))

	cmp	DWORD PTR [esi+596], ebx
	jne	SHORT $LN225@End
	cmp	DWORD PTR [esi+604], edx
	je	SHORT $LN224@End
$LN225@End:

; 173  : 	{
; 174  : 		PGO(Msg("PGO:VB:%x,%d", _vb, _vb_stride));
; 175  : #ifdef DEBUG
; 176  : 		stat.vb++;
; 177  : #endif
; 178  : 		vb = _vb;

	mov	DWORD PTR [esi+596], ebx

; 179  : 		vb_stride = _vb_stride;

	mov	DWORD PTR [esi+604], edx

; 180  : 		CHK_DX(HW.pDevice->SetStreamSource(0, vb, 0, vb_stride));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	push	0
	push	ebx
	mov	eax, DWORD PTR [eax+8]
	push	0
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+400]
$LN224@End:

; 226  : 	set_Indices(_geom->ib);

	mov	edx, DWORD PTR [edi+16]

; 186  : 	if (ib != _ib)

	cmp	DWORD PTR [esi+600], edx
	je	SHORT $LN228@End

; 187  : 	{
; 188  : 		PGO(Msg("PGO:IB:%x", _ib));
; 189  : #ifdef DEBUG
; 190  : 		stat.ib++;
; 191  : #endif
; 192  : 		ib = _ib;

	mov	DWORD PTR [esi+600], edx

; 193  : 		CHK_DX(HW.pDevice->SetIndices(ib));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+416]
$LN228@End:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 274  : 	RCache.Render		(D3DPT_TRIANGLELIST,Offset,0,4,0,2);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	mov	esi, DWORD PTR _Offset$[esp+100]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 202  : 	constants.flush();

	lea	ecx, DWORD PTR [eax+608]
	inc	DWORD PTR [eax+9024]
	add	DWORD PTR [eax+9020], 4
	add	DWORD PTR [eax+9016], 2
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 172  : 		if (a_pixel.b_dirty || a_vertex.b_dirty)	flush_cache();

	cmp	DWORD PTR [ecx+4112], 0
	jne	SHORT $LN234@End
	cmp	DWORD PTR [ecx+8240], 0
	je	SHORT $LN233@End
$LN234@End:
	call	DWORD PTR __imp_?flush_cache@R_constants@@QAEXXZ
$LN233@End:
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 203  : 	CHK_DX(HW.pDevice->DrawIndexedPrimitive(T, baseV, startV, countV, startI, PC));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	2
	push	0
	push	4
	mov	eax, DWORD PTR [eax+8]
	push	0
	push	esi
	push	4
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+328]
$LN1@End:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 275  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 84					; 00000054H
	ret	0
$LN246@End:

; 271  : 	static	shared_str	s_brightness	= "c_brightness";

	push	OFFSET ?$TSS0@?1??End@CRenderTarget@@QAEXXZ@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??End@CRenderTarget@@QAEXXZ@4HA, -1
	jne	$LN2@End
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	push	OFFSET ??_C@_0N@INACFBOF@c_brightness@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN143@End
	inc	DWORD PTR [eax]
	jmp	SHORT $LN143@End
$LN143@End:

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	ecx, DWORD PTR ?s_brightness@?1??End@CRenderTarget@@QAEXXZ@4Vshared_str@@A
	test	ecx, ecx
	je	SHORT $LN147@End
	dec	DWORD PTR [ecx]
	jmp	SHORT $LN147@End
$LN147@End:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 271  : 	static	shared_str	s_brightness	= "c_brightness";

	push	OFFSET ??__Fs_brightness@?1??End@CRenderTarget@@QAEXXZ@YAXXZ ; `CRenderTarget::End'::`2'::`dynamic atexit destructor for 's_brightness''
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 52   : 	void				_set		(str_c rhs) 					{	str_value* v = g_pStringContainer->dock(rhs); if (0!=v) v->dwReference++; _dec(); p_ = v;	}

	mov	DWORD PTR ?s_brightness@?1??End@CRenderTarget@@QAEXXZ@4Vshared_str@@A, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 271  : 	static	shared_str	s_brightness	= "c_brightness";

	call	_atexit
	add	esp, 4
	push	OFFSET ?$TSS0@?1??End@CRenderTarget@@QAEXXZ@4HA
	call	__Init_thread_footer
	add	esp, 4
	jmp	$LN2@End
?End@CRenderTarget@@QAEXXZ ENDP				; CRenderTarget::End
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
_TEXT	SEGMENT
?Begin@CRenderTarget@@QAEXXZ PROC			; CRenderTarget::Begin
; _this$ = ecx

; 171  : {

	push	esi
	mov	esi, ecx

; 172  : 	/*
; 173  : 	if (g_pGameLevel->IR_GetKeyState(DIK_LSHIFT))	
; 174  : 	{
; 175  : 		Msg					("[%5d]------------------------",Device.dwFrame);
; 176  : 		SHOW				(param_blur)
; 177  : 		SHOW				(param_gray)
; 178  : 		SHOW				(param_duality_h)
; 179  : 		SHOW				(param_duality_v)
; 180  : 		SHOW				(param_noise)
; 181  : 		SHOW				(param_noise_scale)
; 182  : 		SHOW				(param_noise_fps)
; 183  : 
; 184  : 		SHOWX				(param_color_base)
; 185  : 		SHOWX				(param_color_gray)
; 186  : 		SHOWX				(param_color_add)
; 187  : 	}
; 188  : 	*/
; 189  : 
; 190  : 	if (!Perform())	

	call	?Perform@CRenderTarget@@AAEHXZ		; CRenderTarget::Perform
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	0
	test	eax, eax
	jne	SHORT $LN2@Begin

; 191  : 	{
; 192  : 		// Base RT
; 193  : 		RCache.set_RT			(HW.pBaseRT);

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	DWORD PTR [eax+12]
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 194  : 		RCache.set_ZB			(HW.pBaseZB);

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	DWORD PTR [eax+16]
	call	DWORD PTR __imp_?set_ZB@CBackend@@QAEXPAUIDirect3DSurface9@@@Z

; 195  : 		curWidth				= Device.dwWidth;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [eax+256]
	mov	DWORD PTR [esi+16], eax

; 196  : 		curHeight				= Device.dwHeight;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [eax+260]

; 197  : 	} else {

	jmp	SHORT $LN3@Begin
$LN2@Begin:

; 198  : 		// Our 
; 199  : 		RCache.set_RT			(RT->pRT);

	mov	eax, DWORD PTR [esi+24]
	push	DWORD PTR [eax+16]
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 200  : 		RCache.set_ZB			(ZB);

	push	DWORD PTR [esi+32]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_ZB@CBackend@@QAEXPAUIDirect3DSurface9@@@Z

; 201  : 		curWidth				= rtWidth;

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], eax

; 202  : 		curHeight				= rtHeight;

	mov	eax, DWORD PTR [esi+12]
$LN3@Begin:

; 203  : 	}
; 204  : 	Device.Clear				();

	mov	DWORD PTR [esi+20], eax
	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	pop	esi
	jmp	DWORD PTR __imp_?Clear@CRenderDevice@@QAEXXZ
?Begin@CRenderTarget@@QAEXXZ ENDP			; CRenderTarget::Begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\render.h
;	COMDAT ??_GCRenderTarget@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRenderTarget@@UAEPAXI@Z PROC			; CRenderTarget::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ecx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 71   : {

	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	push	edi

; 72   : 	_RELEASE					(pTempZB);

	mov	ecx, DWORD PTR [esi+104]
	mov	DWORD PTR [esi], OFFSET ??_7CRenderTarget@@6B@
	test	ecx, ecx
	je	SHORT $LN5@scalar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+104], 0
$LN5@scalar:

; 73   : 	_RELEASE					(ZB);

	mov	ecx, DWORD PTR [esi+32]
	test	ecx, ecx
	je	SHORT $LN6@scalar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+32], 0
$LN6@scalar:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	lea	ecx, DWORD PTR [esi+40]
	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR [esi+40], 0
	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+36], 0
	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+44], 0
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+28], 0
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR [esi+44]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	mov	DWORD PTR [esi+24], 0

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
	mov	edi, esi
	lea	ecx, DWORD PTR [edi+40]
	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+36]
	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+28]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+24]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	test	BYTE PTR ___flags$[esp+16], 1
; File I:\Vitalya\mine\NSProjectX\xrEngine\render.h

; 125  : 	virtual ~IRender_Target() {};

	mov	eax, DWORD PTR __imp_??_7IRender_Target@@6B@
	mov	DWORD PTR [edi], eax
	je	SHORT $LN45@scalar
	push	108					; 0000006cH
	push	edi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN45@scalar:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
??_GCRenderTarget@@UAEPAXI@Z ENDP			; CRenderTarget::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 4
_a$2 = -8						; size = 4
_a$3 = -8						; size = 4
_amount$ = -8						; size = 4
_exponent$1$ = -4					; size = 4
tv780 = -4						; size = 4
tv761 = -4						; size = 4
?Create@CRenderTarget@@AAEHXZ PROC			; CRenderTarget::Create
; _this$ = ecx

; 38   : 	curWidth			= Device.dwWidth;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	sub	esp, 8
	mov	eax, DWORD PTR [eax+256]
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [edi+16], eax

; 39   : 	curHeight			= Device.dwHeight;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [eax+260]
	mov	DWORD PTR [edi+20], eax

; 40   : 
; 41   : 	// Select mode to operate in
; 42   : 	float	amount		= ps_r__Supersample?float(ps_r__Supersample):1	;

	mov	eax, DWORD PTR __imp_?ps_r__Supersample@@3HA
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN19@Create
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _amount$[esp+24], xmm0
	jmp	SHORT $LN20@Create
$LN19@Create:
	mov	DWORD PTR _amount$[esp+24], 1065353216	; 3f800000H
$LN20@Create:

; 44   : 	rtWidth				= clampr(iFloor(scale*Device.dwWidth  + .5f), 128, 2048);

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 764  :             return (float)sqrt(_X);

	fld	DWORD PTR _amount$[esp+24]
	fsqrt
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 44   : 	rtWidth				= clampr(iFloor(scale*Device.dwWidth  + .5f), 128, 2048);

	mov	eax, DWORD PTR [eax+256]
	mov	DWORD PTR tv780[esp+24], eax
	fild	DWORD PTR tv780[esp+24]
	test	eax, eax
	jns	SHORT $LN59@Create
	fadd	DWORD PTR __real@4f800000
$LN59@Create:
	fmul	ST(0), ST(1)
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ecx, 158				; 0000009eH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 44   : 	rtWidth				= clampr(iFloor(scale*Device.dwWidth  + .5f), 128, 2048);

	fld	DWORD PTR __real@3f000000
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	mov	ebp, 1
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 44   : 	rtWidth				= clampr(iFloor(scale*Device.dwWidth  + .5f), 128, 2048);

	fadd	ST(1), ST(0)
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 83   :     int a			= *(const int*)(&x);

	fxch	ST(1)
	fstp	DWORD PTR _a$3[esp+24]

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	esi, DWORD PTR _a$3[esp+24]
	mov	eax, esi
	sar	eax, 23					; 00000017H

; 85   :     int r			= (((u32)(a) << 8) | (1U << 31)) >> exponent;

	mov	ebx, esi
	movzx	eax, al
	or	ebx, -8388608				; ff800000H
	sub	ecx, eax
	shl	ebx, 8
	shr	ebx, cl

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	mov	eax, ebp
	sub	ecx, 96					; 00000060H

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	mov	edx, esi
	shl	eax, cl
	dec	eax
	sar	edx, 31					; 0000001fH
	sar	eax, 8
	and	eax, esi
	neg	eax
	sbb	eax, eax
	inc	eax
	and	eax, edx

; 92   :         r			-=	(imask&a);

	sub	ebx, eax
	lea	eax, DWORD PTR [ecx+64]
	sar	eax, 31					; 0000001fH

; 93   :         r			&=	exponent;

	and	ebx, eax
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h

; 96   : 	if		( val<_low	)	return _low; 

	mov	eax, 2048				; 00000800H
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 93   :         r			&=	exponent;

	xor	ebx, edx
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h

; 96   : 	if		( val<_low	)	return _low; 

	cmp	ebx, 128				; 00000080H
	jge	SHORT $LN30@Create
	lea	ebx, DWORD PTR [ebp+127]
	jmp	SHORT $LN32@Create
$LN30@Create:

; 97   : 	else if	( val>_high )	return _high;

	cmp	ebx, eax
	cmovg	ebx, eax
$LN32@Create:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 44   : 	rtWidth				= clampr(iFloor(scale*Device.dwWidth  + .5f), 128, 2048);

	mov	DWORD PTR [edi+8], ebx

; 45   : 	rtHeight			= clampr(iFloor(scale*Device.dwHeight + .5f), 128, 2048);

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [eax+260]
	mov	DWORD PTR tv761[esp+24], eax
	fild	DWORD PTR tv761[esp+24]
	test	eax, eax
	jns	SHORT $LN60@Create
	fadd	DWORD PTR __real@4f800000
$LN60@Create:
	fmulp	ST(2), ST(0)
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ecx, 158				; 0000009eH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 45   : 	rtHeight			= clampr(iFloor(scale*Device.dwHeight + .5f), 128, 2048);

	faddp	ST(1), ST(0)
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 83   :     int a			= *(const int*)(&x);

	fstp	DWORD PTR _a$2[esp+24]

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	esi, DWORD PTR _a$2[esp+24]
	mov	eax, esi
	sar	eax, 23					; 00000017H

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	mov	edx, esi
	movzx	eax, al
	sub	ecx, eax
	sar	edx, 31					; 0000001fH
	mov	eax, esi
	or	eax, -8388608				; ff800000H
	shl	eax, 8
	shr	eax, cl
	sub	ecx, 96					; 00000060H
	shl	ebp, cl
	dec	ebp
	mov	DWORD PTR _exponent$1$[esp+24], ecx
	sar	ebp, 8

; 92   :         r			-=	(imask&a);

	mov	ecx, eax
	and	ebp, esi
	mov	DWORD PTR $T1[esp+24], eax
	mov	eax, DWORD PTR _exponent$1$[esp+24]
	neg	ebp
	sbb	ebp, ebp
	inc	ebp
	and	ebp, edx
	lea	eax, DWORD PTR [eax+64]
	sub	ecx, ebp
	sar	eax, 31					; 0000001fH

; 93   :         r			&=	exponent;

	and	ecx, eax
	xor	ecx, edx
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h

; 96   : 	if		( val<_low	)	return _low; 

	cmp	ecx, 128				; 00000080H
	jge	SHORT $LN38@Create
	mov	ecx, 128				; 00000080H
	jmp	SHORT $LN40@Create
$LN38@Create:

; 97   : 	else if	( val>_high )	return _high;

	cmp	ecx, 2048				; 00000800H
	mov	eax, 2048				; 00000800H
	cmovg	ecx, eax
$LN40@Create:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 45   : 	rtHeight			= clampr(iFloor(scale*Device.dwHeight + .5f), 128, 2048);

	mov	DWORD PTR [edi+12], ecx

; 46   : 	while (rtWidth%2)	rtWidth	--;

	test	bl, 1
	je	SHORT $LN46@Create
$LL2@Create:
	dec	ebx
	test	bl, 1
	jne	SHORT $LL2@Create
	mov	DWORD PTR [edi+8], ebx
$LN46@Create:

; 47   : 	while (rtHeight%2)	rtHeight--;

	test	cl, 1
	je	SHORT $LN5@Create
$LL4@Create:
	dec	ecx
	test	cl, 1
	jne	SHORT $LL4@Create
	mov	ebx, DWORD PTR [edi+8]
	mov	DWORD PTR [edi+12], ecx
$LN5@Create:

; 48   : 	Msg					("* SSample: %dx%d",rtWidth,rtHeight);

	push	ecx
	push	ebx
	push	OFFSET ??_C@_0BB@MOEEHFLA@?$CK?5SSample?3?5?$CFdx?$CFd@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ

; 49   : 
; 50   : 	// Bufferts
; 51   : 	RT.create			(RTname,			rtWidth,rtHeight,HW.Caps.fTarget);

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	lea	ecx, DWORD PTR [edi+24]
	mov	esi, DWORD PTR __imp_?create@resptrcode_crt@@QAEXPBDIIW4_D3DFORMAT@@@Z
	add	esp, 12					; 0000000cH
	push	DWORD PTR [eax+36]
	push	DWORD PTR [edi+12]
	push	DWORD PTR [edi+8]
	push	OFFSET ??_C@_0BD@HKPIJJFP@$user$rendertarget@
	call	esi

; 52   : 	RT_distort.create	(RTname_distort,	rtWidth,rtHeight,HW.Caps.fTarget);

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	lea	ecx, DWORD PTR [edi+28]
	push	DWORD PTR [eax+36]
	push	DWORD PTR [edi+12]
	push	DWORD PTR [edi+8]
	push	OFFSET ??_C@_0O@LGKJCIJG@$user$distort@
	call	esi

; 53   : 	if ((rtHeight!=Device.dwHeight) || (rtWidth!=Device.dwWidth))	{

	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [edi+12]
	mov	ebx, DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
	cmp	eax, DWORD PTR [ecx+260]
	jne	SHORT $LN8@Create
	mov	eax, DWORD PTR [edi+8]
	cmp	eax, DWORD PTR [ecx+256]
	jne	SHORT $LN8@Create

; 55   : 	} else {
; 56   : 		ZB			= HW.pBaseZB;

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edi+32], ecx

; 57   : 		ZB->AddRef	();

	push	ecx
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
	jmp	SHORT $LN11@Create
$LN8@Create:

; 54   : 		R_CHK		(HW.pDevice->CreateDepthStencilSurface	(rtWidth,rtHeight,HW.Caps.fDepth,D3DMULTISAMPLE_NONE,0,TRUE,&ZB,NULL));

	mov	ecx, DWORD PTR __imp_?HW@@3VCHW@@A
	lea	eax, DWORD PTR [edi+32]
	push	0
	push	eax
	push	1
	mov	edx, DWORD PTR [ecx+8]
	push	0
	push	0
	push	DWORD PTR [ecx+40]
	mov	esi, DWORD PTR [edx]
	push	DWORD PTR [edi+12]
	push	DWORD PTR [edi+8]
	push	edx
	call	DWORD PTR [esi+116]
	cmp	BYTE PTR ?ignore_always@?8??Create@CRenderTarget@@AAEHXZ@4_NA, 0
	jne	SHORT $LN11@Create
	test	eax, eax
	jns	SHORT $LN11@Create
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?8??Create@CRenderTarget@@AAEHXZ@4_NA
	push	OFFSET ??_C@_0BG@HPOFENMC@CRenderTarget?3?3Create@
	push	54					; 00000036H
	push	OFFSET ??_C@_0EP@KIEBDFAP@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0GM@PJIBGLIO@HW?4pDevice?9?$DOCreateDepthStencilS@
	push	eax
	call	ebx
$LN11@Create:

; 58   : 	}
; 59   : 
; 60   : 	// Temp ZB, used by some of the shadowing code
; 61   : 	R_CHK	(HW.pDevice->CreateDepthStencilSurface	(512,512,HW.Caps.fDepth,D3DMULTISAMPLE_NONE,0,TRUE,&pTempZB,NULL));

	mov	ecx, DWORD PTR __imp_?HW@@3VCHW@@A
	lea	eax, DWORD PTR [edi+104]
	push	0
	push	eax
	push	1
	mov	edx, DWORD PTR [ecx+8]
	push	0
	push	0
	push	DWORD PTR [ecx+40]
	mov	esi, DWORD PTR [edx]
	push	512					; 00000200H
	push	512					; 00000200H
	push	edx
	call	DWORD PTR [esi+116]
	cmp	BYTE PTR ?ignore_always@?P@??Create@CRenderTarget@@AAEHXZ@4_NA, 0
	jne	SHORT $LN9@Create
	test	eax, eax
	jns	SHORT $LN9@Create
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?P@??Create@CRenderTarget@@AAEHXZ@4_NA
	push	OFFSET ??_C@_0BG@HPOFENMC@CRenderTarget?3?3Create@
	push	61					; 0000003dH
	push	OFFSET ??_C@_0EP@KIEBDFAP@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0GI@LLCKMKIM@HW?4pDevice?9?$DOCreateDepthStencilS@
	push	eax
	call	ebx
$LN9@Create:

; 62   : 
; 63   : 	// Shaders and stream
; 64   : 	s_postprocess.create				("postprocess");

	mov	esi, DWORD PTR __imp_?create@resptrcode_shader@@QAEXPBD000@Z
	lea	ecx, DWORD PTR [edi+36]
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0M@HNLHGNFF@postprocess@
	call	esi

; 65   : 	if (RImplementation.o.distortion)	s_postprocess_D.create("postprocess_d");

	test	BYTE PTR ?RImplementation@@3VCRender@@A+628, 2
	je	SHORT $LN17@Create
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0O@JCLOAOGN@postprocess_d@
	lea	ecx, DWORD PTR [edi+40]
	call	esi
$LN17@Create:

; 66   : 	g_postprocess.create				(D3DFVF_XYZRHW|D3DFVF_DIFFUSE|D3DFVF_SPECULAR|D3DFVF_TEX3,RCache.Vertex.Buffer(),RCache.QuadIB);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [edi+44]
	push	DWORD PTR [eax+40]
	push	DWORD PTR [eax]
	push	964					; 000003c4H
	call	DWORD PTR __imp_?create@resptrcode_geom@@QAEXIPAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z

; 67   : 	return	RT->valid() && RT_distort->valid();

	mov	ecx, DWORD PTR [edi+24]
	call	DWORD PTR __imp_?valid@CRT@@QAEHXZ
	test	eax, eax
	je	SHORT $LN21@Create
	mov	ecx, DWORD PTR [edi+28]
	call	DWORD PTR __imp_?valid@CRT@@QAEHXZ
	test	eax, eax
	je	SHORT $LN21@Create

; 68   : }

	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	add	esp, 8
	ret	0
$LN21@Create:
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
	add	esp, 8
	ret	0
?Create@CRenderTarget@@AAEHXZ ENDP			; CRenderTarget::Create
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\render.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
_TEXT	SEGMENT
??1CRenderTarget@@UAE@XZ PROC				; CRenderTarget::~CRenderTarget
; _this$ = ecx

; 71   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	push	edi

; 72   : 	_RELEASE					(pTempZB);

	mov	ecx, DWORD PTR [esi+104]
	mov	DWORD PTR [esi], OFFSET ??_7CRenderTarget@@6B@
	test	ecx, ecx
	je	SHORT $LN2@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+104], 0
$LN2@CRenderTar:

; 73   : 	_RELEASE					(ZB);

	mov	ecx, DWORD PTR [esi+32]
	test	ecx, ecx
	je	SHORT $LN3@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+32], 0
$LN3@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	lea	ecx, DWORD PTR [esi+40]
	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR [esi+40], 0
	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [esi+36], 0
	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+44], 0
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+28], 0
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR [esi+44]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	mov	DWORD PTR [esi+24], 0

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
	mov	edi, esi
	lea	ecx, DWORD PTR [edi+40]
	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+36]
	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+28]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+24]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\xrEngine\render.h

; 125  : 	virtual ~IRender_Target() {};

	mov	eax, DWORD PTR __imp_??_7IRender_Target@@6B@
	mov	DWORD PTR [edi], eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 79   : }

	pop	ecx
	ret	0
??1CRenderTarget@@UAE@XZ ENDP				; CRenderTarget::~CRenderTarget
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
_TEXT	SEGMENT
tv463 = -4						; size = 4
tv461 = -4						; size = 4
tv459 = -4						; size = 4
tv457 = -4						; size = 4
tv453 = -4						; size = 4
tv449 = -4						; size = 4
_th$1$ = -4						; size = 4
_a$1 = -4						; size = 4
_a$2 = -4						; size = 4
_p0$ = 8						; size = 4
_p1$ = 12						; size = 4
?calc_tc_noise@CRenderTarget@@AAEXAAU?$_vector2@M@@0@Z PROC ; CRenderTarget::calc_tc_noise
; _this$ = ecx

; 82   : {

	push	ecx
	push	ebx
	mov	ebx, ecx

; 94   : 	if (im_noise_time<0)			{

	xorps	xmm2, xmm2
	push	ebp
	push	esi
	push	edi
	movss	xmm0, DWORD PTR [ebx+80]
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 105  :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	edi, 158				; 0000009eH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 87   : 	u32			tw					= iCeil(256*param_noise_scale+EPS_S);

	mulss	xmm0, DWORD PTR __real@43800000
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 105  :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ecx, edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 87   : 	u32			tw					= iCeil(256*param_noise_scale+EPS_S);

	addss	xmm0, DWORD PTR __real@33d6bf95
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 104  :     int a			= (*(const int*)(&x));

	movss	DWORD PTR _a$2[esp+20], xmm0

; 105  :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	esi, DWORD PTR _a$2[esp+20]
	mov	eax, esi
	sar	eax, 23					; 00000017H

; 106  :     int r			= (((u32)(a) << 8) | (1U << 31)) >> exponent;

	mov	ebp, esi
	movzx	eax, al
	or	ebp, -8388608				; ff800000H
	sub	ecx, eax
	shl	ebp, 8
	shr	ebp, cl

; 110  :         exponent	-=	(31-127)+32;
; 111  :         exponent	>>=	31;
; 112  :         a			=	~((a-1)>>31);		/* change sign */

	lea	edx, DWORD PTR [esi-1]
	sub	ecx, 96					; 00000060H
	sar	edx, 31					; 0000001fH
	mov	eax, 1

; 104  :     int a			= (*(const int*)(&x));

	movss	DWORD PTR _a$1[esp+20], xmm0

; 109  :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	shl	eax, cl

; 110  :         exponent	-=	(31-127)+32;
; 111  :         exponent	>>=	31;
; 112  :         a			=	~((a-1)>>31);		/* change sign */

	not	edx
	dec	eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 93   : 	im_noise_time					-= Device.fTimeDelta;

	movss	xmm0, DWORD PTR [ebx+48]
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 109  :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	sar	eax, 8
	and	eax, esi

; 105  :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	esi, DWORD PTR _a$1[esp+20]

; 109  :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	neg	eax
	sbb	eax, eax
	inc	eax

; 110  :         exponent	-=	(31-127)+32;
; 111  :         exponent	>>=	31;
; 112  :         a			=	~((a-1)>>31);		/* change sign */

	and	eax, edx

; 113  :         r			-=	(imask&a);

	sub	ebp, eax
	lea	eax, DWORD PTR [ecx+64]
	sar	eax, 31					; 0000001fH

; 114  :         r			&=	exponent;

	and	ebp, eax

; 105  :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	eax, esi
	sar	eax, 23					; 00000017H

; 114  :         r			&=	exponent;

	xor	ebp, edx

; 105  :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	movzx	eax, al

; 110  :         exponent	-=	(31-127)+32;
; 111  :         exponent	>>=	31;
; 112  :         a			=	~((a-1)>>31);		/* change sign */

	lea	edx, DWORD PTR [esi-1]
	sub	edi, eax
	sar	edx, 31					; 0000001fH
	mov	eax, esi
	mov	ecx, edi
	or	eax, -8388608				; ff800000H

; 116  :         r			=	-r;                 /* change sign */

	neg	ebp

; 106  :     int r			= (((u32)(a) << 8) | (1U << 31)) >> exponent;

	shl	eax, 8

; 110  :         exponent	-=	(31-127)+32;
; 111  :         exponent	>>=	31;
; 112  :         a			=	~((a-1)>>31);		/* change sign */

	not	edx
	shr	eax, cl
	lea	ecx, DWORD PTR [edi-96]
	mov	DWORD PTR _th$1$[esp+20], eax
	mov	eax, 1
	shl	eax, cl
	dec	eax
	sar	eax, 8
	and	eax, esi

; 113  :         r			-=	(imask&a);

	mov	esi, DWORD PTR _th$1$[esp+20]
	neg	eax
	sbb	eax, eax
	inc	eax
	and	eax, edx
	sub	esi, eax
	lea	eax, DWORD PTR [edi-32]
	sar	eax, 31					; 0000001fH

; 114  :         r			&=	exponent;

	and	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 93   : 	im_noise_time					-= Device.fTimeDelta;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 114  :         r			&=	exponent;

	xor	esi, edx

; 115  :         r			^=	a;
; 116  :         r			=	-r;                 /* change sign */

	neg	esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 93   : 	im_noise_time					-= Device.fTimeDelta;

	subss	xmm0, DWORD PTR [eax+468]

; 94   : 	if (im_noise_time<0)			{

	comiss	xmm2, xmm0
	movss	DWORD PTR [ebx+48], xmm0
	jbe	SHORT $LN6@calc_tc_no
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	mov	ecx, DWORD PTR __imp_?Random@@3VCRandom@@A
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 95   : 		im_noise_shift_w			= ::Random.randI(tw?tw:1);

	mov	edi, 1
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	cdq
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 95   : 		im_noise_shift_w			= ::Random.randI(tw?tw:1);

	test	ebp, ebp
	mov	ecx, edi
	cmovne	ecx, ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	idiv	ecx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 95   : 		im_noise_shift_w			= ::Random.randI(tw?tw:1);

	mov	DWORD PTR [ebx+52], edx
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	mov	ecx, DWORD PTR __imp_?Random@@3VCRandom@@A
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 96   : 		im_noise_shift_h			= ::Random.randI(th?th:1);

	test	esi, esi
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	cdq
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 98   : 		while (im_noise_time<0)		im_noise_time += fps_time;

	movss	xmm0, DWORD PTR [ebx+48]
	cmovne	edi, esi
	movss	xmm1, DWORD PTR __real@3f800000
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	idiv	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 98   : 		while (im_noise_time<0)		im_noise_time += fps_time;

	comiss	xmm2, xmm0
	mov	DWORD PTR [ebx+56], edx
	divss	xmm1, DWORD PTR [ebx+84]
	jbe	SHORT $LN6@calc_tc_no
$LL5@calc_tc_no:
	addss	xmm0, xmm1
	comiss	xmm2, xmm0
	ja	SHORT $LL5@calc_tc_no
	movss	DWORD PTR [ebx+48], xmm0
$LN6@calc_tc_no:

; 99   : 	}
; 100  : 
; 101  : 	u32			shift_w				= im_noise_shift_w;
; 102  : 	u32			shift_h				= im_noise_shift_h;
; 103  : 	float		start_u				= (float(shift_w)+.5f)/(tw);

	mov	eax, DWORD PTR [ebx+52]
	fild	DWORD PTR [ebx+52]
	test	eax, eax
	jns	SHORT $LN31@calc_tc_no
	fadd	DWORD PTR __real@4f800000
$LN31@calc_tc_no:
	fld	DWORD PTR __real@3f000000
	mov	DWORD PTR tv461[esp+20], ebp
	fadd	ST(1), ST(0)
	fild	DWORD PTR tv461[esp+20]
	test	ebp, ebp
	jns	SHORT $LN32@calc_tc_no
	fadd	DWORD PTR __real@4f800000
$LN32@calc_tc_no:

; 104  : 	float		start_v				= (float(shift_h)+.5f)/(th);

	mov	eax, DWORD PTR [ebx+56]
	fdivp	ST(2), ST(0)
	fild	DWORD PTR [ebx+56]
	test	eax, eax
	jns	SHORT $LN33@calc_tc_no
	fadd	DWORD PTR __real@4f800000
$LN33@calc_tc_no:
	mov	DWORD PTR tv457[esp+20], esi
	faddp	ST(1), ST(0)
	fild	DWORD PTR tv457[esp+20]
	test	esi, esi
	jns	SHORT $LN34@calc_tc_no
	fadd	DWORD PTR __real@4f800000
$LN34@calc_tc_no:

; 105  : 	u32			_w					= Device.dwWidth;
; 106  : 	u32			_h					= Device.dwHeight;
; 107  : 	u32			cnt_w				= _w / tw;

	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	xor	edx, edx
	fdivp	ST(1), ST(0)
	mov	eax, DWORD PTR [ecx+256]
	div	ebp

; 109  : 	float		end_u				= start_u + float(cnt_w) + 1;

	mov	DWORD PTR tv453[esp+20], eax
	fild	DWORD PTR tv453[esp+20]
	test	eax, eax
	jns	SHORT $LN35@calc_tc_no
	fadd	DWORD PTR __real@4f800000
$LN35@calc_tc_no:

; 108  : 	u32			cnt_h				= _h / th;

	mov	eax, DWORD PTR [ecx+260]

; 109  : 	float		end_u				= start_u + float(cnt_w) + 1;

	fadd	ST(0), ST(2)
	xor	edx, edx
	fld1
	div	esi
	fadd	ST(1), ST(0)

; 110  : 	float		end_v				= start_v + float(cnt_h) + 1;

	mov	DWORD PTR tv449[esp+20], eax
	fild	DWORD PTR tv449[esp+20]
	test	eax, eax
	jns	SHORT $LN36@calc_tc_no
	fadd	DWORD PTR __real@4f800000
$LN36@calc_tc_no:
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	mov	eax, DWORD PTR _p0$[esp+16]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 110  : 	float		end_v				= start_v + float(cnt_h) + 1;

	fadd	ST(0), ST(3)
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 110  : 	float		end_v				= start_v + float(cnt_h) + 1;

	faddp	ST(1), ST(0)
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	fxch	ST(3)
	fstp	DWORD PTR [eax]
	fxch	ST(1)
	fstp	DWORD PTR [eax+4]
	mov	eax, DWORD PTR _p1$[esp]
	fstp	DWORD PTR [eax]
	fstp	DWORD PTR [eax+4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 114  : }

	pop	ecx
	ret	8
?calc_tc_noise@CRenderTarget@@AAEXAAU?$_vector2@M@@0@Z ENDP ; CRenderTarget::calc_tc_noise
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
_TEXT	SEGMENT
_p1$$sroa$240$1$ = -12					; size = 4
_tw$ = -12						; size = 4
_th$ = -8						; size = 4
tv444 = -4						; size = 4
tv442 = -4						; size = 4
__real@3f800000$1$ = -4					; size = 4
_r0$ = 8						; size = 4
_r1$ = 12						; size = 4
_l0$ = 16						; size = 4
_l1$ = 20						; size = 4
?calc_tc_duality_ss@CRenderTarget@@AAEXAAU?$_vector2@M@@000@Z PROC ; CRenderTarget::calc_tc_duality_ss
; _this$ = ecx

; 118  : 	// Calculate ordinaty TCs from blur and SS
; 119  : 	float	tw			= float(rtWidth);

	mov	eax, DWORD PTR [ecx+8]
	sub	esp, 12					; 0000000cH
	fild	DWORD PTR [ecx+8]
	test	eax, eax
	jns	SHORT $LN25@calc_tc_du
	fadd	DWORD PTR __real@4f800000
$LN25@calc_tc_du:

; 120  : 	float	th			= float(rtHeight);

	mov	edx, DWORD PTR [ecx+12]
	fstp	DWORD PTR _tw$[esp+12]
	fild	DWORD PTR [ecx+12]
	test	edx, edx
	jns	SHORT $LN26@calc_tc_du
	fadd	DWORD PTR __real@4f800000
$LN26@calc_tc_du:

; 121  : 	if (rtHeight!=Device.dwHeight)	param_blur = 1.f;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	movss	xmm2, DWORD PTR __real@3f800000
	fstp	DWORD PTR _th$[esp+12]
	cmp	edx, DWORD PTR [eax+260]
	je	SHORT $LN24@calc_tc_du
	mov	DWORD PTR [ecx+60], 1065353216		; 3f800000H
	movaps	xmm5, xmm2
	jmp	SHORT $LN2@calc_tc_du
$LN24@calc_tc_du:
	movss	xmm5, DWORD PTR [ecx+60]
$LN2@calc_tc_du:

; 123  : 	shift.set			(.5f/tw, .5f/th);

	movaps	xmm4, xmm2
	movss	xmm6, DWORD PTR __real@3f000000
	divss	xmm2, DWORD PTR _th$[esp+12]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	mov	eax, DWORD PTR _r0$[esp+8]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 123  : 	shift.set			(.5f/tw, .5f/th);

	divss	xmm4, DWORD PTR _tw$[esp+12]
	movaps	xmm0, xmm2
	movss	DWORD PTR __real@3f800000$1$[esp+12], xmm2
	mulss	xmm0, xmm6
	movaps	xmm1, xmm4
	mulss	xmm1, xmm6
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 32   : 	IC SelfRef mul(const T s)						{ x*=s; y*=s;					return *this;	}

	movaps	xmm3, xmm0
	mulss	xmm3, xmm5
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 124  : 	shift.mul			(param_blur);

	movaps	xmm2, xmm1
	mulss	xmm2, xmm5
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 29   : 	IC SelfRef add(const Self &p)					{ x+=p.x; y+=p.y;				return *this;	}

	movaps	xmm5, xmm3
	addss	xmm5, xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 126  : 	p1.set				((tw+.5f)/tw, (th+.5f)/th ).add	(shift);

	movss	xmm0, DWORD PTR _tw$[esp+12]
	addss	xmm0, xmm6
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movaps	xmm7, xmm2
	addss	xmm7, xmm1
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 129  : 	float	shift_u		= param_duality_h*.5f;

	movss	xmm1, DWORD PTR [ecx+68]
	mulss	xmm1, xmm6
	mulss	xmm0, xmm4
	movss	xmm4, DWORD PTR _th$[esp+12]
	addss	xmm4, xmm6
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	addss	xmm0, xmm2
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 130  : 	float	shift_v		= param_duality_v*.5f;

	movss	xmm2, DWORD PTR [ecx+72]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR [eax], xmm7
	addss	xmm7, xmm1
	movss	DWORD PTR [eax+4], xmm5
	mov	eax, DWORD PTR _r1$[esp+8]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 126  : 	p1.set				((tw+.5f)/tw, (th+.5f)/th ).add	(shift);

	mulss	xmm4, DWORD PTR __real@3f800000$1$[esp+12]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR _p1$$sroa$240$1$[esp+12], xmm0
	subss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 130  : 	float	shift_v		= param_duality_v*.5f;

	mulss	xmm2, xmm6
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 29   : 	IC SelfRef add(const Self &p)					{ x+=p.x; y+=p.y;				return *this;	}

	addss	xmm4, xmm3

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR [eax], xmm0
	addss	xmm5, xmm2
	movaps	xmm0, xmm4
	subss	xmm0, xmm2
	movss	DWORD PTR [eax+4], xmm0
	mov	eax, DWORD PTR _l0$[esp+8]
	movss	xmm0, DWORD PTR _p1$$sroa$240$1$[esp+12]
	movss	DWORD PTR [eax], xmm7
	movss	DWORD PTR [eax+4], xmm5
	mov	eax, DWORD PTR _l1$[esp+8]
	movss	DWORD PTR [eax], xmm0
	movss	DWORD PTR [eax+4], xmm4
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 134  : }

	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
?calc_tc_duality_ss@CRenderTarget@@AAEXAAU?$_vector2@M@@000@Z ENDP ; CRenderTarget::calc_tc_duality_ss
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
_TEXT	SEGMENT
__gray$1$ = -3						; size = 1
__noise$1$ = -2						; size = 1
__cbase$1$ = -1						; size = 1
?NeedPostProcess@CRenderTarget@@AAEHXZ PROC		; CRenderTarget::NeedPostProcess
; _this$ = ecx

; 137  : {

	push	ecx

; 138  : 	bool	_blur	= (param_blur>0.001f);

	movss	xmm1, DWORD PTR __real@3a83126f
	push	ebx
	push	esi
	mov	esi, ecx
	movss	xmm0, DWORD PTR [esi+60]
	comiss	xmm0, xmm1
	jbe	SHORT $LN7@NeedPostPr
	mov	bh, 1
	jmp	SHORT $LN8@NeedPostPr
$LN7@NeedPostPr:
	xor	bh, bh
$LN8@NeedPostPr:

; 139  : 	bool	_gray	= (param_gray>0.001f);

	movss	xmm0, DWORD PTR [esi+64]
	comiss	xmm0, xmm1
	mov	BYTE PTR __gray$1$[esp+12], 1
	ja	SHORT $LN10@NeedPostPr
	mov	BYTE PTR __gray$1$[esp+12], 0
$LN10@NeedPostPr:

; 140  : 	bool	_noise	= (param_noise>0.001f);

	movss	xmm0, DWORD PTR [esi+76]
	comiss	xmm0, xmm1
	mov	BYTE PTR __noise$1$[esp+12], 1
	ja	SHORT $LN12@NeedPostPr
	mov	BYTE PTR __noise$1$[esp+12], 0
$LN12@NeedPostPr:

; 141  : 	bool	_dual	= (param_duality_h>0.001f)||(param_duality_v>0.001f);

	movss	xmm0, DWORD PTR [esi+68]
	comiss	xmm0, xmm1
	ja	SHORT $LN13@NeedPostPr
	movss	xmm0, DWORD PTR [esi+72]
	comiss	xmm0, xmm1
	ja	SHORT $LN13@NeedPostPr
	xor	bl, bl
	jmp	SHORT $LN14@NeedPostPr
$LN13@NeedPostPr:
	mov	bl, 1
$LN14@NeedPostPr:

; 142  : 
; 143  : 	bool	_menu_pp= g_pGamePersistent?g_pGamePersistent->OnRenderPPUI_query():false;

	mov	eax, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN15@NeedPostPr
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	call	eax
	mov	ch, al
	jmp	SHORT $LN16@NeedPostPr
$LN15@NeedPostPr:
	xor	ch, ch
$LN16@NeedPostPr:

; 144  : 
; 145  : 	bool	_cbase	= false;
; 146  : 	{
; 147  : 		int		_r	= color_get_R(param_color_base)	; _r=_abs(_r-int(0x7f));

	movzx	eax, BYTE PTR [esi+90]
	sub	eax, 127				; 0000007fH
	mov	BYTE PTR __cbase$1$[esp+12], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 157  : IC s32		_abs	(s32 x)			{ return (x>=0)? x : s32(-x); }

	cdq
	xor	eax, edx
	sub	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 150  : 		if (_r>2 || _g>2 || _b>2)	_cbase	= true	;

	cmp	eax, 2
	jg	SHORT $LN3@NeedPostPr

; 148  : 		int		_g	= color_get_G(param_color_base)	; _g=_abs(_g-int(0x7f));

	movzx	eax, BYTE PTR [esi+89]
	sub	eax, 127				; 0000007fH
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 157  : IC s32		_abs	(s32 x)			{ return (x>=0)? x : s32(-x); }

	cdq
	xor	eax, edx
	sub	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 150  : 		if (_r>2 || _g>2 || _b>2)	_cbase	= true	;

	cmp	eax, 2
	jg	SHORT $LN3@NeedPostPr
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 19   : ICF	u32	color_get_B	(u32 rgba)						{	return ((rgba) & 0xff);			}

	movzx	eax, BYTE PTR [esi+88]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 149  : 		int		_b	= color_get_B(param_color_base)	; _b=_abs(_b-int(0x7f));

	sub	eax, 127				; 0000007fH
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 157  : IC s32		_abs	(s32 x)			{ return (x>=0)? x : s32(-x); }

	cdq
	xor	eax, edx
	sub	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 150  : 		if (_r>2 || _g>2 || _b>2)	_cbase	= true	;

	cmp	eax, 2
	jle	SHORT $LN37@NeedPostPr
$LN3@NeedPostPr:
	mov	dl, 1
	jmp	SHORT $LN2@NeedPostPr
$LN37@NeedPostPr:
	mov	dl, BYTE PTR __cbase$1$[esp+12]
$LN2@NeedPostPr:

; 151  : 	}
; 152  : 	bool	_cadd	= false;

	xor	cl, cl

; 153  : 	{
; 154  : 		int		_r	= color_get_R(param_color_add)	;
; 155  : 		int		_g	= color_get_G(param_color_add)	;
; 156  : 		int		_b	= color_get_B(param_color_add)	;
; 157  : 		if (_r>2 || _g>2 || _b>2)	_cadd	= true	;

	cmp	BYTE PTR [esi+98], 2
	ja	SHORT $LN5@NeedPostPr
	cmp	BYTE PTR [esi+97], 2
	ja	SHORT $LN5@NeedPostPr
	cmp	BYTE PTR [esi+96], 2
	jbe	SHORT $LN4@NeedPostPr
$LN5@NeedPostPr:
	mov	cl, 1
$LN4@NeedPostPr:

; 158  : 	}
; 159  : 	return _blur || _gray || _noise || _dual || _cbase || _cadd || _menu_pp; 

	test	bh, bh
	jne	SHORT $LN17@NeedPostPr
	cmp	BYTE PTR __gray$1$[esp+12], bh
	jne	SHORT $LN17@NeedPostPr
	cmp	BYTE PTR __noise$1$[esp+12], bh
	jne	SHORT $LN17@NeedPostPr
	test	bl, bl
	jne	SHORT $LN17@NeedPostPr
	test	dl, dl
	jne	SHORT $LN17@NeedPostPr
	test	cl, cl
	jne	SHORT $LN17@NeedPostPr
	test	ch, ch
	jne	SHORT $LN17@NeedPostPr
	pop	esi
	xor	eax, eax

; 160  : }

	pop	ebx
	pop	ecx
	ret	0
$LN17@NeedPostPr:
	pop	esi

; 158  : 	}
; 159  : 	return _blur || _gray || _noise || _dual || _cbase || _cadd || _menu_pp; 

	mov	eax, 1

; 160  : }

	pop	ebx
	pop	ecx
	ret	0
?NeedPostProcess@CRenderTarget@@AAEHXZ ENDP		; CRenderTarget::NeedPostProcess
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
_TEXT	SEGMENT
__gray$1$ = -3						; size = 1
__noise$1$ = -2						; size = 1
__cbase$1$ = -1						; size = 1
?Perform@CRenderTarget@@AAEHXZ PROC			; CRenderTarget::Perform
; _this$ = ecx

; 163  : {

	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx

; 164  : 	return Available() && ( NeedPostProcess() || (ps_r__Supersample>1) || (frame_distort==(Device.dwFrame-1)));

	cmp	DWORD PTR [esi+4], 0
	je	$LN4@Perform

; 138  : 	bool	_blur	= (param_blur>0.001f);

	movss	xmm0, DWORD PTR [esi+60]
	movss	xmm1, DWORD PTR __real@3a83126f
	comiss	xmm0, xmm1
	jbe	SHORT $LN12@Perform
	mov	bh, 1
	jmp	SHORT $LN13@Perform
$LN12@Perform:
	xor	bh, bh
$LN13@Perform:

; 139  : 	bool	_gray	= (param_gray>0.001f);

	movss	xmm0, DWORD PTR [esi+64]
	comiss	xmm0, xmm1
	mov	BYTE PTR __gray$1$[esp+12], 1
	ja	SHORT $LN15@Perform
	mov	BYTE PTR __gray$1$[esp+12], 0
$LN15@Perform:

; 140  : 	bool	_noise	= (param_noise>0.001f);

	movss	xmm0, DWORD PTR [esi+76]
	comiss	xmm0, xmm1
	mov	BYTE PTR __noise$1$[esp+12], 1
	ja	SHORT $LN17@Perform
	mov	BYTE PTR __noise$1$[esp+12], 0
$LN17@Perform:

; 141  : 	bool	_dual	= (param_duality_h>0.001f)||(param_duality_v>0.001f);

	movss	xmm0, DWORD PTR [esi+68]
	comiss	xmm0, xmm1
	ja	SHORT $LN18@Perform
	movss	xmm0, DWORD PTR [esi+72]
	comiss	xmm0, xmm1
	ja	SHORT $LN18@Perform
	xor	bl, bl
	jmp	SHORT $LN19@Perform
$LN18@Perform:
	mov	bl, 1
$LN19@Perform:

; 142  : 
; 143  : 	bool	_menu_pp= g_pGamePersistent?g_pGamePersistent->OnRenderPPUI_query():false;

	mov	eax, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN20@Perform
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	call	eax
	mov	ch, al
	jmp	SHORT $LN21@Perform
$LN20@Perform:
	xor	ch, ch
$LN21@Perform:

; 144  : 
; 145  : 	bool	_cbase	= false;
; 146  : 	{
; 147  : 		int		_r	= color_get_R(param_color_base)	; _r=_abs(_r-int(0x7f));

	movzx	eax, BYTE PTR [esi+90]
	sub	eax, 127				; 0000007fH
	mov	BYTE PTR __cbase$1$[esp+12], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 157  : IC s32		_abs	(s32 x)			{ return (x>=0)? x : s32(-x); }

	cdq
	xor	eax, edx
	sub	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 150  : 		if (_r>2 || _g>2 || _b>2)	_cbase	= true	;

	cmp	eax, 2
	jg	SHORT $LN8@Perform

; 148  : 		int		_g	= color_get_G(param_color_base)	; _g=_abs(_g-int(0x7f));

	movzx	eax, BYTE PTR [esi+89]
	sub	eax, 127				; 0000007fH
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 157  : IC s32		_abs	(s32 x)			{ return (x>=0)? x : s32(-x); }

	cdq
	xor	eax, edx
	sub	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 150  : 		if (_r>2 || _g>2 || _b>2)	_cbase	= true	;

	cmp	eax, 2
	jg	SHORT $LN8@Perform
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 19   : ICF	u32	color_get_B	(u32 rgba)						{	return ((rgba) & 0xff);			}

	movzx	eax, BYTE PTR [esi+88]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 149  : 		int		_b	= color_get_B(param_color_base)	; _b=_abs(_b-int(0x7f));

	sub	eax, 127				; 0000007fH
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 157  : IC s32		_abs	(s32 x)			{ return (x>=0)? x : s32(-x); }

	cdq
	xor	eax, edx
	sub	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 150  : 		if (_r>2 || _g>2 || _b>2)	_cbase	= true	;

	cmp	eax, 2
	jle	SHORT $LN43@Perform
$LN8@Perform:
	mov	dl, 1
	jmp	SHORT $LN7@Perform
$LN43@Perform:
	mov	dl, BYTE PTR __cbase$1$[esp+12]
$LN7@Perform:

; 151  : 	}
; 152  : 	bool	_cadd	= false;

	xor	cl, cl

; 153  : 	{
; 154  : 		int		_r	= color_get_R(param_color_add)	;
; 155  : 		int		_g	= color_get_G(param_color_add)	;
; 156  : 		int		_b	= color_get_B(param_color_add)	;
; 157  : 		if (_r>2 || _g>2 || _b>2)	_cadd	= true	;

	cmp	BYTE PTR [esi+98], 2
	ja	SHORT $LN10@Perform
	cmp	BYTE PTR [esi+97], 2
	ja	SHORT $LN10@Perform
	cmp	BYTE PTR [esi+96], 2
	jbe	SHORT $LN9@Perform
$LN10@Perform:
	mov	cl, 1
$LN9@Perform:

; 158  : 	}
; 159  : 	return _blur || _gray || _noise || _dual || _cbase || _cadd || _menu_pp; 

	test	bh, bh
	jne	SHORT $LN3@Perform
	cmp	BYTE PTR __gray$1$[esp+12], bh
	jne	SHORT $LN3@Perform
	cmp	BYTE PTR __noise$1$[esp+12], bh
	jne	SHORT $LN3@Perform
	test	bl, bl
	jne	SHORT $LN3@Perform
	test	dl, dl
	jne	SHORT $LN3@Perform
	test	cl, cl
	jne	SHORT $LN3@Perform
	test	ch, ch
	jne	SHORT $LN3@Perform

; 164  : 	return Available() && ( NeedPostProcess() || (ps_r__Supersample>1) || (frame_distort==(Device.dwFrame-1)));

	mov	eax, DWORD PTR __imp_?ps_r__Supersample@@3HA
	cmp	DWORD PTR [eax], 1
	jg	SHORT $LN3@Perform
	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [eax+244]
	dec	eax
	cmp	DWORD PTR [esi+100], eax
	jne	SHORT $LN4@Perform
$LN3@Perform:
	pop	esi
	mov	eax, 1

; 165  : }

	pop	ebx
	pop	ecx
	ret	0
$LN4@Perform:
	pop	esi

; 164  : 	return Available() && ( NeedPostProcess() || (ps_r__Supersample>1) || (frame_distort==(Device.dwFrame-1)));

	xor	eax, eax

; 165  : }

	pop	ebx
	pop	ecx
	ret	0
?Perform@CRenderTarget@@AAEHXZ ENDP			; CRenderTarget::Perform
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
;	COMDAT ?set@TL_2c3uv@@QAEXMMIIMMMMMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_c0$ = 16						; size = 4
_c1$ = 20						; size = 4
_u0$ = 24						; size = 4
_v0$ = 28						; size = 4
_u1$ = 32						; size = 4
_v1$ = 36						; size = 4
_u2$ = 40						; size = 4
_v2$ = 44						; size = 4
?set@TL_2c3uv@@QAEXMMIIMMMMMM@Z PROC			; TL_2c3uv::set, COMDAT
; _this$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR _x$[esp-4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 214  : 		color0 = c0; 

	mov	eax, DWORD PTR _c0$[esp-4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR _y$[esp-4]
	movss	DWORD PTR [ecx+4], xmm0
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	xmm0, DWORD PTR _u0$[esp-4]
	movss	DWORD PTR [ecx+24], xmm0
	movss	xmm0, DWORD PTR _v0$[esp-4]
	movss	DWORD PTR [ecx+28], xmm0
	movss	xmm0, DWORD PTR _u1$[esp-4]
	movss	DWORD PTR [ecx+32], xmm0
	movss	xmm0, DWORD PTR _v1$[esp-4]
	movss	DWORD PTR [ecx+36], xmm0
	movss	xmm0, DWORD PTR _u2$[esp-4]
	movss	DWORD PTR [ecx+40], xmm0
	movss	xmm0, DWORD PTR _v2$[esp-4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 214  : 		color0 = c0; 

	mov	DWORD PTR [ecx+16], eax

; 215  : 		color1 = c1;

	mov	eax, DWORD PTR _c1$[esp-4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	mov	DWORD PTR [ecx+8], 869711765		; 33d6bf95H
	mov	DWORD PTR [ecx+12], 1065353216		; 3f800000H
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 215  : 		color1 = c1;

	mov	DWORD PTR [ecx+20], eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h

; 15   : 	IC SelfRef set(float _u, float _v)				{ x=T(_u); y=T(_v);				return *this;	}

	movss	DWORD PTR [ecx+44], xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 219  : 	}

	ret	40					; 00000028H
?set@TL_2c3uv@@QAEXMMIIMMMMMM@Z ENDP			; TL_2c3uv::set
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
;	COMDAT ??__Fs_brightness@?1??End@CRenderTarget@@QAEXXZ@YAXXZ
text$yd	SEGMENT
??__Fs_brightness@?1??End@CRenderTarget@@QAEXXZ@YAXXZ PROC ; `CRenderTarget::End'::`2'::`dynamic atexit destructor for 's_brightness'', COMDAT

; 50   : 	void				_dec		()								{	if (0==p_) return;	p_->dwReference--; 	if (0==p_->dwReference)	p_=0;						}

	mov	eax, DWORD PTR ?s_brightness@?1??End@CRenderTarget@@QAEXXZ@4Vshared_str@@A
	test	eax, eax
	je	SHORT $LN7@dynamic
	dec	DWORD PTR [eax]
	xor	ecx, ecx
	mov	eax, DWORD PTR ?s_brightness@?1??End@CRenderTarget@@QAEXXZ@4Vshared_str@@A
	cmp	DWORD PTR [eax], ecx
	cmove	eax, ecx
	mov	DWORD PTR ?s_brightness@?1??End@CRenderTarget@@QAEXXZ@4Vshared_str@@A, eax
$LN7@dynamic:
	ret	0
??__Fs_brightness@?1??End@CRenderTarget@@QAEXXZ@YAXXZ ENDP ; `CRenderTarget::End'::`2'::`dynamic atexit destructor for 's_brightness''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\fixedmap.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp
_TEXT	SEGMENT
?phase_distortion@CRenderTarget@@AAEXXZ PROC		; CRenderTarget::phase_distortion
; _this$ = ecx

; 279  : 	frame_distort								= Device.dwFrame;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	push	esi
	mov	esi, ecx

; 280  : 	RCache.set_RT								(RT_distort->pRT);

	push	0
	mov	eax, DWORD PTR [eax+244]
	mov	DWORD PTR [esi+100], eax
	mov	eax, DWORD PTR [esi+28]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	DWORD PTR [eax+16]
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 281  : 	RCache.set_ZB								(ZB);

	push	DWORD PTR [esi+32]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_ZB@CBackend@@QAEXPAUIDirect3DSurface9@@@Z

; 282  : 	RCache.set_CullMode							(CULL_CCW);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 266  : 	if (cull_mode != _mode) { cull_mode = _mode;			CHK_DX(HW.pDevice->SetRenderState(D3DRS_CULLMODE, _mode)); }

	cmp	DWORD PTR [ecx+8916], 3
	je	SHORT $LN7@phase_dist
	mov	DWORD PTR [ecx+8916], 3
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	3
	push	22					; 00000016H
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+228]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
$LN7@phase_dist:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 283  : 	RCache.set_ColorWriteEnable					( );

	push	15					; 0000000fH
	call	DWORD PTR __imp_?set_ColorWriteEnable@CBackend@@QAEXI@Z

; 284  : 	CHK_DX(HW.pDevice->Clear					( 0L, NULL, D3DCLEAR_TARGET, color_rgba(127,127,127,127), 1.0f, 0L));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	fld1
	push	0
	mov	eax, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	fstp	DWORD PTR [esp]
	push	2139062143				; 7f7f7f7fH
	push	1
	push	0
	push	0
	push	eax
	call	DWORD PTR [ecx+172]

; 285  : 	
; 286  : 	if(g_pGameLevel && g_pGamePersistent && !g_pGamePersistent->OnRenderPPUI_query() )

	mov	eax, DWORD PTR __imp_?g_pGameLevel@@3PAVIGame_Level@@A
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN30@phase_dist
	mov	eax, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN30@phase_dist
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	call	eax
	test	al, al
	jne	SHORT $LN30@phase_dist
; File I:\Vitalya\mine\NSProjectX\xrCore\fixedmap.h

; 209  : 	{ if (pool) recurseRL(nodes,CB);  }

	cmp	DWORD PTR ?RImplementation@@3VCRender@@A+392, 0
	je	SHORT $LN30@phase_dist
	mov	esi, DWORD PTR ?RImplementation@@3VCRender@@A+388

; 83   : 		if (N->right)	recurseRL(N->right,CB);

	mov	eax, DWORD PTR [esi+88]
	test	eax, eax
	je	SHORT $LN19@phase_dist
	push	ecx
	push	eax
	mov	ecx, OFFSET ?RImplementation@@3VCRender@@A+388
	call	?recurseRL@?$FixedMAP@MU_MatrixItemS@R_dsgraph@@Udoug_lea_allocator@@@@AAEXPAUTNode@1@P6IX0@Z@Z ; FixedMAP<float,R_dsgraph::_MatrixItemS,doug_lea_allocator>::recurseRL
$LN19@phase_dist:

; 84   : 		CB(N);

	mov	ecx, esi
	call	?sorted_L1@@YIXPAUTNode@?$FixedMAP@MU_MatrixItemS@R_dsgraph@@Udoug_lea_allocator@@@@@Z ; sorted_L1

; 85   : 		if (N->left)	recurseRL(N->left,CB);

	mov	eax, DWORD PTR [esi+84]
	test	eax, eax
	je	SHORT $LN30@phase_dist
	push	ecx
	push	eax
	mov	ecx, OFFSET ?RImplementation@@3VCRender@@A+388
	call	?recurseRL@?$FixedMAP@MU_MatrixItemS@R_dsgraph@@Udoug_lea_allocator@@@@AAEXPAUTNode@1@P6IX0@Z@Z ; FixedMAP<float,R_dsgraph::_MatrixItemS,doug_lea_allocator>::recurseRL
$LN30@phase_dist:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_RenderTarget.cpp

; 291  : 	if (g_pGamePersistent)	g_pGamePersistent->OnRenderPPUI_PP()	;	// PP-UI

	mov	eax, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A
	mov	DWORD PTR ?RImplementation@@3VCRender@@A+392, 0
	pop	esi
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@phase_dist
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+28]
$LN4@phase_dist:

; 292  : }

	ret	0
?phase_distortion@CRenderTarget@@AAEXXZ ENDP		; CRenderTarget::phase_distortion
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??C?$resptr_core@VCRT@@Uresptrcode_crt@@@@QBEPAVCRT@@XZ
_TEXT	SEGMENT
??C?$resptr_core@VCRT@@Uresptrcode_crt@@@@QBEPAVCRT@@XZ PROC ; resptr_core<CRT,resptrcode_crt>::operator->, COMDAT
; _this$ = ecx

; 71   : 	T *					operator->() const												{	return p_;	}

	mov	eax, DWORD PTR [ecx]
	ret	0
??C?$resptr_core@VCRT@@Uresptrcode_crt@@@@QBEPAVCRT@@XZ ENDP ; resptr_core<CRT,resptrcode_crt>::operator->
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??4?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??4?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAEAAV0@ABV0@@Z PROC ; resptr_core<CRT,resptrcode_crt>::operator=, COMDAT
; _this$ = ecx

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	eax, DWORD PTR _rhs$[esp-4]

; 67   : 	self &				operator=		(const self & rhs)								{	_set(rhs);	return (self&)*this;	}

	push	esi
	push	edi
	mov	edi, ecx

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	esi, DWORD PTR [eax]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	test	esi, esi
	je	SHORT $LN8@operator
	inc	DWORD PTR [esi]
$LN8@operator:
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	mov	DWORD PTR [edi], esi

; 67   : 	self &				operator=		(const self & rhs)								{	_set(rhs);	return (self&)*this;	}

	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
??4?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAEAAV0@ABV0@@Z ENDP ; resptr_core<CRT,resptrcode_crt>::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??1?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ
_TEXT	SEGMENT
??1?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ PROC	; resptr_core<CRT,resptrcode_crt>::~resptr_core<CRT,resptrcode_crt>, COMDAT
; _this$ = ecx

; 64   : 						~resptr_core	()												{	_dec();						}

	jmp	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
??1?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ ENDP	; resptr_core<CRT,resptrcode_crt>::~resptr_core<CRT,resptrcode_crt>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@PAVCRT@@_N@Z
_TEXT	SEGMENT
_p$dead$ = 8						; size = 4
_add_ref$dead$ = 12					; size = 1
??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@PAVCRT@@_N@Z PROC ; resptr_core<CRT,resptrcode_crt>::resptr_core<CRT,resptrcode_crt>, COMDAT
; _this$ = ecx

; 62   : 						resptr_core		(T * p, bool add_ref = true) 					{	p_ = p;	if(add_ref)	_inc(); }

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	ret	8
??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@PAVCRT@@_N@Z ENDP ; resptr_core<CRT,resptrcode_crt>::resptr_core<CRT,resptrcode_crt>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ
_TEXT	SEGMENT
??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ PROC	; resptr_core<CRT,resptrcode_crt>::resptr_core<CRT,resptrcode_crt>, COMDAT
; _this$ = ecx

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	ret	0
??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ ENDP	; resptr_core<CRT,resptrcode_crt>::resptr_core<CRT,resptrcode_crt>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\fixedmap.h
;	COMDAT ?size@?$FixedMAP@MU_MatrixItemS@R_dsgraph@@Udoug_lea_allocator@@@@QAEIXZ
_TEXT	SEGMENT
?size@?$FixedMAP@MU_MatrixItemS@R_dsgraph@@Udoug_lea_allocator@@@@QAEIXZ PROC ; FixedMAP<float,R_dsgraph::_MatrixItemS,doug_lea_allocator>::size, COMDAT
; _this$ = ecx

; 203  : 	IC u32		size()		{ return pool;			}

	mov	eax, DWORD PTR [ecx+4]
	ret	0
?size@?$FixedMAP@MU_MatrixItemS@R_dsgraph@@Udoug_lea_allocator@@@@QAEIXZ ENDP ; FixedMAP<float,R_dsgraph::_MatrixItemS,doug_lea_allocator>::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
;	COMDAT ?mul@?$_vector2@M@@QAEAAU1@M@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
?mul@?$_vector2@M@@QAEAAU1@M@Z PROC			; _vector2<float>::mul, COMDAT
; _this$ = ecx

; 32   : 	IC SelfRef mul(const T s)						{ x*=s; y*=s;					return *this;	}

	movss	xmm1, DWORD PTR _s$[esp-4]
	mov	eax, ecx
	movaps	xmm0, xmm1
	mulss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR [ecx+4], xmm1
	movss	DWORD PTR [ecx], xmm0
	ret	4
?mul@?$_vector2@M@@QAEAAU1@M@Z ENDP			; _vector2<float>::mul
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
;	COMDAT ?add@?$_vector2@M@@QAEAAU1@ABU1@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?add@?$_vector2@M@@QAEAAU1@ABU1@@Z PROC			; _vector2<float>::add, COMDAT
; _this$ = ecx

; 29   : 	IC SelfRef add(const Self &p)					{ x+=p.x; y+=p.y;				return *this;	}

	mov	eax, DWORD PTR _p$[esp-4]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	mov	eax, ecx
	addss	xmm0, DWORD PTR [ecx+4]
	movss	DWORD PTR [ecx+4], xmm0
	ret	4
?add@?$_vector2@M@@QAEAAU1@ABU1@@Z ENDP			; _vector2<float>::add
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?get_height@CRenderTarget@@UAEIXZ
_TEXT	SEGMENT
?get_height@CRenderTarget@@UAEIXZ PROC			; CRenderTarget::get_height, COMDAT
; _this$ = ecx

; 71   : 	virtual u32			get_height			()				{ return curHeight;											}

	mov	eax, DWORD PTR [ecx+20]
	ret	0
?get_height@CRenderTarget@@UAEIXZ ENDP			; CRenderTarget::get_height
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?get_width@CRenderTarget@@UAEIXZ
_TEXT	SEGMENT
?get_width@CRenderTarget@@UAEIXZ PROC			; CRenderTarget::get_width, COMDAT
; _this$ = ecx

; 70   : 	virtual u32			get_width			()				{ return curWidth;											}

	mov	eax, DWORD PTR [ecx+16]
	ret	0
?get_width@CRenderTarget@@UAEIXZ ENDP			; CRenderTarget::get_width
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?set_color_add@CRenderTarget@@UAEXI@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_color_add@CRenderTarget@@UAEXI@Z PROC		; CRenderTarget::set_color_add, COMDAT
; _this$ = ecx

; 68   : 	virtual void		set_color_add		(u32	f)		{ param_color_add=f;										}

	mov	eax, DWORD PTR _f$[esp-4]
	mov	DWORD PTR [ecx+96], eax
	ret	4
?set_color_add@CRenderTarget@@UAEXI@Z ENDP		; CRenderTarget::set_color_add
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?set_color_gray@CRenderTarget@@UAEXI@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_color_gray@CRenderTarget@@UAEXI@Z PROC		; CRenderTarget::set_color_gray, COMDAT
; _this$ = ecx

; 67   : 	virtual void		set_color_gray		(u32	f)		{ param_color_gray=f;										}

	mov	eax, DWORD PTR _f$[esp-4]
	mov	DWORD PTR [ecx+92], eax
	ret	4
?set_color_gray@CRenderTarget@@UAEXI@Z ENDP		; CRenderTarget::set_color_gray
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?set_color_base@CRenderTarget@@UAEXI@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_color_base@CRenderTarget@@UAEXI@Z PROC		; CRenderTarget::set_color_base, COMDAT
; _this$ = ecx

; 66   : 	virtual void		set_color_base		(u32	f)		{ param_color_base=f;										}

	mov	eax, DWORD PTR _f$[esp-4]
	mov	DWORD PTR [ecx+88], eax
	ret	4
?set_color_base@CRenderTarget@@UAEXI@Z ENDP		; CRenderTarget::set_color_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?set_noise_fps@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_noise_fps@CRenderTarget@@UAEXM@Z PROC		; CRenderTarget::set_noise_fps, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	movss	xmm0, DWORD PTR _f$[esp-4]
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h

; 64   : 	virtual void		set_noise_fps		(float	f)		{ param_noise_fps=_abs(f)+EPS_S;							}

	addss	xmm0, DWORD PTR __real@33d6bf95
	movss	DWORD PTR [ecx+84], xmm0
	ret	4
?set_noise_fps@CRenderTarget@@UAEXM@Z ENDP		; CRenderTarget::set_noise_fps
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?set_noise_scale@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_noise_scale@CRenderTarget@@UAEXM@Z PROC		; CRenderTarget::set_noise_scale, COMDAT
; _this$ = ecx

; 63   : 	virtual void		set_noise_scale		(float	f)		{ param_noise_scale=f;										}

	movss	xmm0, DWORD PTR _f$[esp-4]
	movss	DWORD PTR [ecx+80], xmm0
	ret	4
?set_noise_scale@CRenderTarget@@UAEXM@Z ENDP		; CRenderTarget::set_noise_scale
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?set_noise@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_noise@CRenderTarget@@UAEXM@Z PROC			; CRenderTarget::set_noise, COMDAT
; _this$ = ecx

; 62   : 	virtual void		set_noise			(float	f)		{ param_noise=f;											}

	movss	xmm0, DWORD PTR _f$[esp-4]
	movss	DWORD PTR [ecx+76], xmm0
	ret	4
?set_noise@CRenderTarget@@UAEXM@Z ENDP			; CRenderTarget::set_noise
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?set_duality_v@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_duality_v@CRenderTarget@@UAEXM@Z PROC		; CRenderTarget::set_duality_v, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	movss	xmm0, DWORD PTR _f$[esp-4]
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h

; 61   : 	virtual void		set_duality_v		(float	f)		{ param_duality_v=_abs(f);									}

	movss	DWORD PTR [ecx+72], xmm0
	ret	4
?set_duality_v@CRenderTarget@@UAEXM@Z ENDP		; CRenderTarget::set_duality_v
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?set_duality_h@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_duality_h@CRenderTarget@@UAEXM@Z PROC		; CRenderTarget::set_duality_h, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	movss	xmm0, DWORD PTR _f$[esp-4]
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h

; 60   : 	virtual void		set_duality_h		(float	f)		{ param_duality_h=_abs(f);									}

	movss	DWORD PTR [ecx+68], xmm0
	ret	4
?set_duality_h@CRenderTarget@@UAEXM@Z ENDP		; CRenderTarget::set_duality_h
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?set_gray@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_gray@CRenderTarget@@UAEXM@Z PROC			; CRenderTarget::set_gray, COMDAT
; _this$ = ecx

; 59   : 	virtual void		set_gray			(float	f)		{ param_gray=f;												}

	movss	xmm0, DWORD PTR _f$[esp-4]
	movss	DWORD PTR [ecx+64], xmm0
	ret	4
?set_gray@CRenderTarget@@UAEXM@Z ENDP			; CRenderTarget::set_gray
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?set_blur@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_blur@CRenderTarget@@UAEXM@Z PROC			; CRenderTarget::set_blur, COMDAT
; _this$ = ecx

; 58   : 	virtual void		set_blur			(float	f)		{ param_blur=f;												}

	movss	xmm0, DWORD PTR _f$[esp-4]
	movss	DWORD PTR [ecx+60], xmm0
	ret	4
?set_blur@CRenderTarget@@UAEXM@Z ENDP			; CRenderTarget::set_blur
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\fstaticrender_rendertarget.h
;	COMDAT ?Available@CRenderTarget@@AAEHXZ
_TEXT	SEGMENT
?Available@CRenderTarget@@AAEHXZ PROC			; CRenderTarget::Available, COMDAT
; _this$ = ecx

; 45   : 	BOOL				Available			()	{ return bAvailable; }

	mov	eax, DWORD PTR [ecx+4]
	ret	0
?Available@CRenderTarget@@AAEHXZ ENDP			; CRenderTarget::Available
_TEXT	ENDS
END
