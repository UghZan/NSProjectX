; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\fstaticrender_blenders.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??R?$xr_special_free@$00VIBlender@@@@QAEXAAPAVIBlender@@@Z ; xr_special_free<1,IBlender>::operator()
PUBLIC	??$xr_delete@VIBlender@@@@YAXAAPAVIBlender@@@Z	; xr_delete<IBlender>
PUBLIC	??$xr_new@VCBlender_Particle@@@@YAPAVCBlender_Particle@@XZ ; xr_new<CBlender_Particle>
PUBLIC	??$xr_new@VCBlender_Tree@@@@YAPAVCBlender_Tree@@XZ ; xr_new<CBlender_Tree>
PUBLIC	??$xr_new@VCBlender_Detail_Still@@@@YAPAVCBlender_Detail_Still@@XZ ; xr_new<CBlender_Detail_Still>
PUBLIC	??$xr_new@VCBlender_Model_EbB@@@@YAPAVCBlender_Model_EbB@@XZ ; xr_new<CBlender_Model_EbB>
PUBLIC	??$xr_new@VCBlender_Model@@@@YAPAVCBlender_Model@@XZ ; xr_new<CBlender_Model>
PUBLIC	??$xr_new@VCBlender_Blur@@@@YAPAVCBlender_Blur@@XZ ; xr_new<CBlender_Blur>
PUBLIC	??$xr_new@VCBlender_ShWorld@@@@YAPAVCBlender_ShWorld@@XZ ; xr_new<CBlender_ShWorld>
PUBLIC	??$xr_new@VCBlender_BmmD@@@@YAPAVCBlender_BmmD@@XZ ; xr_new<CBlender_BmmD>
PUBLIC	??$xr_new@VCBlender_LmEbB@@@@YAPAVCBlender_LmEbB@@XZ ; xr_new<CBlender_LmEbB>
PUBLIC	??$xr_new@VCBlender_LaEmB@@@@YAPAVCBlender_LaEmB@@XZ ; xr_new<CBlender_LaEmB>
PUBLIC	??$xr_new@VCBlender_Editor_Selection@@@@YAPAVCBlender_Editor_Selection@@XZ ; xr_new<CBlender_Editor_Selection>
PUBLIC	??$xr_new@VCBlender_Editor_Wire@@@@YAPAVCBlender_Editor_Wire@@XZ ; xr_new<CBlender_Editor_Wire>
PUBLIC	??$xr_new@VCBlender_Screen_GRAY@@@@YAPAVCBlender_Screen_GRAY@@XZ ; xr_new<CBlender_Screen_GRAY>
PUBLIC	??$xr_new@VCBlender_Screen_SET@@@@YAPAVCBlender_Screen_SET@@XZ ; xr_new<CBlender_Screen_SET>
PUBLIC	??$xr_new@VCBlender_Vertex_aref@@@@YAPAVCBlender_Vertex_aref@@XZ ; xr_new<CBlender_Vertex_aref>
PUBLIC	??$xr_new@VCBlender_Vertex@@@@YAPAVCBlender_Vertex@@XZ ; xr_new<CBlender_Vertex>
PUBLIC	??$xr_new@VCBlender_default_aref@@@@YAPAVCBlender_default_aref@@XZ ; xr_new<CBlender_default_aref>
PUBLIC	??$xr_new@VCBlender_default@@@@YAPAVCBlender_default@@XZ ; xr_new<CBlender_default>
PUBLIC	?blender_create@CRender@@UAEPAVIBlender@@_K@Z	; CRender::blender_create
PUBLIC	?blender_destroy@CRender@@UAEXAAPAVIBlender@@@Z	; CRender::blender_destroy
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
_TEXT	SEGMENT
_B$ = 8							; size = 4
?blender_destroy@CRender@@UAEXAAPAVIBlender@@@Z PROC	; CRender::blender_destroy
; _this$ = ecx

; 49   : {

	push	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 151  : 	if (ptr) 

	mov	edi, DWORD PTR _B$[esp]
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN4@blender_de

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	esi
	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [edi]
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [edi], 0
	pop	esi
$LN4@blender_de:
	pop	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 51   : }

	ret	4
?blender_destroy@CRender@@UAEXAAPAVIBlender@@@Z ENDP	; CRender::blender_destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Editor_Selection.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_detail_still.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_detail_still.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_tree.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_tree.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_default_aref.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Editor_Wire.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\BlenderDefault.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\BlenderDefault.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_LaEmB.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Shadow_World.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Shadow_World.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex_aref.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp
_TEXT	SEGMENT
_cls$ = 8						; size = 8
?blender_create@CRender@@UAEPAVIBlender@@_K@Z PROC	; CRender::blender_create
; _this$ = ecx

; 24   : 	switch (cls)

	mov	eax, DWORD PTR _cls$[esp]
	mov	ecx, DWORD PTR _cls$[esp-4]
	push	esi
	cmp	eax, 1282229602				; 4c6d4562H
	ja	$LN23@blender_cr
	jb	SHORT $LN143@blender_cr
	cmp	ecx, 1109401632				; 42202020H
	ja	$LN23@blender_cr
$LN143@blender_cr:
	cmp	ecx, 1109401632				; 42202020H
	jne	$LN144@blender_cr
	cmp	eax, 1282229602				; 4c6d4562H
	jne	SHORT $LN144@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	456					; 000001c8H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_LmEbB@@6B@

; 16   : 	description.CLS		= B_LmEbB;

	mov	DWORD PTR [esi+4], 1109401632		; 42202020H
	mov	DWORD PTR [esi+8], 1282229602		; 4c6d4562H
$LN166@blender_cr:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	DWORD PTR [esi+452], 0
	mov	eax, 1
	mov	WORD PTR [esi+176], ax
	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+324], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+328], ax
	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+388], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+392], ax
	mov	eax, esi
	pop	esi
	ret	8
$LN144@blender_cr:

; 24   : 	switch (cls)

	cmp	eax, 1163875141				; 455f5345H
	ja	$LN24@blender_cr
	jb	SHORT $LN145@blender_cr
	cmp	ecx, 1277173792				; 4c202020H
	ja	$LN24@blender_cr
$LN145@blender_cr:
	cmp	ecx, 1277173792				; 4c202020H
	jne	SHORT $LN146@blender_cr
	cmp	eax, 1163875141				; 455f5345H
	jne	SHORT $LN146@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	388					; 00000184H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Editor_Selection.cpp

; 11   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Editor_Selection@@6B@

; 12   : 	description.CLS		= B_EDITOR_SEL;

	mov	DWORD PTR [esi+4], 1277173792		; 4c202020H
	mov	DWORD PTR [esi+8], 1163875141		; 455f5345H
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 33   : 	case B_EDITOR_SEL:		return xr_new<CBlender_Editor_Selection>();

	jmp	$LN163@blender_cr
$LN146@blender_cr:

; 24   : 	switch (cls)

	cmp	eax, 1147097940				; 445f5354H
	ja	$LN25@blender_cr
	jb	SHORT $LN147@blender_cr
	cmp	ecx, 1229736992				; 494c4c20H
	ja	$LN25@blender_cr
$LN147@blender_cr:
	cmp	ecx, 1229736992				; 494c4c20H
	jne	SHORT $LN148@blender_cr
	cmp	eax, 1147097940				; 445f5354H
	jne	SHORT $LN148@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	328					; 00000148H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_detail_still.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ

; 17   : 	description.version	= 0;

	xor	eax, eax
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Detail_Still@@6B@
	mov	WORD PTR [esi+176], ax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 52   : 	xrP_BOOL() : value(FALSE) {}

	mov	DWORD PTR [esi+324], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_detail_still.cpp

; 16   : 	description.CLS		= B_DETAIL;

	mov	DWORD PTR [esi+4], 1229736992		; 494c4c20H
	mov	DWORD PTR [esi+8], 1147097940		; 445f5354H
	pop	esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	ret	8
$LN148@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 538976288				; 20202020H
	jne	SHORT $LN149@blender_cr
	cmp	eax, 1112298834				; 424c5552H
	jne	SHORT $LN149@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp

; 11   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Blur@@6B@
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp

; 12   : 	description.CLS		= B_BLUR;

	mov	DWORD PTR [esi+4], 538976288		; 20202020H
	mov	DWORD PTR [esi+8], 1112298834		; 424c5552H
	pop	esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	ret	8
$LN149@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 1869374496				; 6f6c6420H
	jne	$LN160@blender_cr
	cmp	eax, 1114467652				; 426d6d44H
	jne	$LN160@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebx
	push	edi
	push	708					; 000002c4H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	ebx, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 15   : {

	mov	ecx, ebx
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [ebx], OFFSET ??_7CBlender_BmmD@@6B@

; 20   : 	strcpy				(oR_Name,	"detail\\detail_grnd_grass");	//"$null");

	lea	edi, DWORD PTR [ebx+452]
	mov	DWORD PTR [ebx+4], 1869374496		; 6f6c6420H
	mov	esi, OFFSET ??_C@_0BJ@KEGKNGAI@detail?2detail_grnd_grass@
	mov	DWORD PTR [ebx+8], 1114467652		; 426d6d44H
	mov	ecx, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [ebx+324], ecx
	mov	ecx, 6
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [ebx+328], ax
	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [ebx+388], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [ebx+392], ax
	mov	eax, 3
	mov	WORD PTR [ebx+176], ax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 36   : 	case B_BmmD:			return xr_new<CBlender_BmmD>			();			

	mov	eax, ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 20   : 	strcpy				(oR_Name,	"detail\\detail_grnd_grass");	//"$null");

	rep movsd

; 21   : 	strcpy				(oG_Name,	"detail\\detail_grnd_asphalt");	//"$null");

	mov	ecx, 6
	movsb
	lea	edi, DWORD PTR [ebx+516]
	mov	esi, OFFSET ??_C@_0BL@OIEFDNLP@detail?2detail_grnd_asphalt@
	rep movsd

; 22   : 	strcpy				(oB_Name,	"detail\\detail_grnd_earth");	//"$null");

	mov	ecx, 6
	movsw
	movsb
	lea	edi, DWORD PTR [ebx+580]
	mov	esi, OFFSET ??_C@_0BJ@CADHLPDP@detail?2detail_grnd_earth@
	rep movsd

; 23   : 	strcpy				(oA_Name,	"detail\\detail_grnd_yantar");	//"$null");

	mov	ecx, 6
	movsb
	lea	edi, DWORD PTR [ebx+644]
	mov	esi, OFFSET ??_C@_0BK@KBPALGEA@detail?2detail_grnd_yantar@
	rep movsd
	movsw
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 36   : 	case B_BmmD:			return xr_new<CBlender_BmmD>			();			

	pop	edi
	pop	ebx
	pop	esi

; 46   : }

	ret	8
$LN25@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 1162158112				; 45452020H
	jne	$LN160@blender_cr
	cmp	eax, 1147098194				; 445f5452H
	jne	$LN160@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	332					; 0000014cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_tree.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ

; 17   : 	description.version	= 1;

	mov	eax, 1
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Tree@@6B@
	mov	WORD PTR [esi+176], ax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_tree.cpp

; 16   : 	description.CLS		= B_TREE;

	mov	DWORD PTR [esi+4], 1162158112		; 45452020H
	mov	DWORD PTR [esi+8], 1147098194		; 445f5452H

; 18   : 	oBlend.value		= FALSE;

	mov	DWORD PTR [esi+324], 0

; 19   : 	oNotAnTree.value	= FALSE;

	mov	DWORD PTR [esi+328], 0
	pop	esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	ret	8
$LN24@blender_cr:

; 24   : 	switch (cls)

	cmp	eax, 1280139073				; 4c4d5f41H
	ja	$LN26@blender_cr
	jb	SHORT $LN150@blender_cr
	cmp	ecx, 1380271648				; 52454620H
	ja	$LN26@blender_cr
$LN150@blender_cr:
	cmp	ecx, 1380271648				; 52454620H
	jne	$LN151@blender_cr
	cmp	eax, 1280139073				; 4c4d5f41H
	jne	SHORT $LN151@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	340					; 00000154H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_default_aref.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_default_aref@@6B@

; 16   : 	description.CLS		= B_DEFAULT_AREF;

	mov	DWORD PTR [esi+4], 1380271648		; 52454620H
	mov	DWORD PTR [esi+8], 1280139073		; 4c4d5f41H
$LN165@blender_cr:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	DWORD PTR [esi+332], 255		; 000000ffH
	mov	eax, 1
	mov	DWORD PTR [esi+328], 0
	mov	WORD PTR [esi+176], ax
	mov	eax, esi
	mov	DWORD PTR [esi+324], 32			; 00000020H
	mov	DWORD PTR [esi+328], 0
	mov	DWORD PTR [esi+332], 255		; 000000ffH
	mov	DWORD PTR [esi+336], 0
	pop	esi
	ret	8
$LN151@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 1380261920				; 52452020H
	jne	SHORT $LN152@blender_cr
	cmp	eax, 1163876169				; 455f5749H
	jne	SHORT $LN152@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	388					; 00000184H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Editor_Wire.cpp

; 11   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Editor_Wire@@6B@

; 12   : 	description.CLS		= B_EDITOR_WIRE;

	mov	DWORD PTR [esi+4], 1380261920		; 52452020H
	mov	DWORD PTR [esi+8], 1163876169		; 455f5749H
$LN163@blender_cr:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	ecx, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+324], ecx
	mov	ax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+328], ax
	mov	eax, esi
	pop	esi
	ret	8
$LN152@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 538976288				; 20202020H
	jne	$LN160@blender_cr
	cmp	eax, 1280122912				; 4c4d2020H
	jne	$LN160@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\BlenderDefault.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_default@@6B@
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 26   : 	case B_DEFAULT:			return xr_new<CBlender_default>			();		

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\BlenderDefault.cpp

; 16   : 	description.CLS		= B_DEFAULT;

	mov	DWORD PTR [esi+4], 538976288		; 20202020H
	mov	DWORD PTR [esi+8], 1280122912		; 4c4d2020H
	pop	esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	ret	8
$LN26@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 1109401632				; 42202020H
	jne	$LN160@blender_cr
	cmp	eax, 1281443181				; 4c61456dH
	jne	$LN160@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	516					; 00000204H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_LaEmB.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_LaEmB@@6B@

; 16   : 	description.CLS		= B_LaEmB;

	mov	DWORD PTR [esi+4], 1109401632		; 42202020H
	mov	DWORD PTR [esi+8], 1281443181		; 4c61456dH

; 17   : 	strcpy				(oT2_Name,	"$null");

	mov	ecx, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+324], ecx
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+328], ax

; 18   : 	strcpy				(oT2_xform,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+388], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+392], ax

; 19   : 	strcpy				(oT2_const,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+452], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+456], ax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	eax, esi
	pop	esi
	ret	8
$LN23@blender_cr:

; 24   : 	switch (cls)

	cmp	eax, 1398753106				; 535f4752H
	ja	$LN27@blender_cr
	jb	SHORT $LN153@blender_cr
	cmp	ecx, 1096359968				; 41592020H
	ja	$LN27@blender_cr
$LN153@blender_cr:
	cmp	ecx, 1096359968				; 41592020H
	jne	SHORT $LN154@blender_cr
	cmp	eax, 1398753106				; 535f4752H
	jne	SHORT $LN154@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp

; 14   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Screen_GRAY@@6B@
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp

; 15   : 	description.CLS		= B_SCREEN_GRAY;

	mov	DWORD PTR [esi+4], 1096359968		; 41592020H
	mov	DWORD PTR [esi+8], 1398753106		; 535f4752H
	pop	esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	ret	8
$LN154@blender_cr:

; 24   : 	switch (cls)

	cmp	eax, 1346458196				; 50415254H
	ja	$LN28@blender_cr
	jb	SHORT $LN155@blender_cr
	cmp	ecx, 1229147205				; 49434c45H
	ja	$LN28@blender_cr
$LN155@blender_cr:
	cmp	ecx, 1229147205				; 49434c45H
	jne	$LN156@blender_cr
	cmp	eax, 1346458196				; 50415254H
	jne	$LN156@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	348					; 0000015cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp

; 13   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Particle@@6B@

; 15   : 	description.version	= 0;

	xor	eax, eax
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+336], 0

; 67   : 	xrP_TOKEN() : IDselected(0), Count(0) {}

	mov	DWORD PTR [esi+328], 0

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+340], 255		; 000000ffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp

; 15   : 	description.version	= 0;

	mov	WORD PTR [esi+176], ax

; 17   : 	oBlend.IDselected	= 0;

	mov	DWORD PTR [esi+324], eax

; 19   : 	oAREF.min			= 0;

	mov	DWORD PTR [esi+336], eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp

; 14   : 	description.CLS		= B_PARTICLE;

	mov	DWORD PTR [esi+4], 1229147205		; 49434c45H
	mov	DWORD PTR [esi+8], 1346458196		; 50415254H

; 16   : 	oBlend.Count		= oBlendCount;

	mov	DWORD PTR [esi+328], 6

; 18   : 	oAREF.value			= 32;

	mov	DWORD PTR [esi+332], 32			; 00000020H

; 20   : 	oAREF.max			= 255;

	mov	DWORD PTR [esi+340], 255		; 000000ffH

; 21   : 	oClamp.value		= TRUE;

	mov	DWORD PTR [esi+344], 1
	pop	esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	ret	8
$LN156@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 1277173792				; 4c202020H
	jne	SHORT $LN157@blender_cr
	cmp	eax, 1297040453				; 4d4f4445H
	jne	SHORT $LN157@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	340					; 00000154H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp

; 11   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Model@@6B@

; 12   : 	description.CLS		= B_MODEL;

	mov	DWORD PTR [esi+4], 1277173792		; 4c202020H
	mov	DWORD PTR [esi+8], 1297040453		; 4d4f4445H
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 39   : 	case B_MODEL:			return xr_new<CBlender_Model>			();		

	jmp	$LN165@blender_cr
$LN157@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 1279615554				; 4c456242H
	jne	$LN160@blender_cr
	cmp	eax, 1297040453				; 4d4f4445H
	jne	$LN160@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	456					; 000001c8H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Model_EbB@@6B@

; 16   : 	description.CLS		= B_MODEL_EbB;

	mov	DWORD PTR [esi+4], 1279615554		; 4c456242H
	mov	DWORD PTR [esi+8], 1297040453		; 4d4f4445H
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 40   : 	case B_MODEL_EbB:		return xr_new<CBlender_Model_EbB>		();	

	jmp	$LN166@blender_cr
$LN28@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 1330793540				; 4f524c44H
	jne	$LN160@blender_cr
	cmp	eax, 1397251927				; 53485f57H
	jne	$LN160@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Shadow_World.cpp

; 11   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_ShWorld@@6B@
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Shadow_World.cpp

; 12   : 	description.CLS		= B_SHADOW_WORLD;

	mov	DWORD PTR [esi+4], 1330793540		; 4f524c44H
	mov	DWORD PTR [esi+8], 1397251927		; 53485f57H
	pop	esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	ret	8
$LN27@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 1411391520				; 54202020H
	jne	$LN158@blender_cr
	cmp	eax, 1398756165				; 535f5345H
	jne	$LN158@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	364					; 0000016cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Screen_SET@@6B@

; 17   : 	description.version	= 4;

	mov	eax, 4
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 67   : 	xrP_TOKEN() : IDselected(0), Count(0) {}

	mov	DWORD PTR [esi+328], 0

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+340], 255		; 000000ffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 17   : 	description.version	= 4;

	mov	WORD PTR [esi+176], ax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+336], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 16   : 	description.CLS		= B_SCREEN_SET;

	mov	DWORD PTR [esi+4], 1411391520		; 54202020H
	mov	DWORD PTR [esi+8], 1398756165		; 535f5345H

; 18   : 	oBlend.Count		= VER_4_oBlendCount;

	mov	DWORD PTR [esi+328], 9

; 19   : 	oBlend.IDselected	= 0;

	mov	DWORD PTR [esi+324], 0

; 20   : 	oAREF.value			= 32;

	mov	DWORD PTR [esi+332], 32			; 00000020H

; 21   : 	oAREF.min			= 0;
; 22   : 	oAREF.max			= 255;

	mov	DWORD PTR [esi+340], 255		; 000000ffH

; 23   : 	oZTest.value		= FALSE;

	mov	DWORD PTR [esi+344], 0

; 24   : 	oZWrite.value		= FALSE;

	mov	DWORD PTR [esi+348], 0

; 25   : 	oLighting.value		= FALSE;

	mov	DWORD PTR [esi+352], 0

; 26   : 	oFog.value			= FALSE;

	mov	DWORD PTR [esi+356], 0

; 27   : 	oClamp.value		= TRUE;

	mov	DWORD PTR [esi+360], 1
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	mov	DWORD PTR [esi+336], 0
	pop	esi
	ret	8
$LN158@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 538976288				; 20202020H
	jne	SHORT $LN159@blender_cr
	cmp	eax, 1444945952				; 56202020H
	jne	SHORT $LN159@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Vertex@@6B@
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 28   : 	case B_VERT:			return xr_new<CBlender_Vertex>			();		

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex.cpp

; 16   : 	description.CLS		= B_VERT;

	mov	DWORD PTR [esi+4], 538976288		; 20202020H
	mov	DWORD PTR [esi+8], 1444945952		; 56202020H
	pop	esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 46   : }

	ret	8
$LN159@blender_cr:

; 24   : 	switch (cls)

	cmp	ecx, 1162223648				; 45462020H
	jne	SHORT $LN160@blender_cr
	cmp	eax, 1449083218				; 565f4152H
	jne	SHORT $LN160@blender_cr
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	340					; 00000154H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex_aref.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Vertex_aref@@6B@

; 16   : 	description.CLS		= B_VERT_AREF;

	mov	DWORD PTR [esi+4], 1162223648		; 45462020H
	mov	DWORD PTR [esi+8], 1449083218		; 565f4152H
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\FStaticRender_Blenders.cpp

; 29   : 	case B_VERT_AREF:		return xr_new<CBlender_Vertex_aref>		();	

	jmp	$LN165@blender_cr
$LN160@blender_cr:

; 41   : 	case B_DETAIL:			return xr_new<CBlender_Detail_Still>	();	
; 42   : 	case B_TREE:			return xr_new<CBlender_Tree>			();	
; 43   : 	case B_PARTICLE:		return xr_new<CBlender_Particle>		();
; 44   : 	}
; 45   : 	return 0;

	xor	eax, eax
	pop	esi

; 46   : }

	ret	8
?blender_create@CRender@@UAEPAVIBlender@@_K@Z ENDP	; CRender::blender_create
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\BlenderDefault.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\BlenderDefault.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_default@@@@YAPAVCBlender_default@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_default@@@@YAPAVCBlender_default@@XZ PROC ; xr_new<CBlender_default>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\BlenderDefault.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_default@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\BlenderDefault.cpp

; 16   : 	description.CLS		= B_DEFAULT;

	mov	DWORD PTR [esi+4], 538976288		; 20202020H
	mov	DWORD PTR [esi+8], 1280122912		; 4c4d2020H
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_default@@@@YAPAVCBlender_default@@XZ ENDP ; xr_new<CBlender_default>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_default_aref.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_default_aref.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_default_aref.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_default_aref@@@@YAPAVCBlender_default_aref@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_default_aref@@@@YAPAVCBlender_default_aref@@XZ PROC ; xr_new<CBlender_default_aref>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	340					; 00000154H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_default_aref.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_default_aref@@6B@

; 17   : 	description.version	= 1;

	mov	eax, 1
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+328], 0
	mov	DWORD PTR [esi+332], 255		; 000000ffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_default_aref.cpp

; 17   : 	description.version	= 1;

	mov	WORD PTR [esi+176], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_default_aref.cpp

; 16   : 	description.CLS		= B_DEFAULT_AREF;

	mov	DWORD PTR [esi+4], 1380271648		; 52454620H
	mov	DWORD PTR [esi+8], 1280139073		; 4c4d5f41H

; 18   : 	oAREF.value			= 32;

	mov	DWORD PTR [esi+324], 32			; 00000020H

; 19   : 	oAREF.min			= 0;

	mov	DWORD PTR [esi+328], 0

; 20   : 	oAREF.max			= 255;

	mov	DWORD PTR [esi+332], 255		; 000000ffH

; 21   : 	oBlend.value		= FALSE;

	mov	DWORD PTR [esi+336], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_default_aref@@@@YAPAVCBlender_default_aref@@XZ ENDP ; xr_new<CBlender_default_aref>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Vertex@@@@YAPAVCBlender_Vertex@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Vertex@@@@YAPAVCBlender_Vertex@@XZ PROC ; xr_new<CBlender_Vertex>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Vertex@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex.cpp

; 16   : 	description.CLS		= B_VERT;

	mov	DWORD PTR [esi+4], 538976288		; 20202020H
	mov	DWORD PTR [esi+8], 1444945952		; 56202020H
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Vertex@@@@YAPAVCBlender_Vertex@@XZ ENDP ; xr_new<CBlender_Vertex>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex_aref.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex_aref.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex_aref.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Vertex_aref@@@@YAPAVCBlender_Vertex_aref@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Vertex_aref@@@@YAPAVCBlender_Vertex_aref@@XZ PROC ; xr_new<CBlender_Vertex_aref>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	340					; 00000154H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex_aref.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Vertex_aref@@6B@

; 17   : 	description.version	= 1;

	mov	eax, 1
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+328], 0
	mov	DWORD PTR [esi+332], 255		; 000000ffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex_aref.cpp

; 17   : 	description.version	= 1;

	mov	WORD PTR [esi+176], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Vertex_aref.cpp

; 16   : 	description.CLS		= B_VERT_AREF;

	mov	DWORD PTR [esi+4], 1162223648		; 45462020H
	mov	DWORD PTR [esi+8], 1449083218		; 565f4152H

; 18   : 	oAREF.value			= 32;

	mov	DWORD PTR [esi+324], 32			; 00000020H

; 19   : 	oAREF.min			= 0;

	mov	DWORD PTR [esi+328], 0

; 20   : 	oAREF.max			= 255;

	mov	DWORD PTR [esi+332], 255		; 000000ffH

; 21   : 	oBlend.value		= FALSE;

	mov	DWORD PTR [esi+336], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Vertex_aref@@@@YAPAVCBlender_Vertex_aref@@XZ ENDP ; xr_new<CBlender_Vertex_aref>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Screen_SET@@@@YAPAVCBlender_Screen_SET@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Screen_SET@@@@YAPAVCBlender_Screen_SET@@XZ PROC ; xr_new<CBlender_Screen_SET>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	364					; 0000016cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Screen_SET@@6B@

; 17   : 	description.version	= 4;

	mov	eax, 4
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 67   : 	xrP_TOKEN() : IDselected(0), Count(0) {}

	mov	DWORD PTR [esi+328], 0

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+336], 0
	mov	DWORD PTR [esi+340], 255		; 000000ffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 17   : 	description.version	= 4;

	mov	WORD PTR [esi+176], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 16   : 	description.CLS		= B_SCREEN_SET;

	mov	DWORD PTR [esi+4], 1411391520		; 54202020H
	mov	DWORD PTR [esi+8], 1398756165		; 535f5345H

; 18   : 	oBlend.Count		= VER_4_oBlendCount;

	mov	DWORD PTR [esi+328], 9

; 19   : 	oBlend.IDselected	= 0;

	mov	DWORD PTR [esi+324], 0

; 20   : 	oAREF.value			= 32;

	mov	DWORD PTR [esi+332], 32			; 00000020H

; 21   : 	oAREF.min			= 0;

	mov	DWORD PTR [esi+336], 0

; 22   : 	oAREF.max			= 255;

	mov	DWORD PTR [esi+340], 255		; 000000ffH

; 23   : 	oZTest.value		= FALSE;

	mov	DWORD PTR [esi+344], 0

; 24   : 	oZWrite.value		= FALSE;

	mov	DWORD PTR [esi+348], 0

; 25   : 	oLighting.value		= FALSE;

	mov	DWORD PTR [esi+352], 0

; 26   : 	oFog.value			= FALSE;

	mov	DWORD PTR [esi+356], 0

; 27   : 	oClamp.value		= TRUE;

	mov	DWORD PTR [esi+360], 1
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Screen_SET@@@@YAPAVCBlender_Screen_SET@@XZ ENDP ; xr_new<CBlender_Screen_SET>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Screen_GRAY@@@@YAPAVCBlender_Screen_GRAY@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Screen_GRAY@@@@YAPAVCBlender_Screen_GRAY@@XZ PROC ; xr_new<CBlender_Screen_GRAY>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp

; 14   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Screen_GRAY@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Screen_GRAY.cpp

; 15   : 	description.CLS		= B_SCREEN_GRAY;

	mov	DWORD PTR [esi+4], 1096359968		; 41592020H
	mov	DWORD PTR [esi+8], 1398753106		; 535f4752H
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Screen_GRAY@@@@YAPAVCBlender_Screen_GRAY@@XZ ENDP ; xr_new<CBlender_Screen_GRAY>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Editor_Wire.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Editor_Wire@@@@YAPAVCBlender_Editor_Wire@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Editor_Wire@@@@YAPAVCBlender_Editor_Wire@@XZ PROC ; xr_new<CBlender_Editor_Wire>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	388					; 00000184H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Editor_Wire.cpp

; 11   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Editor_Wire@@6B@

; 12   : 	description.CLS		= B_EDITOR_WIRE;

	mov	DWORD PTR [esi+4], 1380261920		; 52452020H
	mov	DWORD PTR [esi+8], 1163876169		; 455f5749H

; 13   : 	strcpy				(oT_Factor,"$null");

	mov	ecx, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+324], ecx
	mov	ax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+328], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Editor_Wire@@@@YAPAVCBlender_Editor_Wire@@XZ ENDP ; xr_new<CBlender_Editor_Wire>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Editor_Selection.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Editor_Selection@@@@YAPAVCBlender_Editor_Selection@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Editor_Selection@@@@YAPAVCBlender_Editor_Selection@@XZ PROC ; xr_new<CBlender_Editor_Selection>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	388					; 00000184H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Editor_Selection.cpp

; 11   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Editor_Selection@@6B@

; 12   : 	description.CLS		= B_EDITOR_SEL;

	mov	DWORD PTR [esi+4], 1277173792		; 4c202020H
	mov	DWORD PTR [esi+8], 1163875141		; 455f5345H

; 13   : 	strcpy				(oT_Factor,"$null");

	mov	ecx, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+324], ecx
	mov	ax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+328], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Editor_Selection@@@@YAPAVCBlender_Editor_Selection@@XZ ENDP ; xr_new<CBlender_Editor_Selection>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_LaEmB.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_LaEmB@@@@YAPAVCBlender_LaEmB@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_LaEmB@@@@YAPAVCBlender_LaEmB@@XZ PROC ; xr_new<CBlender_LaEmB>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	516					; 00000204H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_LaEmB.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_LaEmB@@6B@

; 16   : 	description.CLS		= B_LaEmB;

	mov	DWORD PTR [esi+4], 1109401632		; 42202020H
	mov	DWORD PTR [esi+8], 1281443181		; 4c61456dH

; 17   : 	strcpy				(oT2_Name,	"$null");

	mov	ecx, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+324], ecx
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+328], ax

; 18   : 	strcpy				(oT2_xform,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+388], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+392], ax

; 19   : 	strcpy				(oT2_const,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+452], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+456], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_LaEmB@@@@YAPAVCBlender_LaEmB@@XZ ENDP ; xr_new<CBlender_LaEmB>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_LmEbB@@@@YAPAVCBlender_LmEbB@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_LmEbB@@@@YAPAVCBlender_LmEbB@@XZ PROC ; xr_new<CBlender_LmEbB>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	456					; 000001c8H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_LmEbB@@6B@

; 17   : 	description.version	= 0x1;

	mov	eax, 1
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 52   : 	xrP_BOOL() : value(FALSE) {}

	mov	DWORD PTR [esi+452], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Lm(EbB).cpp

; 17   : 	description.version	= 0x1;

	mov	WORD PTR [esi+176], ax
	mov	DWORD PTR [esi+4], 1109401632		; 42202020H
	mov	DWORD PTR [esi+8], 1282229602		; 4c6d4562H

; 18   : 	strcpy				(oT2_Name,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+324], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+328], ax

; 19   : 	strcpy				(oT2_xform,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+388], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+392], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_LmEbB@@@@YAPAVCBlender_LmEbB@@XZ ENDP ; xr_new<CBlender_LmEbB>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_BmmD@@@@YAPAVCBlender_BmmD@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_BmmD@@@@YAPAVCBlender_BmmD@@XZ PROC	; xr_new<CBlender_BmmD>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebx
	push	esi
	push	edi
	push	708					; 000002c4H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	ebx, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 15   : {

	mov	ecx, ebx
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [ebx], OFFSET ??_7CBlender_BmmD@@6B@

; 20   : 	strcpy				(oR_Name,	"detail\\detail_grnd_grass");	//"$null");

	lea	edi, DWORD PTR [ebx+452]
	mov	DWORD PTR [ebx+4], 1869374496		; 6f6c6420H
	mov	esi, OFFSET ??_C@_0BJ@KEGKNGAI@detail?2detail_grnd_grass@
	mov	DWORD PTR [ebx+8], 1114467652		; 426d6d44H
	mov	ecx, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [ebx+324], ecx
	mov	ecx, 6
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [ebx+328], ax
	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [ebx+388], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [ebx+392], ax
	mov	eax, 3
	mov	WORD PTR [ebx+176], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_BmmD.cpp

; 20   : 	strcpy				(oR_Name,	"detail\\detail_grnd_grass");	//"$null");

	rep movsd

; 21   : 	strcpy				(oG_Name,	"detail\\detail_grnd_asphalt");	//"$null");

	mov	ecx, 6
	movsb
	lea	edi, DWORD PTR [ebx+516]
	mov	esi, OFFSET ??_C@_0BL@OIEFDNLP@detail?2detail_grnd_asphalt@
	rep movsd

; 22   : 	strcpy				(oB_Name,	"detail\\detail_grnd_earth");	//"$null");

	mov	ecx, 6
	movsw
	movsb
	lea	edi, DWORD PTR [ebx+580]
	mov	esi, OFFSET ??_C@_0BJ@CADHLPDP@detail?2detail_grnd_earth@
	rep movsd

; 23   : 	strcpy				(oA_Name,	"detail\\detail_grnd_yantar");	//"$null");

	mov	ecx, 6
	movsb
	lea	edi, DWORD PTR [ebx+644]
	mov	esi, OFFSET ??_C@_0BK@KBPALGEA@detail?2detail_grnd_yantar@
	rep movsd
	movsw
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	edi
	pop	esi
	pop	ebx

; 70   : }

	ret	0
??$xr_new@VCBlender_BmmD@@@@YAPAVCBlender_BmmD@@XZ ENDP	; xr_new<CBlender_BmmD>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Shadow_World.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Shadow_World.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_ShWorld@@@@YAPAVCBlender_ShWorld@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_ShWorld@@@@YAPAVCBlender_ShWorld@@XZ PROC ; xr_new<CBlender_ShWorld>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Shadow_World.cpp

; 11   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_ShWorld@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Shadow_World.cpp

; 12   : 	description.CLS		= B_SHADOW_WORLD;

	mov	DWORD PTR [esi+4], 1330793540		; 4f524c44H
	mov	DWORD PTR [esi+8], 1397251927		; 53485f57H
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_ShWorld@@@@YAPAVCBlender_ShWorld@@XZ ENDP ; xr_new<CBlender_ShWorld>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Blur@@@@YAPAVCBlender_Blur@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Blur@@@@YAPAVCBlender_Blur@@XZ PROC	; xr_new<CBlender_Blur>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp

; 11   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Blur@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp

; 12   : 	description.CLS		= B_BLUR;

	mov	DWORD PTR [esi+4], 538976288		; 20202020H
	mov	DWORD PTR [esi+8], 1112298834		; 424c5552H
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Blur@@@@YAPAVCBlender_Blur@@XZ ENDP	; xr_new<CBlender_Blur>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Model@@@@YAPAVCBlender_Model@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Model@@@@YAPAVCBlender_Model@@XZ PROC ; xr_new<CBlender_Model>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	340					; 00000154H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp

; 11   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Model@@6B@

; 13   : 	description.version	= 1;

	mov	eax, 1
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+328], 0
	mov	DWORD PTR [esi+332], 255		; 000000ffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp

; 13   : 	description.version	= 1;

	mov	WORD PTR [esi+176], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp

; 12   : 	description.CLS		= B_MODEL;

	mov	DWORD PTR [esi+4], 1277173792		; 4c202020H
	mov	DWORD PTR [esi+8], 1297040453		; 4d4f4445H

; 14   : 	oAREF.value			= 32;

	mov	DWORD PTR [esi+324], 32			; 00000020H

; 15   : 	oAREF.min			= 0;

	mov	DWORD PTR [esi+328], 0

; 16   : 	oAREF.max			= 255;

	mov	DWORD PTR [esi+332], 255		; 000000ffH

; 17   : 	oBlend.value		= FALSE;

	mov	DWORD PTR [esi+336], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Model@@@@YAPAVCBlender_Model@@XZ ENDP ; xr_new<CBlender_Model>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Model_EbB@@@@YAPAVCBlender_Model_EbB@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Model_EbB@@@@YAPAVCBlender_Model_EbB@@XZ PROC ; xr_new<CBlender_Model_EbB>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	456					; 000001c8H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Model_EbB@@6B@

; 17   : 	description.version	= 0x1;

	mov	eax, 1
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 52   : 	xrP_BOOL() : value(FALSE) {}

	mov	DWORD PTR [esi+452], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Model_EbB.cpp

; 17   : 	description.version	= 0x1;

	mov	WORD PTR [esi+176], ax
	mov	DWORD PTR [esi+4], 1279615554		; 4c456242H
	mov	DWORD PTR [esi+8], 1297040453		; 4d4f4445H

; 18   : 	strcpy				(oT2_Name,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+324], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+328], ax

; 19   : 	strcpy				(oT2_xform,	"$null");

	mov	eax, DWORD PTR ??_C@_05CAGGJGBB@$null@
	mov	DWORD PTR [esi+388], eax
	movzx	eax, WORD PTR ??_C@_05CAGGJGBB@$null@+4
	mov	WORD PTR [esi+392], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Model_EbB@@@@YAPAVCBlender_Model_EbB@@XZ ENDP ; xr_new<CBlender_Model_EbB>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_detail_still.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_detail_still.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Detail_Still@@@@YAPAVCBlender_Detail_Still@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Detail_Still@@@@YAPAVCBlender_Detail_Still@@XZ PROC ; xr_new<CBlender_Detail_Still>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	328					; 00000148H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_detail_still.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ

; 17   : 	description.version	= 0;

	xor	eax, eax
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Detail_Still@@6B@
	mov	WORD PTR [esi+176], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 52   : 	xrP_BOOL() : value(FALSE) {}

	mov	DWORD PTR [esi+324], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_detail_still.cpp

; 16   : 	description.CLS		= B_DETAIL;

	mov	DWORD PTR [esi+4], 1229736992		; 494c4c20H
	mov	DWORD PTR [esi+8], 1147097940		; 445f5354H
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Detail_Still@@@@YAPAVCBlender_Detail_Still@@XZ ENDP ; xr_new<CBlender_Detail_Still>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_tree.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_tree.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Tree@@@@YAPAVCBlender_Tree@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Tree@@@@YAPAVCBlender_Tree@@XZ PROC	; xr_new<CBlender_Tree>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	332					; 0000014cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_tree.cpp

; 15   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ

; 17   : 	description.version	= 1;

	mov	eax, 1
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Tree@@6B@
	mov	WORD PTR [esi+176], ax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_tree.cpp

; 16   : 	description.CLS		= B_TREE;

	mov	DWORD PTR [esi+4], 1162158112		; 45452020H
	mov	DWORD PTR [esi+8], 1147098194		; 445f5452H

; 18   : 	oBlend.value		= FALSE;

	mov	DWORD PTR [esi+324], 0

; 19   : 	oNotAnTree.value	= FALSE;

	mov	DWORD PTR [esi+328], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Tree@@@@YAPAVCBlender_Tree@@XZ ENDP	; xr_new<CBlender_Tree>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_Particle@@@@YAPAVCBlender_Particle@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_Particle@@@@YAPAVCBlender_Particle@@XZ PROC ; xr_new<CBlender_Particle>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	348					; 0000015cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp

; 13   : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Particle@@6B@

; 15   : 	description.version	= 0;

	xor	eax, eax
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+336], 0

; 67   : 	xrP_TOKEN() : IDselected(0), Count(0) {}

	mov	DWORD PTR [esi+328], 0

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+340], 255		; 000000ffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp

; 15   : 	description.version	= 0;

	mov	WORD PTR [esi+176], ax

; 17   : 	oBlend.IDselected	= 0;

	mov	DWORD PTR [esi+324], eax

; 19   : 	oAREF.min			= 0;

	mov	DWORD PTR [esi+336], eax
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Particle.cpp

; 14   : 	description.CLS		= B_PARTICLE;

	mov	DWORD PTR [esi+4], 1229147205		; 49434c45H
	mov	DWORD PTR [esi+8], 1346458196		; 50415254H

; 16   : 	oBlend.Count		= oBlendCount;

	mov	DWORD PTR [esi+328], 6

; 18   : 	oAREF.value			= 32;

	mov	DWORD PTR [esi+332], 32			; 00000020H

; 20   : 	oAREF.max			= 255;

	mov	DWORD PTR [esi+340], 255		; 000000ffH

; 21   : 	oClamp.value		= TRUE;

	mov	DWORD PTR [esi+344], 1
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_Particle@@@@YAPAVCBlender_Particle@@XZ ENDP ; xr_new<CBlender_Particle>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_delete@VIBlender@@@@YAXAAPAVIBlender@@@Z
_TEXT	SEGMENT
??$xr_delete@VIBlender@@@@YAXAAPAVIBlender@@@Z PROC	; xr_delete<IBlender>, COMDAT
; _ptr$ = ecx

; 150  : {

	push	edi
	mov	edi, ecx

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN2@xr_delete

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	esi
	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [edi]
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);
; 154  : 		ptr = nullptr;

	mov	DWORD PTR [edi], 0
	pop	esi
$LN2@xr_delete:

; 155  : 	}
; 156  : }

	pop	edi
	ret	0
??$xr_delete@VIBlender@@@@YAXAAPAVIBlender@@@Z ENDP	; xr_delete<IBlender>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??R?$xr_special_free@$00VIBlender@@@@QAEXAAPAVIBlender@@@Z
_TEXT	SEGMENT
_ptr$ = 8						; size = 4
??R?$xr_special_free@$00VIBlender@@@@QAEXAAPAVIBlender@@@Z PROC ; xr_special_free<1,IBlender>::operator(), COMDAT
; _this$dead$ = ecx

; 131  : 	{

	push	esi

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	mov	esi, DWORD PTR _ptr$[esp]
	push	edi
	push	DWORD PTR [esi]
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi
	pop	esi

; 135  : 	}

	ret	4
??R?$xr_special_free@$00VIBlender@@@@QAEXAAPAVIBlender@@@Z ENDP ; xr_special_free<1,IBlender>::operator()
_TEXT	ENDS
END
