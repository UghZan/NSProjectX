; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\blender_model.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@KFKLFFDO@MODEL?3?5Default@		; `string'
PUBLIC	??_C@_0BC@ENKEGKEF@Use?5alpha?9channel@		; `string'
PUBLIC	??_C@_0BF@PGNJICMH@CBlender_Model?3?3Load@	; `string'
PUBLIC	??_C@_0EC@FKLPKNEI@I?3?2Vitalya?2mine?2NSProjectX?2laye@ ; `string'
PUBLIC	??_C@_0N@NADMPAFJ@model_def_hq@			; `string'
PUBLIC	??_C@_0N@NHDFFIIF@model_def_lq@			; `string'
PUBLIC	??_R2CBlender_Model@@8				; CBlender_Model::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBlender_Model@@8			; CBlender_Model::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3CBlender_Model@@8				; CBlender_Model::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCBlender_Model@@@8			; CBlender_Model `RTTI Type Descriptor'
PUBLIC	??_R4CBlender_Model@@6B@			; CBlender_Model::`RTTI Complete Object Locator'
PUBLIC	??_7CBlender_Model@@6B@				; CBlender_Model::`vftable'
;	COMDAT ?ignore_always@?O@??Load@CBlender_Model@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?O@??Load@CBlender_Model@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Model::Load'::`14'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?6??Load@CBlender_Model@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?6??Load@CBlender_Model@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Model::Load'::`7'::ignore_always
_BSS	ENDS
;	COMDAT ??_7CBlender_Model@@6B@
CONST	SEGMENT
??_7CBlender_Model@@6B@ DD FLAT:??_R4CBlender_Model@@6B@ ; CBlender_Model::`vftable'
	DD	FLAT:?getName@IBlender@@UAEPBDXZ
	DD	FLAT:?getComment@CBlender_Model@@UAEPBDXZ
	DD	FLAT:?Save@CBlender_Model@@UAEXAAVIWriter@@@Z
	DD	FLAT:?Load@CBlender_Model@@UAEXAAVIReader@@G@Z
	DD	FLAT:?canBeDetailed@IBlender@@UAEHXZ
	DD	FLAT:?canBeLMAPped@CBlender_Model@@UAEHXZ
	DD	FLAT:?Compile@CBlender_Model@@UAEXAAVCBlender_Compile@@@Z
	DD	FLAT:??_ECBlender_Model@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CBlender_Model@@6B@
rdata$r	SEGMENT
??_R4CBlender_Model@@6B@ DD 00H				; CBlender_Model::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBlender_Model@@@8
	DD	FLAT:??_R3CBlender_Model@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBlender_Model@@@8
data$rs	SEGMENT
??_R0?AVCBlender_Model@@@8 DD FLAT:??_7type_info@@6B@	; CBlender_Model `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBlender_Model@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CBlender_Model@@8
rdata$r	SEGMENT
??_R3CBlender_Model@@8 DD 00H				; CBlender_Model::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBlender_Model@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBlender_Model@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBlender_Model@@8 DD FLAT:??_R0?AVCBlender_Model@@@8 ; CBlender_Model::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBlender_Model@@8
rdata$r	ENDS
;	COMDAT ??_R2CBlender_Model@@8
rdata$r	SEGMENT
??_R2CBlender_Model@@8 DD FLAT:??_R1A@?0A@EA@CBlender_Model@@8 ; CBlender_Model::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IBlender@@8
	DD	FLAT:??_R1A@?0A@EA@CPropertyBase@@8
rdata$r	ENDS
;	COMDAT ??_C@_0N@NHDFFIIF@model_def_lq@
CONST	SEGMENT
??_C@_0N@NHDFFIIF@model_def_lq@ DB 'model_def_lq', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NADMPAFJ@model_def_hq@
CONST	SEGMENT
??_C@_0N@NADMPAFJ@model_def_hq@ DB 'model_def_hq', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@FKLPKNEI@I?3?2Vitalya?2mine?2NSProjectX?2laye@
CONST	SEGMENT
??_C@_0EC@FKLPKNEI@I?3?2Vitalya?2mine?2NSProjectX?2laye@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PGNJICMH@CBlender_Model?3?3Load@
CONST	SEGMENT
??_C@_0BF@PGNJICMH@CBlender_Model?3?3Load@ DB 'CBlender_Model::Load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ENKEGKEF@Use?5alpha?9channel@
CONST	SEGMENT
??_C@_0BC@ENKEGKEF@Use?5alpha?9channel@ DB 'Use alpha-channel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KFKLFFDO@MODEL?3?5Default@
CONST	SEGMENT
??_C@_0P@KFKLFFDO@MODEL?3?5Default@ DB 'MODEL: Default', 00H ; `string'
PUBLIC	?Compile@CBlender_Model@@UAEXAAVCBlender_Compile@@@Z ; CBlender_Model::Compile
PUBLIC	?Load@CBlender_Model@@UAEXAAVIReader@@G@Z	; CBlender_Model::Load
PUBLIC	?Save@CBlender_Model@@UAEXAAVIWriter@@@Z	; CBlender_Model::Save
PUBLIC	??1CBlender_Model@@UAE@XZ			; CBlender_Model::~CBlender_Model
PUBLIC	??_GCBlender_Model@@UAEPAXI@Z			; CBlender_Model::`scalar deleting destructor'
PUBLIC	??0CBlender_Model@@QAE@XZ			; CBlender_Model::CBlender_Model
PUBLIC	?canBeLMAPped@CBlender_Model@@UAEHXZ		; CBlender_Model::canBeLMAPped
PUBLIC	?getComment@CBlender_Model@@UAEPBDXZ		; CBlender_Model::getComment
EXTRN	??_ECBlender_Model@@UAEPAXI@Z:PROC		; CBlender_Model::`vector deleting destructor'
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.h
;	COMDAT ?getComment@CBlender_Model@@UAEPBDXZ
_TEXT	SEGMENT
?getComment@CBlender_Model@@UAEPBDXZ PROC		; CBlender_Model::getComment, COMDAT
; _this$ = ecx

; 15   : 	virtual		LPCSTR		getComment()	{ return "MODEL: Default"; }

	mov	eax, OFFSET ??_C@_0P@KFKLFFDO@MODEL?3?5Default@
	ret	0
?getComment@CBlender_Model@@UAEPBDXZ ENDP		; CBlender_Model::getComment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.h
;	COMDAT ?canBeLMAPped@CBlender_Model@@UAEHXZ
_TEXT	SEGMENT
?canBeLMAPped@CBlender_Model@@UAEHXZ PROC		; CBlender_Model::canBeLMAPped, COMDAT
; _this$ = ecx

; 16   : 	virtual		BOOL		canBeLMAPped()	{ return FALSE; }

	xor	eax, eax
	ret	0
?canBeLMAPped@CBlender_Model@@UAEHXZ ENDP		; CBlender_Model::canBeLMAPped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
_TEXT	SEGMENT
??0CBlender_Model@@QAE@XZ PROC				; CBlender_Model::CBlender_Model
; _this$ = ecx

; 11   : {

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Model@@6B@

; 13   : 	description.version	= 1;

	mov	eax, 1
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+328], 0
	mov	DWORD PTR [esi+332], 255		; 000000ffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp

; 13   : 	description.version	= 1;

	mov	WORD PTR [esi+176], ax

; 14   : 	oAREF.value			= 32;
; 15   : 	oAREF.min			= 0;
; 16   : 	oAREF.max			= 255;
; 17   : 	oBlend.value		= FALSE;
; 18   : }

	mov	eax, esi
	mov	DWORD PTR [esi+4], 1277173792		; 4c202020H
	mov	DWORD PTR [esi+8], 1297040453		; 4d4f4445H
	mov	DWORD PTR [esi+324], 32			; 00000020H
	mov	DWORD PTR [esi+328], 0
	mov	DWORD PTR [esi+332], 255		; 000000ffH
	mov	DWORD PTR [esi+336], 0
	pop	esi
	ret	0
??0CBlender_Model@@QAE@XZ ENDP				; CBlender_Model::CBlender_Model
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
;	COMDAT ??_GCBlender_Model@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBlender_Model@@UAEPAXI@Z PROC			; CBlender_Model::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 21   : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Model@@6B@

; 22   : 	
; 23   : }

	call	DWORD PTR __imp_??1IBlender@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	340					; 00000154H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCBlender_Model@@UAEPAXI@Z ENDP			; CBlender_Model::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
_TEXT	SEGMENT
??1CBlender_Model@@UAE@XZ PROC				; CBlender_Model::~CBlender_Model
; _this$ = ecx

; 21   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CBlender_Model@@6B@

; 22   : 	
; 23   : }

	jmp	DWORD PTR __imp_??1IBlender@@UAE@XZ
??1CBlender_Model@@UAE@XZ ENDP				; CBlender_Model::~CBlender_Model
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
?Save@CBlender_Model@@UAEXAAVIWriter@@@Z PROC		; CBlender_Model::Save
; _this$ = ecx

; 26   : {

	push	ebx
	push	esi

; 27   : 	IBlender::Save		(fs);

	mov	esi, DWORD PTR _fs$[esp+4]
	push	edi
	push	esi
	mov	edi, ecx
	call	DWORD PTR __imp_?Save@IBlender@@UAEXAAVIWriter@@@Z
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	push	6
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp

; 28   : 	xrPWRITE_PROP		(fs,"Use alpha-channel",	xrPID_BOOL,		oBlend);

	lea	ebx, DWORD PTR [edi+336]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_0BC@ENKEGKEF@Use?5alpha?9channel@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN4@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	4
	push	ebx
	call	DWORD PTR [eax+12]
$LN4@Save:

; 101  : 	fs.w_u32(ID);

	push	4
	mov	ecx, esi
	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_09HNLHEELD@Alpha?5ref@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp

; 29   : 	xrPWRITE_PROP		(fs,"Alpha ref",			xrPID_INTEGER,	oAREF);

	add	edi, 324				; 00000144H
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 103  : 	if (data && size)	fs.w(data, size);

	je	SHORT $LN7@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	12					; 0000000cH
	push	edi
	call	DWORD PTR [eax+12]
$LN7@Save:
	pop	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp

; 30   : }

	pop	esi
	pop	ebx
	ret	4
?Save@CBlender_Model@@UAEXAAVIWriter@@@Z ENDP		; CBlender_Model::Save
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
_version$ = 12						; size = 2
?Load@CBlender_Model@@UAEXAAVIReader@@G@Z PROC		; CBlender_Model::Load
; _this$ = ecx

; 33   : {

	push	ebx

; 34   : 	IBlender::Load		(fs,version);

	mov	ebx, DWORD PTR _fs$[esp]
	push	esi
	mov	esi, DWORD PTR _version$[esp+4]
	push	edi
	push	esi
	push	ebx
	mov	edi, ecx
	call	DWORD PTR __imp_?Load@IBlender@@UAEXAAVIReader@@G@Z

; 35   : 
; 36   : 	switch (version)	

	movzx	eax, si
	sub	eax, 0
	je	$LN22@Load

; 46   : 		xrPREAD_PROP	(fs,xrPID_BOOL,		oBlend);

	cmp	BYTE PTR ?ignore_always@?6??Load@CBlender_Model@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN4@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, ebx
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, ebx
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp

; 46   : 		xrPREAD_PROP	(fs,xrPID_BOOL,		oBlend);

	cmp	esi, 6
	je	SHORT $LN4@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?6??Load@CBlender_Model@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BF@PGNJICMH@CBlender_Model?3?3Load@
	push	46					; 0000002eH
	push	OFFSET ??_C@_0EC@FKLPKNEI@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN4@Load:
	push	4
	lea	eax, DWORD PTR [edi+336]
	mov	ecx, ebx
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z

; 47   : 		xrPREAD_PROP	(fs,xrPID_INTEGER,	oAREF);

	cmp	BYTE PTR ?ignore_always@?O@??Load@CBlender_Model@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN9@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, ebx
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, ebx
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp

; 47   : 		xrPREAD_PROP	(fs,xrPID_INTEGER,	oAREF);

	cmp	esi, 4
	je	SHORT $LN9@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?O@??Load@CBlender_Model@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BF@PGNJICMH@CBlender_Model?3?3Load@
	push	47					; 0000002fH
	push	OFFSET ??_C@_0EC@FKLPKNEI@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@OMCBIJFA@xrPID_INTEGER?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN9@Load:
	push	12					; 0000000cH
	lea	eax, DWORD PTR [edi+324]
	mov	ecx, ebx
	push	eax
	call	DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z
	pop	edi

; 48   : 		break;
; 49   : 	}
; 50   : }

	pop	esi
	pop	ebx
	ret	8
$LN22@Load:

; 37   : 	{
; 38   : 	case 0: 
; 39   : 		oAREF.value			= 32;

	mov	DWORD PTR [edi+324], 32			; 00000020H

; 40   : 		oAREF.min			= 0;

	mov	DWORD PTR [edi+328], 0

; 41   : 		oAREF.max			= 255;

	mov	DWORD PTR [edi+332], 255		; 000000ffH

; 42   : 		oBlend.value		= FALSE;

	mov	DWORD PTR [edi+336], 0
	pop	edi

; 48   : 		break;
; 49   : 	}
; 50   : }

	pop	esi
	pop	ebx
	ret	8
?Load@CBlender_Model@@UAEXAAVIReader@@G@Z ENDP		; CBlender_Model::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Model.cpp
_TEXT	SEGMENT
_C$ = 8							; size = 4
?Compile@CBlender_Model@@UAEXAAVCBlender_Compile@@@Z PROC ; CBlender_Model::Compile
; _this$ = ecx

; 53   : {

	push	esi
	push	edi

; 54   : 	IBlender::Compile		(C);

	mov	edi, DWORD PTR _C$[esp+4]
	mov	esi, ecx
	push	edi
	call	DWORD PTR __imp_?Compile@IBlender@@UAEXAAVCBlender_Compile@@@Z

; 55   : 	if (C.bEditor)

	cmp	DWORD PTR [edi+44], 0
	je	$LN4@Compile

; 56   : 	{
; 57   : 		C.PassBegin		();

	mov	ecx, edi
	call	DWORD PTR __imp_?PassBegin@CBlender_Compile@@QAEXXZ

; 58   : 		{
; 59   : 			C.PassSET_ZB		(TRUE,oBlend.value&&(oAREF.value<200)?FALSE:TRUE);

	cmp	DWORD PTR [esi+336], 0
	je	SHORT $LN93@Compile
	cmp	DWORD PTR [esi+324], 200		; 000000c8H
	jge	SHORT $LN93@Compile
	xor	eax, eax
	jmp	SHORT $LN23@Compile
$LN93@Compile:
	mov	eax, 1
$LN23@Compile:
	push	0
	push	eax
	push	1
	mov	ecx, edi
	call	DWORD PTR __imp_?PassSET_ZB@CBlender_Compile@@QAEXHHH@Z

; 60   : 			if (oBlend.value)	C.PassSET_Blend_BLEND	(TRUE,oAREF.value);

	cmp	DWORD PTR [esi+336], 0
	mov	ecx, edi
	je	SHORT $LN6@Compile
	push	DWORD PTR [esi+324]
	push	1
	call	DWORD PTR __imp_?PassSET_Blend_BLEND@CBlender_Compile@@QAEXHI@Z
	jmp	SHORT $LN7@Compile
$LN6@Compile:

; 61   : 			else				C.PassSET_Blend_SET		();

	push	0
	push	0
	call	DWORD PTR __imp_?PassSET_Blend_SET@CBlender_Compile@@QAEXHI@Z
$LN7@Compile:

; 62   : 			C.PassSET_LightFog	(TRUE,TRUE);

	push	1
	push	1
	mov	ecx, edi
	call	DWORD PTR __imp_?PassSET_LightFog@CBlender_Compile@@QAEXHH@Z

; 63   : 			C.StageBegin		();

	mov	ecx, edi
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 64   : 			C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_MODULATE,		D3DTA_DIFFUSE);

	push	0
	push	4
	push	2
	mov	ecx, edi
	call	DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z

; 65   : 			C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,	D3DTA_DIFFUSE);

	push	0
	push	2
	push	2
	mov	ecx, edi
	call	DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z

; 66   : 			C.StageSET_TMC		(oT_Name,	"$null",	"$null",	0		);

	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	lea	eax, DWORD PTR [esi+196]
	mov	ecx, edi
	push	eax
	call	DWORD PTR __imp_?StageSET_TMC@CBlender_Compile@@QAEXPBD00H@Z

; 67   : 			C.StageEnd			();

	mov	ecx, edi
	call	DWORD PTR __imp_?StageEnd@CBlender_Compile@@QAEXXZ

; 68   : 		}
; 69   : 		C.PassEnd			();

	mov	ecx, edi
	call	DWORD PTR __imp_?PassEnd@CBlender_Compile@@QAEXXZ

; 114  : 			C.r_End				();
; 115  : 			break;
; 116  : 		}
; 117  : 	}
; 118  : }

	pop	edi
	pop	esi
	ret	4
$LN4@Compile:

; 70   : 	} else {
; 71   : 		LPCSTR	vsname		= 0;
; 72   : 		LPCSTR	psname		= 0;
; 73   : 		switch (C.iElement)

	mov	eax, DWORD PTR [edi+60]
	cmp	eax, 4
	ja	$LN2@Compile
	jmp	DWORD PTR $LN94@Compile[eax*4]
$LN8@Compile:

; 74   : 		{
; 75   : 		case SE_R1_NORMAL_HQ:	
; 76   : 			vsname = psname =	"model_def_hq";
; 77   : 			if (oBlend.value)	C.r_Pass	(vsname,psname,TRUE,TRUE,TRUE,TRUE,D3DBLEND_SRCALPHA,	D3DBLEND_INVSRCALPHA,	TRUE,oAREF.value);

	cmp	DWORD PTR [esi+336], 0
	mov	ecx, edi
	je	SHORT $LN9@Compile
	push	DWORD PTR [esi+324]
	push	1
	push	6
	push	5
	push	1
	jmp	SHORT $LN95@Compile
$LN9@Compile:

; 78   : 			else				C.r_Pass	(vsname,psname,TRUE);

	push	0
	push	0
	push	1
	push	2
	push	0
$LN95@Compile:

; 79   : 			C.r_Sampler			("s_base",	C.L_textures[0]);

	push	1
	push	1
	push	1
	push	OFFSET ??_C@_0N@NADMPAFJ@model_def_hq@
	push	OFFSET ??_C@_0N@NADMPAFJ@model_def_hq@
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z
	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [edi]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 80   : 			C.r_Sampler_clf		("s_lmap",	"$user$projector",true);

	push	1
	push	OFFSET ??_C@_0BA@KMBCAHDL@$user$projector@
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z

; 114  : 			C.r_End				();
; 115  : 			break;
; 116  : 		}
; 117  : 	}
; 118  : }

	mov	ecx, edi
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	ret	4
$LN11@Compile:

; 81   : 			C.r_End				();
; 82   : 			break;
; 83   : 		case SE_R1_NORMAL_LQ:
; 84   : 			vsname = psname =	"model_def_lq"; 
; 85   : 			if (oBlend.value)	C.r_Pass	(vsname,psname,TRUE,TRUE,TRUE,TRUE,D3DBLEND_SRCALPHA,	D3DBLEND_INVSRCALPHA,	TRUE,oAREF.value);

	cmp	DWORD PTR [esi+336], 0
	mov	ecx, edi
	je	SHORT $LN12@Compile
	push	DWORD PTR [esi+324]
	push	1
	push	6
	push	5
	push	1
	jmp	SHORT $LN97@Compile
$LN12@Compile:

; 86   : 			else				C.r_Pass	(vsname,psname,TRUE);

	push	0
	push	0
	push	1
	push	2
	push	0
$LN97@Compile:

; 87   : 			C.r_Sampler			("s_base",	C.L_textures[0]);

	push	1
	push	1
	push	1
	push	OFFSET ??_C@_0N@NHDFFIIF@model_def_lq@
	push	OFFSET ??_C@_0N@NHDFFIIF@model_def_lq@
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z
	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [edi]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 114  : 			C.r_End				();
; 115  : 			break;
; 116  : 		}
; 117  : 	}
; 118  : }

	mov	ecx, edi
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	ret	4
$LN14@Compile:

; 88   : 			C.r_End				();
; 89   : 			break;
; 90   : 		case SE_R1_LPOINT:
; 91   : 			vsname				= "model_def_point";
; 92   : 			psname				= "add_point";
; 93   : 			if (oBlend.value)	C.r_Pass	(vsname,psname,FALSE,TRUE,FALSE,TRUE,D3DBLEND_ONE,	D3DBLEND_ONE,TRUE,oAREF.value);

	cmp	DWORD PTR [esi+336], 0
	mov	ecx, edi
	je	SHORT $LN15@Compile
	push	DWORD PTR [esi+324]
	jmp	SHORT $LN98@Compile
$LN15@Compile:

; 94   : 			else				C.r_Pass	(vsname,psname,FALSE,TRUE,FALSE,TRUE,D3DBLEND_ONE,	D3DBLEND_ONE,TRUE);

	push	0
$LN98@Compile:

; 95   : 			C.r_Sampler			("s_base",	C.L_textures[0]);

	push	1
	push	2
	push	2
	push	1
	push	0
	push	1
	push	0
	push	OFFSET ??_C@_09PNJHBAHM@add_point@
	push	OFFSET ??_C@_0BA@CHNPMDJB@model_def_point@
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z
	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [edi]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 96   : 			C.r_Sampler_clf		("s_lmap",	TEX_POINT_ATT);

	mov	esi, DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z
	mov	ecx, edi
	push	0
	push	OFFSET ??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	call	esi

; 97   : 			C.r_Sampler_clf		("s_att",	TEX_POINT_ATT);

	push	0
	push	OFFSET ??_C@_0CB@JJPBGPCM@internal?2internal_light_attpoin@
	push	OFFSET ??_C@_05OCPJJFDB@s_att@
	mov	ecx, edi
	call	esi

; 114  : 			C.r_End				();
; 115  : 			break;
; 116  : 		}
; 117  : 	}
; 118  : }

	mov	ecx, edi
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	ret	4
$LN17@Compile:

; 98   : 			C.r_End				();
; 99   : 			break;
; 100  : 		case SE_R1_LSPOT:
; 101  : 			vsname				= "model_def_spot";
; 102  : 			psname				= "add_spot";
; 103  : 			if (oBlend.value)	C.r_Pass	(vsname,psname,FALSE,TRUE,FALSE,TRUE,D3DBLEND_ONE,	D3DBLEND_ONE,TRUE,oAREF.value);

	cmp	DWORD PTR [esi+336], 0
	mov	ecx, edi
	je	SHORT $LN18@Compile
	push	DWORD PTR [esi+324]
	jmp	SHORT $LN99@Compile
$LN18@Compile:

; 104  : 			else				C.r_Pass	(vsname,psname,FALSE,TRUE,FALSE,TRUE,D3DBLEND_ONE,	D3DBLEND_ONE,TRUE);

	push	0
$LN99@Compile:

; 105  : 			C.r_Sampler			("s_base",	C.L_textures[0]);

	push	1
	push	2
	push	2
	push	1
	push	0
	push	1
	push	0
	push	OFFSET ??_C@_08FJPLAIEP@add_spot@
	push	OFFSET ??_C@_0P@HBJADFCE@model_def_spot@
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z
	push	2
	push	2
	push	2
	push	1
	push	0
	push	ecx
	mov	ecx, esp
	push	DWORD PTR [edi]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	push	OFFSET ??_C@_06GMJOKNLF@s_base@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Sampler@CBlender_Compile@@QAEIPBDVshared_str@@_NIIII@Z

; 106  : 			C.r_Sampler_clf		("s_lmap",	"internal\\internal_light_att",		true);

	mov	esi, DWORD PTR __imp_?r_Sampler_clf@CBlender_Compile@@QAEXPBD0_N@Z
	mov	ecx, edi
	push	1
	push	OFFSET ??_C@_0BM@EOCKFCCB@internal?2internal_light_att@
	push	OFFSET ??_C@_06LBGPDNGG@s_lmap@
	call	esi

; 107  : 			C.r_Sampler_clf		("s_att",	TEX_SPOT_ATT);

	push	0
	push	OFFSET ??_C@_0CA@EOOCFOEF@internal?2internal_light_attclip@
	push	OFFSET ??_C@_05OCPJJFDB@s_att@
	mov	ecx, edi
	call	esi

; 114  : 			C.r_End				();
; 115  : 			break;
; 116  : 		}
; 117  : 	}
; 118  : }

	mov	ecx, edi
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
	pop	edi
	pop	esi
	ret	4
$LN20@Compile:

; 108  : 			C.r_End				();
; 109  : 			break;
; 110  : 		case SE_R1_LMODELS:
; 111  : 			vsname				= "model_def_shadow";
; 112  : 			psname				= "model_shadow";
; 113  : 			C.r_Pass			(vsname,psname,FALSE,FALSE,FALSE,TRUE,D3DBLEND_ZERO,D3DBLEND_SRCCOLOR,FALSE,0);

	push	0
	push	0
	push	3
	push	1
	push	1
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0N@IMEFDHE@model_shadow@
	push	OFFSET ??_C@_0BB@IEACFODB@model_def_shadow@
	mov	ecx, edi
	call	DWORD PTR __imp_?r_Pass@CBlender_Compile@@QAEXPBD0_NHHHW4_D3DBLEND@@2HI@Z

; 114  : 			C.r_End				();
; 115  : 			break;
; 116  : 		}
; 117  : 	}
; 118  : }

	mov	ecx, edi
	call	DWORD PTR __imp_?r_End@CBlender_Compile@@QAEXXZ
$LN2@Compile:
	pop	edi
	pop	esi
	ret	4
	npad	1
$LN94@Compile:
	DD	$LN8@Compile
	DD	$LN11@Compile
	DD	$LN14@Compile
	DD	$LN17@Compile
	DD	$LN20@Compile
?Compile@CBlender_Model@@UAEXAAVCBlender_Compile@@@Z ENDP ; CBlender_Model::Compile
_TEXT	ENDS
END
