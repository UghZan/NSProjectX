; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\texture.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_04LIKELABK@?4dds@				; `string'
PUBLIC	??_C@_04LJDDIHIK@?4bmp@				; `string'
PUBLIC	??_C@_04LJKCLGJN@?4ogm@				; `string'
PUBLIC	??_C@_0BI@FMGLLBBG@reduce_lod_texture_list@	; `string'
PUBLIC	??_C@_01JOAMLHOP@?9@				; `string'
PUBLIC	??_C@_06KBNGGNOA@debug?2@			; `string'
PUBLIC	??_C@_0BH@OACCKGFG@?$CK?5debug?5texture?5save?3?5@ ; `string'
PUBLIC	??_C@_07OEMEBOMM@TW_Save@			; `string'
PUBLIC	??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@ ; `string'
PUBLIC	??_C@_0CM@PDOCIGOA@D3DXSaveTextureToFile?5?$CIfn2?0D3DX@ ; `string'
PUBLIC	??_C@_0BK@JBFABEAB@TW_LoadTextureFromTexture@	; `string'
PUBLIC	??_C@_0CH@PAHHMDAA@t_from?9?$DOGetLevelDesc?5?$CI0?0?$CGt_from@ ; `string'
PUBLIC	??_C@_0GK@CKIDGDAJ@D3DXCreateTexture?$CI?5HW?4pDevice?0?5@ ; `string'
PUBLIC	??_C@_0CG@NEOANJPP@T_src?9?$DOGetSurfaceLevel?5?$CIL_src?0?$CG@ ; `string'
PUBLIC	??_C@_0CG@HDNPPJAD@T_dst?9?$DOGetSurfaceLevel?5?$CIL_dst?0?$CG@ ; `string'
PUBLIC	??_C@_0EP@JHNLLMBI@D3DXLoadSurfaceFromSurface?$CIS_ds@ ; `string'
PUBLIC	??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@	; `string'
PUBLIC	??_C@_06PHGPEBHN@fRName@			; `string'
PUBLIC	??_C@_09FPDELHFD@fRName?$FL0?$FN@		; `string'
PUBLIC	??_C@_0BA@PHFBKPHL@$game_textures$@		; `string'
PUBLIC	??_C@_05GDMGLBHI@_bump@				; `string'
PUBLIC	??_C@_0N@DDCKMNJI@$game_saves$@			; `string'
PUBLIC	??_C@_0BK@MOGOLMPM@?$CB?5Can?8t?5find?5texture?5?8?$CFs?8@ ; `string'
PUBLIC	??_C@_0BL@OKPHIHGP@ed?2ed_not_existing_texture@	; `string'
PUBLIC	??_C@_0EH@CJGABLCE@FS?4exist?$CIfn?0?5?$CC$game_textures$?$CC?0@ ; `string'
PUBLIC	??_C@_01CPLAODJH@S@				; `string'
PUBLIC	??_C@_0CI@KKHLLFGK@?$CB?5Can?8t?5get?5image?5info?5for?5text@ ; `string'
PUBLIC	??_C@_0EJ@GNBJIJEJ@FS?4exist?$CItemp?0?5?$CC$game_textures$@ ; `string'
PUBLIC	??_C@_0BE@BIPAIHNA@xr_strcmp?$CItemp?0?5fn?$CJ@	; `string'
PUBLIC	??_C@_0BK@PFDFKJEB@?$CB?5Can?8t?5load?5texture?5?8?$CFs?8@ ; `string'
PUBLIC	??_C@_06OABEEINO@_bump?$CD@			; `string'
PUBLIC	??_C@_0BC@CCPNEJGH@ed?2ed_dummy_bump?$CD@	; `string'
PUBLIC	??_C@_0P@POJCEHBH@ed_dummy_bump?$CD@		; `string'
PUBLIC	??_C@_0DN@NLHBJNAC@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@ ; `string'
PUBLIC	??_C@_0BB@FNDIKPME@ed?2ed_dummy_bump@		; `string'
PUBLIC	??_C@_0O@OEDLBAOK@ed_dummy_bump@		; `string'
PUBLIC	??_C@_0DM@NJJHOGEI@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@ ; `string'
PUBLIC	??_C@_0CO@KDADHIM@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@ ; `string'
PUBLIC	??_C@_0MH@GMHDJPOF@D3DXCreateTextureFromFileInMemo@ ; `string'
PUBLIC	??_C@_0HC@PLKLKLLD@D3DXCreateTexture?5?$CIHW?4pDevice?0I@ ; `string'
PUBLIC	??_C@_0GO@LFIEPOOB@D3DXComputeNormalMap?5?$CIT_normal_@ ; `string'
PUBLIC	??_C@_0P@CFKJOMKE@TW_Iterate_1OP@		; `string'
PUBLIC	??_C@_0BP@LNIDIILK@mips?5?$DN?$DN?5t_src?9?$DOGetLevelCount?$CI?$CJ@ ; `string'
PUBLIC	?ignore_always@?3???$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z@4_NA ; `TW_Iterate_1OP<unsigned int (__cdecl*)(unsigned int,unsigned int)>'::`4'::ignore_always
EXTRN	__imp__D3DXComputeNormalMap@24:PROC
EXTRN	__imp_?error@xrDebug@@QAEXJPBD00H0AA_N@Z:PROC
EXTRN	__imp__D3DXCreateTextureFromFileInMemoryEx@60:PROC
EXTRN	__imp__D3DXCreateCubeTextureFromFileInMemoryEx@56:PROC
EXTRN	__imp__D3DXGetImageInfoFromFileInMemory@12:PROC
EXTRN	__imp_?exist@CLocatorAPI@@QAEPBUfile@1@AAY0CAI@DPBD11@Z:PROC
EXTRN	__imp__D3DXSaveTextureToFileA@16:PROC
EXTRN	__imp_?Log@@YAXPBD0@Z:PROC
EXTRN	__imp_?strconcat@@YAPADHPADPBD11@Z:PROC
EXTRN	__imp_?strconcat@@YAPADHPADPBD1111@Z:PROC
EXTRN	__imp_?psTextureLOD@@3HA:DWORD
EXTRN	__imp__stricmp:PROC
;	COMDAT ?ignore_always@?3???$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3???$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z@4_NA DB 01H DUP (?) ; `TW_Iterate_1OP<unsigned int (__cdecl*)(unsigned int,unsigned int)>'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?GK@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?GK@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`106'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?GG@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?GG@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`102'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?GC@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?GC@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`98'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?FO@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?FO@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`94'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?FK@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?FK@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`90'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?FG@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?FG@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`86'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?EP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?EP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`79'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?EL@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?EL@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`75'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?DP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?DP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`63'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?DL@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?DL@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`59'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?DD@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?DD@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`51'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?CP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`47'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CE@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?CE@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`36'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CA@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?CA@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`32'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BJ@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BJ@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`25'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BE@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BE@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`20'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?7??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?7??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`8'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA DB 01H DUP (?) ; `CRender::texture_load'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BI@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BI@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA DB 01H DUP (?) ; `TW_LoadTextureFromTexture'::`24'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BE@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BE@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA DB 01H DUP (?) ; `TW_LoadTextureFromTexture'::`20'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BA@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BA@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA DB 01H DUP (?) ; `TW_LoadTextureFromTexture'::`16'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?9??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA
_BSS	SEGMENT
?ignore_always@?9??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA DB 01H DUP (?) ; `TW_LoadTextureFromTexture'::`10'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA DB 01H DUP (?) ; `TW_LoadTextureFromTexture'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?6??TW_Save@@YAXPAUIDirect3DTexture9@@PBD11@Z@4_NA
_BSS	SEGMENT
?ignore_always@?6??TW_Save@@YAXPAUIDirect3DTexture9@@PBD11@Z@4_NA DB 01H DUP (?) ; `TW_Save'::`7'::ignore_always
_BSS	ENDS
;	COMDAT ??_C@_0BP@LNIDIILK@mips?5?$DN?$DN?5t_src?9?$DOGetLevelCount?$CI?$CJ@
CONST	SEGMENT
??_C@_0BP@LNIDIILK@mips?5?$DN?$DN?5t_src?9?$DOGetLevelCount?$CI?$CJ@ DB 'm'
	DB	'ips == t_src->GetLevelCount()', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CFKJOMKE@TW_Iterate_1OP@
CONST	SEGMENT
??_C@_0P@CFKJOMKE@TW_Iterate_1OP@ DB 'TW_Iterate_1OP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GO@LFIEPOOB@D3DXComputeNormalMap?5?$CIT_normal_@
CONST	SEGMENT
??_C@_0GO@LFIEPOOB@D3DXComputeNormalMap?5?$CIT_normal_@ DB 'D3DXComputeNo'
	DB	'rmalMap (T_normal_1,T_base,0,D3DX_NORMALMAP_COMPUTE_OCCLUSION'
	DB	',D3DX_CHANNEL_LUMINANCE,_BUMPHEIGH)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@PLKLKLLD@D3DXCreateTexture?5?$CIHW?4pDevice?0I@
CONST	SEGMENT
??_C@_0HC@PLKLKLLD@D3DXCreateTexture?5?$CIHW?4pDevice?0I@ DB 'D3DXCreateT'
	DB	'exture (HW.pDevice,IMG.Width,IMG.Height,D3DX_DEFAULT,0,D3DFMT'
	DB	'_A8R8G8B8,D3DPOOL_SYSTEMMEM, &T_normal_1)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0MH@GMHDJPOF@D3DXCreateTextureFromFileInMemo@
CONST	SEGMENT
??_C@_0MH@GMHDJPOF@D3DXCreateTextureFromFileInMemo@ DB 'D3DXCreateTexture'
	DB	'FromFileInMemoryEx( HW.pDevice, S->pointer(),S->length(), D3D'
	DB	'X_DEFAULT,D3DX_DEFAULT, D3DX_DEFAULT,0,D3DFMT_A8R8G8B8, D3DPO'
	DB	'OL_SYSTEMMEM, D3DX_DEFAULT,D3DX_DEFAULT, 0,&IMG,0,&T_base )', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@KDADHIM@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@
CONST	SEGMENT
??_C@_0CO@KDADHIM@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@ DB 'FS.ex'
	DB	'ist(fn,"$game_textures$", fname, ".dds")', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@NJJHOGEI@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@
CONST	SEGMENT
??_C@_0DM@NJJHOGEI@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@ DB 'FS.e'
	DB	'xist(fn,"$game_textures$", "ed\\ed_dummy_bump", ".dds")', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OEDLBAOK@ed_dummy_bump@
CONST	SEGMENT
??_C@_0O@OEDLBAOK@ed_dummy_bump@ DB 'ed_dummy_bump', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FNDIKPME@ed?2ed_dummy_bump@
CONST	SEGMENT
??_C@_0BB@FNDIKPME@ed?2ed_dummy_bump@ DB 'ed\ed_dummy_bump', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@NLHBJNAC@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@
CONST	SEGMENT
??_C@_0DN@NLHBJNAC@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@ DB 'FS.e'
	DB	'xist(fn,"$game_textures$", "ed\\ed_dummy_bump#", ".dds")', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@POJCEHBH@ed_dummy_bump?$CD@
CONST	SEGMENT
??_C@_0P@POJCEHBH@ed_dummy_bump?$CD@ DB 'ed_dummy_bump#', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CCPNEJGH@ed?2ed_dummy_bump?$CD@
CONST	SEGMENT
??_C@_0BC@CCPNEJGH@ed?2ed_dummy_bump?$CD@ DB 'ed\ed_dummy_bump#', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OABEEINO@_bump?$CD@
CONST	SEGMENT
??_C@_06OABEEINO@_bump?$CD@ DB '_bump#', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PFDFKJEB@?$CB?5Can?8t?5load?5texture?5?8?$CFs?8@
CONST	SEGMENT
??_C@_0BK@PFDFKJEB@?$CB?5Can?8t?5load?5texture?5?8?$CFs?8@ DB '! Can''t l'
	DB	'oad texture ''%s''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BIPAIHNA@xr_strcmp?$CItemp?0?5fn?$CJ@
CONST	SEGMENT
??_C@_0BE@BIPAIHNA@xr_strcmp?$CItemp?0?5fn?$CJ@ DB 'xr_strcmp(temp, fn)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@GNBJIJEJ@FS?4exist?$CItemp?0?5?$CC$game_textures$@
CONST	SEGMENT
??_C@_0EJ@GNBJIJEJ@FS?4exist?$CItemp?0?5?$CC$game_textures$@ DB 'FS.exist'
	DB	'(temp, "$game_textures$", "ed\\ed_not_existing_texture", ".dd'
	DB	's")', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@KKHLLFGK@?$CB?5Can?8t?5get?5image?5info?5for?5text@
CONST	SEGMENT
??_C@_0CI@KKHLLFGK@?$CB?5Can?8t?5get?5image?5info?5for?5text@ DB '! Can'''
	DB	't get image info for texture ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S@
CONST	SEGMENT
??_C@_01CPLAODJH@S@ DB 'S', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@CJGABLCE@FS?4exist?$CIfn?0?5?$CC$game_textures$?$CC?0@
CONST	SEGMENT
??_C@_0EH@CJGABLCE@FS?4exist?$CIfn?0?5?$CC$game_textures$?$CC?0@ DB 'FS.e'
	DB	'xist(fn, "$game_textures$", "ed\\ed_not_existing_texture", ".'
	DB	'dds")', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OKPHIHGP@ed?2ed_not_existing_texture@
CONST	SEGMENT
??_C@_0BL@OKPHIHGP@ed?2ed_not_existing_texture@ DB 'ed\ed_not_existing_te'
	DB	'xture', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MOGOLMPM@?$CB?5Can?8t?5find?5texture?5?8?$CFs?8@
CONST	SEGMENT
??_C@_0BK@MOGOLMPM@?$CB?5Can?8t?5find?5texture?5?8?$CFs?8@ DB '! Can''t f'
	DB	'ind texture ''%s''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DDCKMNJI@$game_saves$@
CONST	SEGMENT
??_C@_0N@DDCKMNJI@$game_saves$@ DB '$game_saves$', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05GDMGLBHI@_bump@
CONST	SEGMENT
??_C@_05GDMGLBHI@_bump@ DB '_bump', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PHFBKPHL@$game_textures$@
CONST	SEGMENT
??_C@_0BA@PHFBKPHL@$game_textures$@ DB '$game_textures$', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FPDELHFD@fRName?$FL0?$FN@
CONST	SEGMENT
??_C@_09FPDELHFD@fRName?$FL0?$FN@ DB 'fRName[0]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PHGPEBHN@fRName@
CONST	SEGMENT
??_C@_06PHGPEBHN@fRName@ DB 'fRName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
CONST	SEGMENT
??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@ DB 'CRender::texture_load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@JHNLLMBI@D3DXLoadSurfaceFromSurface?$CIS_ds@
CONST	SEGMENT
??_C@_0EP@JHNLLMBI@D3DXLoadSurfaceFromSurface?$CIS_ds@ DB 'D3DXLoadSurfac'
	DB	'eFromSurface(S_dst,NULL,NULL,S_src,NULL,NULL,D3DX_FILTER_NONE'
	DB	',0)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HDNPPJAD@T_dst?9?$DOGetSurfaceLevel?5?$CIL_dst?0?$CG@
CONST	SEGMENT
??_C@_0CG@HDNPPJAD@T_dst?9?$DOGetSurfaceLevel?5?$CIL_dst?0?$CG@ DB 'T_dst'
	DB	'->GetSurfaceLevel (L_dst,&S_dst)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NEOANJPP@T_src?9?$DOGetSurfaceLevel?5?$CIL_src?0?$CG@
CONST	SEGMENT
??_C@_0CG@NEOANJPP@T_src?9?$DOGetSurfaceLevel?5?$CIL_src?0?$CG@ DB 'T_src'
	DB	'->GetSurfaceLevel (L_src,&S_src)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@CKIDGDAJ@D3DXCreateTexture?$CI?5HW?4pDevice?0?5@
CONST	SEGMENT
??_C@_0GK@CKIDGDAJ@D3DXCreateTexture?$CI?5HW?4pDevice?0?5@ DB 'D3DXCreate'
	DB	'Texture( HW.pDevice, top_width,top_height, levels_exist,0,t_d'
	DB	'est_fmt, D3DPOOL_MANAGED,&t_dest )', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PAHHMDAA@t_from?9?$DOGetLevelDesc?5?$CI0?0?$CGt_from@
CONST	SEGMENT
??_C@_0CH@PAHHMDAA@t_from?9?$DOGetLevelDesc?5?$CI0?0?$CGt_from@ DB 't_fro'
	DB	'm->GetLevelDesc (0,&t_from_desc0)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JBFABEAB@TW_LoadTextureFromTexture@
CONST	SEGMENT
??_C@_0BK@JBFABEAB@TW_LoadTextureFromTexture@ DB 'TW_LoadTextureFromTextu'
	DB	're', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@PDOCIGOA@D3DXSaveTextureToFile?5?$CIfn2?0D3DX@
CONST	SEGMENT
??_C@_0CM@PDOCIGOA@D3DXSaveTextureToFile?5?$CIfn2?0D3DX@ DB 'D3DXSaveText'
	DB	'ureToFile (fn2,D3DXIFF_DDS,T,0)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
CONST	SEGMENT
??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\layers\xrRender\Texture.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OEMEBOMM@TW_Save@
CONST	SEGMENT
??_C@_07OEMEBOMM@TW_Save@ DB 'TW_Save', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OACCKGFG@?$CK?5debug?5texture?5save?3?5@
CONST	SEGMENT
??_C@_0BH@OACCKGFG@?$CK?5debug?5texture?5save?3?5@ DB '* debug texture sa'
	DB	've: ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06KBNGGNOA@debug?2@
CONST	SEGMENT
??_C@_06KBNGGNOA@debug?2@ DB 'debug\', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9@ DB '-', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FMGLLBBG@reduce_lod_texture_list@
CONST	SEGMENT
??_C@_0BI@FMGLLBBG@reduce_lod_texture_list@ DB 'reduce_lod_texture_list', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LJKCLGJN@?4ogm@
CONST	SEGMENT
??_C@_04LJKCLGJN@?4ogm@ DB '.ogm', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LJDDIHIK@?4bmp@
CONST	SEGMENT
??_C@_04LJDDIHIK@?4bmp@ DB '.bmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LIKELABK@?4dds@
CONST	SEGMENT
??_C@_04LIKELABK@?4dds@ DB '.dds', 00H			; `string'
PUBLIC	?xr_strlen@@YAIPBD@Z				; xr_strlen
PUBLIC	??$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z ; TW_Iterate_1OP<unsigned int (__cdecl*)(unsigned int,unsigned int)>
PUBLIC	??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UItem@CInifile@@@std@@@std@@@std@@QBEPBUItem@CInifile@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CInifile::Item> > >::operator->
PUBLIC	?texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z ; CRender::texture_load
PUBLIC	?it_gloss_rev_base@@YAIII@Z			; it_gloss_rev_base
PUBLIC	?TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU1@AAW4_D3DFORMAT@@HAAI2@Z ; TW_LoadTextureFromTexture
PUBLIC	?Reduce@@YAXAAH000@Z				; Reduce
PUBLIC	?calc_texture_size@@YAIHII@Z			; calc_texture_size
PUBLIC	?get_texture_load_lod@@YAHPBD@Z			; get_texture_load_lod
PUBLIC	?fix_texture_name@@YAXPAD@Z			; fix_texture_name
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
_TEXT	SEGMENT
?fix_texture_name@@YAXPAD@Z PROC			; fix_texture_name
; _fn$ = ecx

; 16   : {

	push	esi
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 171  : {	return (char*) strrchr(S,'.');	}

	push	46					; 0000002eH
	push	ecx
	call	DWORD PTR __imp__strrchr
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 17   : 	LPSTR _ext = strext(fn);

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 171  : {	return (char*) strrchr(S,'.');	}

	add	esp, 8
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 18   : 	if(  _ext					&&

	test	esi, esi
	je	SHORT $LN2@fix_textur
	push	edi
	mov	edi, DWORD PTR __imp__stricmp
	push	OFFSET ??_C@_04JCAPCJAP@?4tga@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@fix_textur
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@fix_textur
	push	OFFSET ??_C@_04LJDDIHIK@?4bmp@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@fix_textur
	push	OFFSET ??_C@_04LJKCLGJN@?4ogm@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@fix_textur
$LN3@fix_textur:

; 19   : 	  (0==stricmp(_ext,".tga")	||
; 20   : 		0==stricmp(_ext,".dds")	||
; 21   : 		0==stricmp(_ext,".bmp")	||
; 22   : 		0==stricmp(_ext,".ogm")	) )
; 23   : 		*_ext = 0;

	mov	BYTE PTR [esi], 0
$LN7@fix_textur:
	pop	edi
$LN2@fix_textur:
	pop	esi

; 24   : }

	ret	0
?fix_texture_name@@YAXPAD@Z ENDP			; fix_texture_name
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
_TEXT	SEGMENT
?get_texture_load_lod@@YAHPBD@Z PROC			; get_texture_load_lod
; _fn$ = ecx

; 27   : {

	push	ebx
	push	ebp
	mov	ebp, ecx

; 28   : 	CInifile::Sect& sect	= pSettings->r_section("reduce_lod_texture_list");

	mov	ecx, DWORD PTR __imp_?pSettings@@3PAVCInifile@@A
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@FMGLLBBG@reduce_lod_texture_list@
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_section@CInifile@@QAEAAUSect@1@PBD@Z

; 29   : 	CInifile::SectCIt it_	= sect.Data.begin();
; 30   : 	CInifile::SectCIt it_e_	= sect.Data.end();
; 31   : 
; 32   : 	CInifile::SectCIt it	= it_;

	mov	esi, DWORD PTR [eax+4]

; 33   : 	CInifile::SectCIt it_e	= it_e_;

	mov	edi, DWORD PTR [eax+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 150  :         return _Ptr == _Right._Ptr;

	cmp	esi, edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 35   : 	for(;it!=it_e;++it)

	je	SHORT $LN3@get_textur
	mov	ebx, DWORD PTR __imp__strstr
	npad	7
$LL4@get_textur:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrstring.h

; 68   : 	str_c				c_str		() const						{	return p_?p_->value:0;							}

	mov	ecx, DWORD PTR [esi]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 37   : 		if( strstr(fn, it->first.c_str()) )

	lea	eax, DWORD PTR [ecx+12]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, eax
	push	ecx
	push	ebp
	call	ebx
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN38@get_textur
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 74   :         ++_Ptr;

	add	esi, 8

; 150  :         return _Ptr == _Right._Ptr;

	cmp	esi, edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 35   : 	for(;it!=it_e;++it)

	jne	SHORT $LL4@get_textur
$LN3@get_textur:

; 43   : 				return 1;
; 44   : 			else
; 45   : 				return 2;
; 46   : 		}
; 47   : 	}
; 48   : 
; 49   : 	if(psTextureLOD<2)

	mov	eax, DWORD PTR __imp_?psTextureLOD@@3HA
	mov	eax, DWORD PTR [eax]
	cmp	eax, 2
	jge	SHORT $LN10@get_textur
$LN43@get_textur:
	pop	edi

; 56   : }

	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
	ret	0
$LN38@get_textur:

; 38   : 		{
; 39   : 			if(psTextureLOD<1)

	mov	eax, DWORD PTR __imp_?psTextureLOD@@3HA
	mov	eax, DWORD PTR [eax]
	cmp	eax, 1
	jl	SHORT $LN43@get_textur

; 40   : 				return 0;
; 41   : 			else
; 42   : 			if(psTextureLOD<3)

	cmp	eax, 3
	jmp	SHORT $LN44@get_textur
$LN10@get_textur:

; 50   : 		return 0;
; 51   : 	else
; 52   : 	if(psTextureLOD<4)

	cmp	eax, 4
$LN44@get_textur:

; 53   : 		return 1;

	mov	eax, 1
	jl	SHORT $LN13@get_textur

; 54   : 	else
; 55   : 		return 2;

	mov	eax, 2
$LN13@get_textur:
	pop	edi

; 56   : }

	pop	esi
	pop	ebp
	pop	ebx
	ret	0
?get_texture_load_lod@@YAHPBD@Z ENDP			; get_texture_load_lod
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
_TEXT	SEGMENT
tv313 = -4						; size = 4
_a$1 = -4						; size = 4
_res$ = -4						; size = 4
_orig_size$ = 8						; size = 4
?calc_texture_size@@YAIHII@Z PROC			; calc_texture_size
; _lod$ = ecx
; _mip_cnt$ = edx

; 59   : {

	push	ecx

; 60   : 	if(1==mip_cnt)

	mov	eax, DWORD PTR _orig_size$[esp]
	cmp	edx, 1
	je	$LN1@calc_textu

; 64   : 	float res		= float(orig_size);

	fild	DWORD PTR _orig_size$[esp]
	test	eax, eax
	jns	SHORT $LN17@calc_textu
	fadd	DWORD PTR __real@4f800000
$LN17@calc_textu:

; 65   : 
; 66   : 	while(_lod>0){

	movss	xmm2, DWORD PTR __real@3f400c4b
	fstp	DWORD PTR _res$[esp+4]
	movss	xmm1, DWORD PTR _res$[esp+4]
	cmp	ecx, 8
	jl	SHORT $LC12@calc_textu

; 61   : 		return orig_size;
; 62   : 
; 63   : 	int _lod		= lod;

	lea	edx, DWORD PTR [ecx-8]
	shr	edx, 3
	inc	edx
	lea	eax, DWORD PTR [edx*8]
	sub	ecx, eax

; 65   : 
; 66   : 	while(_lod>0){

$LL13@calc_textu:

; 67   : 		--_lod;
; 68   : 		res		-= res/1.333f;

	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	sub	edx, 1
	jne	SHORT $LL13@calc_textu
$LC12@calc_textu:

; 65   : 
; 66   : 	while(_lod>0){

	test	ecx, ecx
	jle	SHORT $LN11@calc_textu
$LC2@calc_textu:

; 67   : 		--_lod;
; 68   : 		res		-= res/1.333f;

	movaps	xmm0, xmm1
	dec	ecx
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	test	ecx, ecx
	jg	SHORT $LC2@calc_textu
$LN11@calc_textu:
	push	esi
	push	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 83   :     int a			= *(const int*)(&x);

	movss	DWORD PTR _a$1[esp+12], xmm1

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ecx, 158				; 0000009eH
	mov	edi, DWORD PTR _a$1[esp+12]

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	mov	edx, 1
	mov	eax, edi

; 91   :         a			>>=	31;

	mov	esi, edi
	sar	eax, 23					; 00000017H
	movzx	eax, al
	sub	ecx, eax
	sar	esi, 31					; 0000001fH
	mov	eax, edi
	or	eax, -8388608				; ff800000H
	shl	eax, 8
	shr	eax, cl
	sub	ecx, 96					; 00000060H
	shl	edx, cl
	dec	edx
	sar	edx, 8
	and	edx, edi
	neg	edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 70   : 	return iFloor	(res);

	pop	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	sbb	edx, edx

; 89   :         exponent	-=	(31-127)+32;

	add	ecx, 64					; 00000040H
	inc	edx

; 90   :         exponent	>>=	31;

	sar	ecx, 31					; 0000001fH

; 91   :         a			>>=	31;

	and	edx, esi

; 92   :         r			-=	(imask&a);

	sub	eax, edx

; 93   :         r			&=	exponent;

	and	eax, ecx
	xor	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 70   : 	return iFloor	(res);

	pop	esi
$LN1@calc_textu:

; 71   : }

	pop	ecx
	ret	0
?calc_texture_size@@YAIHII@Z ENDP			; calc_texture_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
;	COMDAT ?Reduce@@YAXAAH000@Z
_TEXT	SEGMENT
_l$ = 8							; size = 4
_skip$ = 12						; size = 4
?Reduce@@YAXAAH000@Z PROC				; Reduce, COMDAT
; _w$ = ecx
; _h$ = edx

; 84   : {

	push	ebx

; 85   : 	while ((l>1) && skip)

	mov	ebx, DWORD PTR _l$[esp]
	push	edi
	mov	edi, edx
	cmp	DWORD PTR [ebx], 1
	jle	SHORT $LN11@Reduce
	push	ebp
	mov	ebp, DWORD PTR _skip$[esp+8]
	push	esi
	mov	esi, DWORD PTR [ebp]
$LL2@Reduce:
	test	esi, esi
	je	SHORT $LN12@Reduce

; 86   : 	{
; 87   : 		w /= 2;

	mov	eax, DWORD PTR [ecx]

; 88   : 		h /= 2;
; 89   : 		l -= 1;
; 90   : 
; 91   : 		skip--;

	dec	esi
	dec	DWORD PTR [ebx]
	cdq
	sub	eax, edx
	mov	DWORD PTR [ebp], esi
	sar	eax, 1
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edi]
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	DWORD PTR [ebx], 1
	mov	DWORD PTR [edi], eax
	jg	SHORT $LL2@Reduce
$LN12@Reduce:
	pop	esi
	pop	ebp
$LN11@Reduce:

; 92   : 	}
; 93   : 	if (w<1)	w=1;

	cmp	DWORD PTR [ecx], 1
	jge	SHORT $LN4@Reduce
	mov	DWORD PTR [ecx], 1
$LN4@Reduce:

; 94   : 	if (h<1)	h=1;

	cmp	DWORD PTR [edi], 1
	jge	SHORT $LN5@Reduce
	mov	DWORD PTR [edi], 1
$LN5@Reduce:
	pop	edi

; 95   : }

	pop	ebx
	ret	0
?Reduce@@YAXAAH000@Z ENDP				; Reduce
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
_TEXT	SEGMENT
_top_height$2$ = -56					; size = 4
_S_src$1 = -52						; size = 4
_S_dst$2 = -48						; size = 4
tv416 = -44						; size = 4
_t_dest_fmt$1$ = -44					; size = 4
_t_dest$ = -40						; size = 4
_top_width$2$ = -36					; size = 4
_t_from_desc0$ = -32					; size = 32
_levels_2_skip$ = 8					; size = 4
_w$ = 12						; size = 4
_h$ = 16						; size = 4
?TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU1@AAW4_D3DFORMAT@@HAAI2@Z PROC ; TW_LoadTextureFromTexture
; _t_from$ = ecx
; _t_dest_fmt$ = edx

; 115  : {

	sub	esp, 56					; 00000038H
	push	ebx
	push	ebp
	push	esi
	mov	ebx, ecx
	mov	DWORD PTR _t_dest_fmt$1$[esp+68], edx
	push	edi

; 116  : 	// Calculate levels & dimensions
; 117  : 	IDirect3DTexture9*		t_dest			= NULL;
; 118  : 	D3DSURFACE_DESC			t_from_desc0	;
; 119  : 	R_CHK					(t_from->GetLevelDesc	(0,&t_from_desc0));

	lea	ecx, DWORD PTR _t_from_desc0$[esp+72]
	mov	DWORD PTR _t_dest$[esp+72], 0
	push	ecx
	mov	eax, DWORD PTR [ebx]
	push	0
	push	ebx
	call	DWORD PTR [eax+68]
	cmp	BYTE PTR ?ignore_always@?3??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA, 0
	mov	edi, DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
	jne	SHORT $LN2@TW_LoadTex
	test	eax, eax
	jns	SHORT $LN2@TW_LoadTex
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA
	push	OFFSET ??_C@_0BK@JBFABEAB@TW_LoadTextureFromTexture@
	push	119					; 00000077H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0CH@PAHHMDAA@t_from?9?$DOGetLevelDesc?5?$CI0?0?$CGt_from@
	push	eax
	call	edi
$LN2@TW_LoadTex:

; 120  : 	int levels_exist		= t_from->GetLevelCount();

	mov	eax, DWORD PTR [ebx]
	push	ebx
	call	DWORD PTR [eax+52]

; 121  : 	int top_width			= t_from_desc0.Width;
; 122  : 	int top_height			= t_from_desc0.Height;

	mov	edx, DWORD PTR _t_from_desc0$[esp+100]
	mov	esi, eax
	mov	ebp, DWORD PTR _t_from_desc0$[esp+96]
	mov	DWORD PTR _top_height$2$[esp+72], edx

; 85   : 	while ((l>1) && skip)

	cmp	esi, 1
	jle	SHORT $LN31@TW_LoadTex

; 120  : 	int levels_exist		= t_from->GetLevelCount();

	mov	ecx, DWORD PTR _levels_2_skip$[esp+68]
$LL30@TW_LoadTex:

; 85   : 	while ((l>1) && skip)

	test	ecx, ecx
	je	SHORT $LN31@TW_LoadTex

; 86   : 	{
; 87   : 		w /= 2;

	mov	eax, ebp

; 88   : 		h /= 2;
; 89   : 		l -= 1;

	dec	esi
	cdq
	dec	ecx
	sub	eax, edx
	mov	ebp, eax
	mov	eax, DWORD PTR _top_height$2$[esp+72]
	cdq
	sub	eax, edx
	sar	ebp, 1
	mov	edx, eax
	sar	edx, 1
	mov	DWORD PTR _top_height$2$[esp+72], edx
	cmp	esi, 1
	jg	SHORT $LL30@TW_LoadTex
$LN31@TW_LoadTex:

; 123  : 	Reduce					(top_width,top_height,levels_exist,levels_2_skip);
; 124  : 
; 125  : 	// Create HW-surface
; 126  : 	if (D3DX_DEFAULT==t_dest_fmt)	t_dest_fmt = t_from_desc0.Format;

	mov	ecx, DWORD PTR _t_dest_fmt$1$[esp+72]

; 93   : 	if (w<1)	w=1;

	mov	eax, 1
	cmp	ebp, eax
	cmovl	ebp, eax

; 94   : 	if (h<1)	h=1;

	cmp	edx, eax
	mov	DWORD PTR _top_width$2$[esp+72], ebp
	cmovl	edx, eax

; 123  : 	Reduce					(top_width,top_height,levels_exist,levels_2_skip);
; 124  : 
; 125  : 	// Create HW-surface
; 126  : 	if (D3DX_DEFAULT==t_dest_fmt)	t_dest_fmt = t_from_desc0.Format;

	mov	eax, DWORD PTR [ecx]

; 94   : 	if (h<1)	h=1;

	mov	DWORD PTR _top_height$2$[esp+72], edx

; 123  : 	Reduce					(top_width,top_height,levels_exist,levels_2_skip);
; 124  : 
; 125  : 	// Create HW-surface
; 126  : 	if (D3DX_DEFAULT==t_dest_fmt)	t_dest_fmt = t_from_desc0.Format;

	cmp	eax, -1
	jne	SHORT $LN7@TW_LoadTex
	mov	eax, DWORD PTR _t_from_desc0$[esp+72]
	mov	DWORD PTR [ecx], eax
$LN7@TW_LoadTex:

; 127  : 	R_CHK					(D3DXCreateTexture(

	lea	ecx, DWORD PTR _t_dest$[esp+72]
	push	ecx
	push	1
	push	eax
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	0
	push	esi
	push	edx
	push	ebp
	push	DWORD PTR [eax+8]
	call	DWORD PTR __imp__D3DXCreateTexture@32
	cmp	BYTE PTR ?ignore_always@?9??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA, 0
	jne	SHORT $LN5@TW_LoadTex
	test	eax, eax
	jns	SHORT $LN5@TW_LoadTex
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?9??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA
	push	OFFSET ??_C@_0BK@JBFABEAB@TW_LoadTextureFromTexture@
	push	132					; 00000084H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0GK@CKIDGDAJ@D3DXCreateTexture?$CI?5HW?4pDevice?0?5@
	push	eax
	call	edi
$LN5@TW_LoadTex:

; 128  : 		HW.pDevice,
; 129  : 		top_width,top_height,
; 130  : 		levels_exist,0,t_dest_fmt,
; 131  : 		D3DPOOL_MANAGED,&t_dest
; 132  : 		));
; 133  : 
; 134  : 	// Copy surfaces & destroy temporary
; 135  : 	IDirect3DTexture9* T_src= t_from;
; 136  : 	IDirect3DTexture9* T_dst= t_dest;
; 137  : 
; 138  : 	int		L_src			= T_src->GetLevelCount	()-1;

	mov	eax, DWORD PTR [ebx]
	mov	ebp, DWORD PTR _t_dest$[esp+72]
	push	ebx
	call	DWORD PTR [eax+52]
	dec	eax
	mov	DWORD PTR tv416[esp+72], eax

; 139  : 	int		L_dst			= T_dst->GetLevelCount	()-1;

	mov	eax, DWORD PTR [ebp]
	push	ebp
	call	DWORD PTR [eax+52]
	lea	esi, DWORD PTR [eax-1]

; 140  : 	for (; L_dst>=0; L_src--,L_dst--)

	test	esi, esi
	js	$LN9@TW_LoadTex
	mov	eax, DWORD PTR tv416[esp+72]
	sub	eax, esi
	mov	DWORD PTR tv416[esp+72], eax
$LL10@TW_LoadTex:

; 141  : 	{
; 142  : 		// Get surfaces
; 143  : 		IDirect3DSurface9		*S_src, *S_dst;
; 144  : 		R_CHK	(T_src->GetSurfaceLevel	(L_src,&S_src));

	mov	ecx, DWORD PTR [ebx]
	lea	edx, DWORD PTR _S_src$1[esp+72]
	push	edx
	add	eax, esi
	push	eax
	push	ebx
	call	DWORD PTR [ecx+72]
	cmp	BYTE PTR ?ignore_always@?BA@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA, 0
	jne	SHORT $LN11@TW_LoadTex
	test	eax, eax
	jns	SHORT $LN11@TW_LoadTex
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BA@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA
	push	OFFSET ??_C@_0BK@JBFABEAB@TW_LoadTextureFromTexture@
	push	144					; 00000090H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0CG@NEOANJPP@T_src?9?$DOGetSurfaceLevel?5?$CIL_src?0?$CG@
	push	eax
	call	edi
$LN11@TW_LoadTex:

; 145  : 		R_CHK	(T_dst->GetSurfaceLevel	(L_dst,&S_dst));

	mov	eax, DWORD PTR [ebp]
	lea	ecx, DWORD PTR _S_dst$2[esp+72]
	push	ecx
	push	esi
	push	ebp
	call	DWORD PTR [eax+72]
	cmp	BYTE PTR ?ignore_always@?BE@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA, 0
	jne	SHORT $LN14@TW_LoadTex
	test	eax, eax
	jns	SHORT $LN14@TW_LoadTex
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BE@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA
	push	OFFSET ??_C@_0BK@JBFABEAB@TW_LoadTextureFromTexture@
	push	145					; 00000091H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0CG@HDNPPJAD@T_dst?9?$DOGetSurfaceLevel?5?$CIL_dst?0?$CG@
	push	eax
	call	edi
$LN14@TW_LoadTex:

; 146  : 
; 147  : 		// Copy
; 148  : 		R_CHK	(D3DXLoadSurfaceFromSurface(S_dst,NULL,NULL,S_src,NULL,NULL,D3DX_FILTER_NONE,0));

	push	0
	push	1
	push	0
	push	0
	push	DWORD PTR _S_src$1[esp+88]
	push	0
	push	0
	push	DWORD PTR _S_dst$2[esp+100]
	call	DWORD PTR __imp__D3DXLoadSurfaceFromSurface@32
	cmp	BYTE PTR ?ignore_always@?BI@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA, 0
	jne	SHORT $LN17@TW_LoadTex
	test	eax, eax
	jns	SHORT $LN17@TW_LoadTex
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BI@??TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU2@AAW4_D3DFORMAT@@HAAI2@Z@4_NA
	push	OFFSET ??_C@_0BK@JBFABEAB@TW_LoadTextureFromTexture@
	push	148					; 00000094H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0EP@JHNLLMBI@D3DXLoadSurfaceFromSurface?$CIS_ds@
	push	eax
	call	edi
$LN17@TW_LoadTex:

; 149  : 
; 150  : 		// Release surfaces
; 151  : 		_RELEASE				(S_src);

	mov	ecx, DWORD PTR _S_src$1[esp+72]
	test	ecx, ecx
	je	SHORT $LN26@TW_LoadTex
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR _S_src$1[esp+72], 0
$LN26@TW_LoadTex:

; 152  : 		_RELEASE				(S_dst);

	mov	ecx, DWORD PTR _S_dst$2[esp+72]
	test	ecx, ecx
	je	SHORT $LN8@TW_LoadTex
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR _S_dst$2[esp+72], 0
$LN8@TW_LoadTex:

; 140  : 	for (; L_dst>=0; L_src--,L_dst--)

	sub	esi, 1
	mov	eax, DWORD PTR tv416[esp+72]
	jns	$LL10@TW_LoadTex
$LN9@TW_LoadTex:

; 153  : 	}
; 154  : 
; 155  : 	// OK
; 156  : 	w						= top_width;

	mov	eax, DWORD PTR _w$[esp+68]
	mov	ecx, DWORD PTR _top_width$2$[esp+72]

; 157  : 	h						= top_height;

	mov	edx, DWORD PTR _top_height$2$[esp+72]

; 158  : 	return					t_dest;
; 159  : }

	pop	edi
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _h$[esp+64]
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _t_dest$[esp+56]
	add	esp, 56					; 00000038H
	ret	0
?TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU1@AAW4_D3DFORMAT@@HAAI2@Z ENDP ; TW_LoadTextureFromTexture
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
;	COMDAT ?it_gloss_rev_base@@YAIII@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
_s$ = 12						; size = 4
?it_gloss_rev_base@@YAIII@Z PROC			; it_gloss_rev_base, COMDAT

; 237  : IC u32 it_gloss_rev_base(u32 d, u32 s)	{	

	push	ebx
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 20   : ICF	u32 color_get_A (u32 rgba)						{	return ((rgba) >> 24);			}

	mov	ebx, DWORD PTR _d$[esp]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 238  : 	u32		occ		= color_get_A(d)/3;

	mov	eax, -1431655765			; aaaaaaabH
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 20   : ICF	u32 color_get_A (u32 rgba)						{	return ((rgba) >> 24);			}

	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 238  : 	u32		occ		= color_get_A(d)/3;

	mul	ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	mov	eax, ebx
	shr	ebx, 8
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 238  : 	u32		occ		= color_get_A(d)/3;

	shr	edx, 1
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	and	eax, -65281				; ffff00ffH
	add	edx, 24					; 00000018H
	shl	eax, 8
	shl	edx, 14					; 0000000eH
	and	edx, 16711680				; 00ff0000H
	or	edx, eax
	movzx	eax, bl
	or	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 241  : 	return	color_rgba	(

	pop	ebx

; 242  : 		gloss,			// gloss
; 243  : 		color_get_B(d),
; 244  : 		color_get_G(d),
; 245  : 		color_get_R(d)
; 246  : 	);
; 247  : }

	ret	0
?it_gloss_rev_base@@YAIII@Z ENDP			; it_gloss_rev_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\string.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\string.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\string.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\string.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
_TEXT	SEGMENT
_S$ = -2748						; size = 4
_T_normal_1$1 = -2744					; size = 4
_y$1$ = -2740						; size = 4
_dwWidth$ = -2740					; size = 4
_i$1$ = -2736						; size = 4
_T_sysmem$2 = -2736					; size = 4
_mips$1$ = -2732					; size = 4
_T_base$3 = -2728					; size = 4
_pTextureCUBE$ = -2724					; size = 4
_t_src$1$ = -2720					; size = 4
_dwHeight$ = -2720					; size = 4
_t_dst$1$ = -2716					; size = 4
_fmt$ = -2716						; size = 4
$T4 = -2712						; size = 4
_mip_cnt$2$ = -2712					; size = 4
_IMG$5 = -2708						; size = 28
_IMG$6 = -2708						; size = 28
_Rdst$7 = -2680						; size = 8
_desc$8 = -2672						; size = 32
_Rsrc$9 = -2640						; size = 8
_fn$ = -2632						; size = 520
_descS$10 = -2112					; size = 32
_fname$ = -2080						; size = 520
_temp$11 = -1560					; size = 520
_temp$12 = -1040					; size = 520
_temp$13 = -520						; size = 520
_fRName$ = 8						; size = 4
_ret_msize$ = 12					; size = 4
?texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z PROC ; CRender::texture_load
; _this$ = ecx

; 268  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 2748				; 00000abcH

; 269  : 	IDirect3DTexture9*		pTexture2D		= NULL;
; 270  : 	IDirect3DCubeTexture9*	pTextureCUBE	= NULL;
; 271  : 	string_path				fn;
; 272  : 	u32						dwWidth,dwHeight;
; 273  : 	u32						img_size		= 0;
; 274  : 	int						img_loaded_lod	= 0;
; 275  : 	D3DFORMAT				fmt;
; 276  : 	u32						mip_cnt=u32(-1);
; 277  : 	// validation
; 278  : 	R_ASSERT				(fRName);

	cmp	BYTE PTR ?ignore_always@?3??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	push	ebx
	mov	ebx, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	push	esi
	mov	esi, DWORD PTR _fRName$[ebp]
	push	edi
	mov	DWORD PTR _pTextureCUBE$[esp+2760], 0
	jne	SHORT $LN2@texture_lo
	test	esi, esi
	jne	SHORT $LN2@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	278					; 00000116H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_06PHGPEBHN@fRName@
	call	ebx
$LN2@texture_lo:

; 279  : 	R_ASSERT				(fRName[0]);

	cmp	BYTE PTR ?ignore_always@?7??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	SHORT $LN5@texture_lo
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LN5@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?7??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	279					; 00000117H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_09FPDELHFD@fRName?$FL0?$FN@
	call	ebx
$LN5@texture_lo:

; 280  : 
; 281  : 	// make file name
; 282  : 	string_path				fname;
; 283  : 	strcpy(fname,fRName); //. andy if (strext(fname)) *strext(fname)=0;

	lea	ecx, DWORD PTR _fname$[esp+2760]
	sub	ecx, esi
$LL96@texture_lo:
	mov	al, BYTE PTR [esi]
	lea	esi, DWORD PTR [esi+1]
	mov	BYTE PTR [ecx+esi-1], al
	test	al, al
	jne	SHORT $LL96@texture_lo
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 171  : {	return (char*) strrchr(S,'.');	}

	lea	eax, DWORD PTR _fname$[esp+2760]
	push	46					; 0000002eH
	push	eax
	call	DWORD PTR __imp__strrchr
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 17   : 	LPSTR _ext = strext(fn);

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 171  : {	return (char*) strrchr(S,'.');	}

	add	esp, 8
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 18   : 	if(  _ext					&&

	test	esi, esi
	je	SHORT $LN101@texture_lo
	mov	edi, DWORD PTR __imp__stricmp
	push	OFFSET ??_C@_04JCAPCJAP@?4tga@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN102@texture_lo
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN102@texture_lo
	push	OFFSET ??_C@_04LJDDIHIK@?4bmp@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN102@texture_lo
	push	OFFSET ??_C@_04LJKCLGJN@?4ogm@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN101@texture_lo
$LN102@texture_lo:

; 19   : 	  (0==stricmp(_ext,".tga")	||
; 20   : 		0==stricmp(_ext,".dds")	||
; 21   : 		0==stricmp(_ext,".bmp")	||
; 22   : 		0==stricmp(_ext,".ogm")	) )
; 23   : 		*_ext = 0;

	mov	BYTE PTR [esi], 0
$LN101@texture_lo:

; 287  : 	if (!FS.exist(fn,"$game_textures$",	fname,	".dds")	&& strstr(fname,"_bump"))	goto _BUMP_from_base;

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fname$[esp+2760]
	mov	esi, DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@AAY0CAI@DPBD11@Z
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	eax
	push	OFFSET ??_C@_0BA@PHFBKPHL@$game_textures$@
	lea	eax, DWORD PTR _fn$[esp+2772]
	mov	DWORD PTR _S$[esp+2772], 0
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	esi
	test	eax, eax
	jne	$LN58@texture_lo
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\string.h

; 520  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

	mov	esi, DWORD PTR __imp__strstr
	lea	eax, DWORD PTR _fname$[esp+2760]
	push	OFFSET ??_C@_05GDMGLBHI@_bump@
	push	eax
	call	esi
	add	esp, 8
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 287  : 	if (!FS.exist(fn,"$game_textures$",	fname,	".dds")	&& strstr(fname,"_bump"))	goto _BUMP_from_base;

	test	eax, eax
	je	$LN219@texture_lo
$_BUMP_from_base$223:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\string.h

; 520  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

	lea	eax, DWORD PTR _fname$[esp+2760]
	push	OFFSET ??_C@_06OABEEINO@_bump?$CD@
	push	eax
	call	esi
	add	esp, 8
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 482  : 		if (strstr(fname,"_bump#"))			

	test	eax, eax
	je	$LN83@texture_lo

; 483  : 		{
; 484  : 			R_ASSERT2	(FS.exist(fn,"$game_textures$",	"ed\\ed_dummy_bump#",	".dds"), "ed_dummy_bump#");

	cmp	BYTE PTR ?ignore_always@?EL@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	mov	esi, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD00H0AA_N@Z
	jne	SHORT $LN32@texture_lo
	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fn$[esp+2760]
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	OFFSET ??_C@_0BC@CCPNEJGH@ed?2ed_dummy_bump?$CD@
	push	OFFSET ??_C@_0BA@PHFBKPHL@$game_textures$@
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@AAY0CAI@DPBD11@Z
	call	eax
	test	eax, eax
	jne	SHORT $LN32@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?EL@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	484					; 000001e4H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0P@POJCEHBH@ed_dummy_bump?$CD@
	push	OFFSET ??_C@_0DN@NLHBJNAC@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@
	call	esi
$LN32@texture_lo:

; 485  : 			S						= FS.r_open	(fn);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fn$[esp+2760]
	push	eax
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_open@CLocatorAPI@@QAEPAVIReader@@PBD@Z

; 486  : 			R_ASSERT2				(S, fn);

	cmp	BYTE PTR ?ignore_always@?EP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	mov	DWORD PTR _S$[esp+2760], eax
	jne	SHORT $LN35@texture_lo
	test	eax, eax
	jne	SHORT $LN35@texture_lo
	push	OFFSET ?ignore_always@?EP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	486					; 000001e6H
$LN221@texture_lo:

; 361  : 		}
; 362  : _DDS_2D:
; 363  : 		{
; 364  : 			// Check for LMAP and compress if needed
; 365  : 			strlwr					(fn);

	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	lea	eax, DWORD PTR _fn$[esp+2772]
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	eax
	push	OFFSET ??_C@_01CPLAODJH@S@
	call	esi
	mov	eax, DWORD PTR _S$[esp+2760]
$LN35@texture_lo:
	mov	edi, DWORD PTR [eax+12]
$_DDS_2D$224:
	lea	eax, DWORD PTR _fn$[esp+2760]
	push	eax
	call	DWORD PTR __imp__strlwr
	add	esp, 4
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 263  : 	IC int			length		()	const		{	return Size;			};

	mov	eax, DWORD PTR _S$[esp+2760]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 370  : 			HRESULT const result = 

	lea	edx, DWORD PTR _T_sysmem$2[esp+2760]
	push	edx
	push	0
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 264  : 	IC void*		pointer		()	const		{	return &(data[Pos]);	};

	mov	ecx, DWORD PTR [eax+8]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 370  : 			HRESULT const result = 

	lea	edx, DWORD PTR _IMG$6[esp+2768]
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 264  : 	IC void*		pointer		()	const		{	return &(data[Pos]);	};

	add	ecx, DWORD PTR [eax+4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 370  : 			HRESULT const result = 

	push	edx
	push	0
	push	-1
	push	-1
	push	2
	push	DWORD PTR _IMG$6[esp+2804]
	push	0
	push	DWORD PTR _IMG$6[esp+2808]
	push	-1
	push	-1
	push	DWORD PTR [eax+12]
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	ecx
	push	DWORD PTR [eax+8]
	call	DWORD PTR __imp__D3DXCreateTextureFromFileInMemoryEx@60

; 371  : 				D3DXCreateTextureFromFileInMemoryEx
; 372  : 					(
; 373  : 						HW.pDevice,S->pointer(),S->length(),
; 374  : 						D3DX_DEFAULT,D3DX_DEFAULT,
; 375  : 						IMG.MipLevels,0,
; 376  : 						IMG.Format,
; 377  : 						D3DPOOL_SYSTEMMEM,
; 378  : 						D3DX_DEFAULT,
; 379  : 						D3DX_DEFAULT,
; 380  : 						0,&IMG,0,
; 381  : 						&T_sysmem
; 382  : 					);
; 383  : 			FS.r_close				(S);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	esi, eax
	lea	eax, DWORD PTR _S$[esp+2760]
	push	eax
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_close@CLocatorAPI@@QAEXAAPAVIReader@@@Z

; 384  : 
; 385  : 			if (FAILED(result)) {

	test	esi, esi
	jns	$LN79@texture_lo

; 386  : 				Msg("! Can't load texture '%s'", fn);

	lea	eax, DWORD PTR _fn$[esp+2760]
	push	eax
	push	OFFSET ??_C@_0BK@PFDFKJEB@?$CB?5Can?8t?5load?5texture?5?8?$CFs?8@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ

; 387  : 				string_path			temp;
; 388  : 				R_ASSERT(FS.exist(temp, "$game_textures$", "ed\\ed_not_existing_texture", ".dds"));

	mov	esi, DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@AAY0CAI@DPBD11@Z
	add	esp, 8
	cmp	BYTE PTR ?ignore_always@?DL@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	SHORT $LN26@texture_lo
	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _temp$11[esp+2760]
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	OFFSET ??_C@_0BL@OKPHIHGP@ed?2ed_not_existing_texture@
	push	OFFSET ??_C@_0BA@PHFBKPHL@$game_textures$@
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	esi
	test	eax, eax
	jne	SHORT $LN26@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DL@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	388					; 00000184H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0EJ@GNBJIJEJ@FS?4exist?$CItemp?0?5?$CC$game_textures$@
	call	ebx
$LN26@texture_lo:

; 389  : 				strlwr(temp);

	lea	eax, DWORD PTR _temp$11[esp+2760]
	push	eax
	call	DWORD PTR __imp__strlwr
	add	esp, 4

; 390  : 				R_ASSERT(xr_strcmp(temp, fn));

	cmp	BYTE PTR ?ignore_always@?DP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	$LN29@texture_lo
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 183  : {	return (int)strcmp(S1,S2);  }

	lea	ecx, DWORD PTR _fn$[esp+2760]
	lea	eax, DWORD PTR _temp$11[esp+2760]
	npad	2
$LL212@texture_lo:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN213@texture_lo
	test	dl, dl
	je	SHORT $LN214@texture_lo
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN213@texture_lo
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL212@texture_lo
$LN214@texture_lo:
	xor	eax, eax
	jmp	$LN215@texture_lo
$LN83@texture_lo:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\string.h

; 520  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

	lea	eax, DWORD PTR _fname$[esp+2760]
	push	OFFSET ??_C@_05GDMGLBHI@_bump@
	push	eax
	call	esi
	add	esp, 8
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 490  : 		if (strstr(fname,"_bump"))			

	test	eax, eax
	je	$LN86@texture_lo

; 491  : 		{
; 492  : 			R_ASSERT2	(FS.exist(fn,"$game_textures$",	"ed\\ed_dummy_bump",	".dds"),"ed_dummy_bump");

	cmp	BYTE PTR ?ignore_always@?FG@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	mov	esi, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD00H0AA_N@Z
	jne	SHORT $LN38@texture_lo
	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fn$[esp+2760]
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	OFFSET ??_C@_0BB@FNDIKPME@ed?2ed_dummy_bump@
	push	OFFSET ??_C@_0BA@PHFBKPHL@$game_textures$@
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@AAY0CAI@DPBD11@Z
	call	eax
	test	eax, eax
	jne	SHORT $LN38@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?FG@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	492					; 000001ecH
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0O@OEDLBAOK@ed_dummy_bump@
	push	OFFSET ??_C@_0DM@NJJHOGEI@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@
	call	esi
$LN38@texture_lo:

; 493  : 			S						= FS.r_open	(fn);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fn$[esp+2760]
	push	eax
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_open@CLocatorAPI@@QAEPAVIReader@@PBD@Z

; 494  : 
; 495  : 			R_ASSERT2	(S, fn);

	cmp	BYTE PTR ?ignore_always@?FK@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	mov	DWORD PTR _S$[esp+2760], eax
	jne	$LN35@texture_lo
	test	eax, eax
	jne	$LN35@texture_lo
	push	OFFSET ?ignore_always@?FK@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	495					; 000001efH

; 496  : 
; 497  : 			img_size				= S->length	();
; 498  : 			goto		_DDS_2D;

	jmp	$LN221@texture_lo
$LN86@texture_lo:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\string.h

; 520  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

	lea	eax, DWORD PTR _fname$[esp+2760]
	push	OFFSET ??_C@_05GDMGLBHI@_bump@
	push	eax
	call	esi
	add	esp, 8
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 502  : 		*strstr		(fname,"_bump")	= 0;

	mov	BYTE PTR [eax], 0

; 503  : 		R_ASSERT2	(FS.exist(fn,"$game_textures$",	fname,	".dds"),fname);

	cmp	BYTE PTR ?ignore_always@?FO@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	SHORT $LN44@texture_lo
	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fname$[esp+2760]
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	eax
	push	OFFSET ??_C@_0BA@PHFBKPHL@$game_textures$@
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR _fn$[esp+2772]
	push	eax
	mov	eax, DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@AAY0CAI@DPBD11@Z
	call	eax
	test	eax, eax
	jne	SHORT $LN44@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	lea	eax, DWORD PTR _fname$[esp+2760]
	push	OFFSET ?ignore_always@?FO@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	503					; 000001f7H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	eax
	push	OFFSET ??_C@_0CO@KDADHIM@FS?4exist?$CIfn?0?$CC$game_textures$?$CC?0?5@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD00H0AA_N@Z
$LN44@texture_lo:

; 504  : 
; 505  : 		// Load   SYS-MEM-surface, bound to device restrictions
; 506  : 		D3DXIMAGE_INFO			IMG;
; 507  : 		S						= FS.r_open	(fn);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fn$[esp+2760]
	push	eax
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_open@CLocatorAPI@@QAEPAVIReader@@PBD@Z
	mov	DWORD PTR _S$[esp+2760], eax
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 264  : 	IC void*		pointer		()	const		{	return &(data[Pos]);	};

	mov	ecx, DWORD PTR [eax+8]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 508  : 		img_size				= S->length	();

	mov	edx, DWORD PTR [eax+12]
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 264  : 	IC void*		pointer		()	const		{	return &(data[Pos]);	};

	add	ecx, DWORD PTR [eax+4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 510  : 		R_CHK2(D3DXCreateTextureFromFileInMemoryEx(

	lea	eax, DWORD PTR _T_base$3[esp+2760]
	push	eax
	push	0
	lea	eax, DWORD PTR _IMG$5[esp+2768]
	mov	DWORD PTR $T4[esp+2768], edx
	push	eax
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	0
	push	-1
	push	-1
	push	2
	push	21					; 00000015H
	push	0
	push	-1
	push	-1
	push	-1
	push	edx
	push	ecx
	push	DWORD PTR [eax+8]
	call	DWORD PTR __imp__D3DXCreateTextureFromFileInMemoryEx@60
	cmp	BYTE PTR ?ignore_always@?GC@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	SHORT $LN47@texture_lo
	test	eax, eax
	jns	SHORT $LN47@texture_lo
	push	OFFSET ?ignore_always@?GC@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	514					; 00000202H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	lea	ecx, DWORD PTR _fn$[esp+2776]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ??_C@_0MH@GMHDJPOF@D3DXCreateTextureFromFileInMemo@
	push	eax
	call	DWORD PTR __imp_?error@xrDebug@@QAEXJPBD00H0AA_N@Z
$LN47@texture_lo:

; 511  : 			HW.pDevice,	S->pointer(),S->length(),
; 512  : 			D3DX_DEFAULT,D3DX_DEFAULT,	D3DX_DEFAULT,0,D3DFMT_A8R8G8B8,
; 513  : 			D3DPOOL_SYSTEMMEM,			D3DX_DEFAULT,D3DX_DEFAULT,
; 514  : 			0,&IMG,0,&T_base	), fn);
; 515  : 		FS.r_close				(S);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _S$[esp+2760]
	push	eax
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_close@CLocatorAPI@@QAEXAAPAVIReader@@@Z

; 516  : 
; 517  : 		// Create HW-surface
; 518  : 		IDirect3DTexture9*	T_normal_1	= 0;
; 519  : 		R_CHK(D3DXCreateTexture		(HW.pDevice,IMG.Width,IMG.Height,D3DX_DEFAULT,0,D3DFMT_A8R8G8B8,D3DPOOL_SYSTEMMEM, &T_normal_1));

	lea	eax, DWORD PTR _T_normal_1$1[esp+2760]
	mov	DWORD PTR _T_normal_1$1[esp+2760], 0
	push	eax
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	2
	push	21					; 00000015H
	push	0
	push	-1
	push	DWORD PTR _IMG$5[esp+2784]
	push	DWORD PTR _IMG$5[esp+2784]
	push	DWORD PTR [eax+8]
	call	DWORD PTR __imp__D3DXCreateTexture@32
	cmp	BYTE PTR ?ignore_always@?GG@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	mov	esi, DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
	jne	SHORT $LN50@texture_lo
	test	eax, eax
	jns	SHORT $LN50@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?GG@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	519					; 00000207H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0HC@PLKLKLLD@D3DXCreateTexture?5?$CIHW?4pDevice?0I@
	push	eax
	call	esi
$LN50@texture_lo:

; 520  : 		R_CHK(D3DXComputeNormalMap	(T_normal_1,T_base,0,D3DX_NORMALMAP_COMPUTE_OCCLUSION,D3DX_CHANNEL_LUMINANCE,_BUMPHEIGH));

	fld	DWORD PTR __real@41000000
	push	ecx
	fstp	DWORD PTR [esp]
	push	16					; 00000010H
	push	1048576					; 00100000H
	push	0
	push	DWORD PTR _T_base$3[esp+2776]
	push	DWORD PTR _T_normal_1$1[esp+2780]
	call	DWORD PTR __imp__D3DXComputeNormalMap@24
	cmp	BYTE PTR ?ignore_always@?GK@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	SHORT $LN53@texture_lo
	test	eax, eax
	jns	SHORT $LN53@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?GK@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	520					; 00000208H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0GO@LFIEPOOB@D3DXComputeNormalMap?5?$CIT_normal_@
	push	eax
	call	esi
$LN53@texture_lo:

; 521  : 
; 522  : 		// Transfer gloss-map
; 523  : 		TW_Iterate_1OP				(T_normal_1,T_base,it_gloss_rev_base);

	mov	edi, DWORD PTR _T_normal_1$1[esp+2760]
	mov	esi, DWORD PTR _T_base$3[esp+2760]

; 169  : 	DWORD mips							= t_dst->GetLevelCount();

	push	edi

; 521  : 
; 522  : 		// Transfer gloss-map
; 523  : 		TW_Iterate_1OP				(T_normal_1,T_base,it_gloss_rev_base);

	mov	DWORD PTR _t_src$1$[esp+2764], esi

; 169  : 	DWORD mips							= t_dst->GetLevelCount();

	mov	eax, DWORD PTR [edi]

; 521  : 
; 522  : 		// Transfer gloss-map
; 523  : 		TW_Iterate_1OP				(T_normal_1,T_base,it_gloss_rev_base);

	mov	DWORD PTR _t_dst$1$[esp+2764], edi

; 169  : 	DWORD mips							= t_dst->GetLevelCount();

	call	DWORD PTR [eax+52]

; 170  : 	R_ASSERT							(mips == t_src->GetLevelCount());

	cmp	BYTE PTR ?ignore_always@?3???$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z@4_NA, 0 ; `TW_Iterate_1OP<unsigned int (__cdecl*)(unsigned int,unsigned int)>'::`4'::ignore_always
	mov	DWORD PTR _mips$1$[esp+2760], eax
	jne	SHORT $LN145@texture_lo
	mov	ecx, DWORD PTR [esi]
	push	esi
	call	DWORD PTR [ecx+52]
	cmp	DWORD PTR _mips$1$[esp+2760], eax
	je	SHORT $LN216@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3???$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z@4_NA ; `TW_Iterate_1OP<unsigned int (__cdecl*)(unsigned int,unsigned int)>'::`4'::ignore_always
	push	OFFSET ??_C@_0P@CFKJOMKE@TW_Iterate_1OP@
	push	170					; 000000aaH
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BP@LNIDIILK@mips?5?$DN?$DN?5t_src?9?$DOGetLevelCount?$CI?$CJ@
	call	ebx
$LN216@texture_lo:

; 171  : 	for (DWORD i = 0; i < mips; i++)	{

	mov	eax, DWORD PTR _mips$1$[esp+2760]
$LN145@texture_lo:
	xor	ebx, ebx
	mov	DWORD PTR _i$1$[esp+2760], ebx
	test	eax, eax
	je	$LN149@texture_lo
$LL150@texture_lo:

; 172  : 		D3DLOCKED_RECT				Rsrc,Rdst;
; 173  : 		D3DSURFACE_DESC				desc,descS;
; 174  : 
; 175  : 		t_dst->GetLevelDesc			(i, &desc);

	mov	eax, DWORD PTR [edi]
	lea	ecx, DWORD PTR _desc$8[esp+2760]
	push	ecx
	push	ebx
	push	edi
	call	DWORD PTR [eax+68]

; 176  : 		t_src->GetLevelDesc			(i, &descS);

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _descS$10[esp+2760]
	push	ecx
	push	ebx
	push	esi
	call	DWORD PTR [eax+68]

; 177  : 		VERIFY						(desc.Format==descS.Format);
; 178  : 		VERIFY						(desc.Format==D3DFMT_A8R8G8B8);
; 179  : 		t_src->LockRect				(i,&Rsrc,0,0);

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _Rsrc$9[esp+2760]
	push	0
	push	0
	push	ecx
	push	ebx
	push	esi
	call	DWORD PTR [eax+76]

; 180  : 		t_dst->LockRect				(i,&Rdst,0,0);

	mov	eax, DWORD PTR [edi]
	lea	ecx, DWORD PTR _Rdst$7[esp+2760]
	push	0
	push	0
	push	ecx
	push	ebx
	push	edi
	call	DWORD PTR [eax+76]

; 181  : 		for (u32 y = 0; y < desc.Height; y++)	{

	mov	edx, DWORD PTR _desc$8[esp+2788]
	xor	ecx, ecx
	mov	DWORD PTR _y$1$[esp+2760], ecx
	test	edx, edx
	je	SHORT $LN158@texture_lo
	mov	eax, DWORD PTR _desc$8[esp+2784]
$LL159@texture_lo:

; 182  : 			for (u32 x = 0; x < desc.Width; x++)	{

	xor	ebx, ebx
	test	eax, eax
	je	SHORT $LN157@texture_lo
	npad	9
$LL162@texture_lo:

; 183  : 				DWORD&	pSrc	= *(((DWORD*)((BYTE*)Rsrc.pBits + (y * Rsrc.Pitch)))+x);
; 184  : 				DWORD&	pDst	= *(((DWORD*)((BYTE*)Rdst.pBits + (y * Rdst.Pitch)))+x);

	mov	edi, DWORD PTR _Rdst$7[esp+2760]

; 238  : 	u32		occ		= color_get_A(d)/3;

	mov	eax, -1431655765			; aaaaaaabH

; 184  : 				DWORD&	pDst	= *(((DWORD*)((BYTE*)Rdst.pBits + (y * Rdst.Pitch)))+x);

	imul	edi, ecx
	add	edi, DWORD PTR _Rdst$7[esp+2764]

; 185  : 				pDst			= pred(pDst,pSrc);

	mov	esi, DWORD PTR [edi+ebx*4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 20   : ICF	u32 color_get_A (u32 rgba)						{	return ((rgba) >> 24);			}

	mov	ecx, esi
	shr	ecx, 24					; 00000018H
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 238  : 	u32		occ		= color_get_A(d)/3;

	mul	ecx

; 182  : 			for (u32 x = 0; x < desc.Width; x++)	{

	mov	ecx, DWORD PTR _y$1$[esp+2760]
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 238  : 	u32		occ		= color_get_A(d)/3;

	shr	edx, 1
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	and	esi, -65281				; ffff00ffH
	add	edx, 24					; 00000018H
	shr	eax, 8
	shl	edx, 14					; 0000000eH
	and	edx, 16711680				; 00ff0000H
	movzx	eax, al
	or	edx, eax
	shl	esi, 8
	or	edx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 185  : 				pDst			= pred(pDst,pSrc);

	mov	DWORD PTR [edi+ebx*4], edx
	inc	ebx
	mov	eax, DWORD PTR _desc$8[esp+2784]
	cmp	ebx, eax
	jb	SHORT $LL162@texture_lo
	mov	edx, DWORD PTR _desc$8[esp+2788]
$LN157@texture_lo:

; 181  : 		for (u32 y = 0; y < desc.Height; y++)	{

	inc	ecx
	mov	DWORD PTR _y$1$[esp+2760], ecx
	cmp	ecx, edx
	jb	SHORT $LL159@texture_lo
	mov	ebx, DWORD PTR _i$1$[esp+2760]
	mov	esi, DWORD PTR _t_src$1$[esp+2760]
	mov	edi, DWORD PTR _t_dst$1$[esp+2760]
$LN158@texture_lo:

; 186  : 			}
; 187  : 		}
; 188  : 		t_dst->UnlockRect			(i);

	mov	eax, DWORD PTR [edi]
	push	ebx
	push	edi
	call	DWORD PTR [eax+80]

; 189  : 		t_src->UnlockRect			(i);

	mov	eax, DWORD PTR [esi]
	push	ebx
	push	esi
	call	DWORD PTR [eax+80]
	inc	ebx
	mov	DWORD PTR _i$1$[esp+2760], ebx
	cmp	ebx, DWORD PTR _mips$1$[esp+2760]
	jb	$LL150@texture_lo
$LN149@texture_lo:

; 524  : 
; 525  : 		// Compress
; 526  : 		fmt								= D3DFMT_DXT5;
; 527  : 		img_loaded_lod					= get_texture_load_lod(fn);

	lea	ecx, DWORD PTR _fn$[esp+2760]
	mov	DWORD PTR _fmt$[esp+2760], 894720068	; 35545844H
	call	?get_texture_load_lod@@YAHPBD@Z		; get_texture_load_lod

; 528  : 		IDirect3DTexture9*	T_normal_1C	= TW_LoadTextureFromTexture(T_normal_1, fmt, img_loaded_lod, dwWidth, dwHeight);

	mov	ecx, DWORD PTR _T_normal_1$1[esp+2760]
	lea	edx, DWORD PTR _fmt$[esp+2760]
	mov	edi, eax
	lea	eax, DWORD PTR _dwHeight$[esp+2760]
	push	eax
	lea	eax, DWORD PTR _dwWidth$[esp+2764]
	push	eax
	push	edi
	call	?TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU1@AAW4_D3DFORMAT@@HAAI2@Z ; TW_LoadTextureFromTexture
	mov	esi, eax
	add	esp, 12					; 0000000cH

; 529  : 		mip_cnt							= T_normal_1C->GetLevelCount();

	mov	ecx, DWORD PTR [esi]
	push	esi
	call	DWORD PTR [ecx+52]

; 530  : 
; 531  : #if RENDER==R_R2	
; 532  : 		// Decompress (back)
; 533  : 		fmt								= D3DFMT_A8R8G8B8;
; 534  : 		IDirect3DTexture9*	T_normal_1U	= TW_LoadTextureFromTexture(T_normal_1C,fmt,0,dwWidth,dwHeight);
; 535  : 
; 536  : 		// Calculate difference
; 537  : 		IDirect3DTexture9*	T_normal_1D = 0;
; 538  : 		R_CHK(D3DXCreateTexture(HW.pDevice,dwWidth,dwHeight,T_normal_1U->GetLevelCount(),0,D3DFMT_A8R8G8B8,D3DPOOL_SYSTEMMEM,&T_normal_1D));
; 539  : 		TW_Iterate_2OP		(T_normal_1D,T_normal_1,T_normal_1U,it_difference);
; 540  : 
; 541  : 		// Reverse channels back + transfer heightmap
; 542  : 		TW_Iterate_1OP		(T_normal_1D,T_base,it_height_rev_base);
; 543  : 
; 544  : 		// Compress
; 545  : 		fmt								= D3DFMT_DXT5;
; 546  : 		IDirect3DTexture9*	T_normal_2C	= TW_LoadTextureFromTexture(T_normal_1D,fmt,0,dwWidth,dwHeight);
; 547  : 		_RELEASE						(T_normal_1U	);
; 548  : 		_RELEASE						(T_normal_1D	);
; 549  : 
; 550  : 		// 
; 551  : 		string256			fnameB;
; 552  : 		strconcat			(sizeof(fnameB),fnameB,"$user$",fname,"_bumpX");
; 553  : 		ref_texture			t_temp			= Device.Resources->_CreateTexture	(fnameB);
; 554  : 		t_temp->surface_set	(T_normal_2C	);
; 555  : 		_RELEASE			(T_normal_2C	);	// texture should keep reference to it by itself
; 556  : #endif
; 557  : 		// T_normal_1C	- normal.gloss,		reversed
; 558  : 		// T_normal_2C	- 2*error.height,	non-reversed
; 559  : 		_RELEASE			(T_base);

	mov	edx, DWORD PTR _T_base$3[esp+2760]
	mov	ebx, eax
	test	edx, edx
	je	SHORT $LN93@texture_lo
	mov	ecx, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [ecx+8]
	mov	DWORD PTR _T_base$3[esp+2760], 0
$LN93@texture_lo:

; 560  : 		_RELEASE			(T_normal_1);

	mov	ecx, DWORD PTR _T_normal_1$1[esp+2760]
	test	ecx, ecx
	je	SHORT $LN94@texture_lo
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN94@texture_lo:

; 561  : 		ret_msize			= calc_texture_size(img_loaded_lod, mip_cnt, img_size);

	push	DWORD PTR $T4[esp+2760]
	mov	edx, ebx
	mov	ecx, edi

; 562  : 		return				T_normal_1C;

	jmp	$LN220@texture_lo
$LN219@texture_lo:

; 287  : 	if (!FS.exist(fn,"$game_textures$",	fname,	".dds")	&& strstr(fname,"_bump"))	goto _BUMP_from_base;

	mov	esi, DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@AAY0CAI@DPBD11@Z
$LN58@texture_lo:

; 288  : 	if (FS.exist(fn,"$level$",			fname,	".dds"))							goto _DDS;

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fname$[esp+2760]
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	eax
	push	OFFSET ??_C@_07DJIBDFPO@$level$@
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR _fn$[esp+2772]
	push	eax
	call	esi
	test	eax, eax
	jne	$_DDS$225

; 289  : 	if (FS.exist(fn,"$game_saves$",		fname,	".dds"))							goto _DDS;

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fname$[esp+2760]
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	eax
	push	OFFSET ??_C@_0N@DDCKMNJI@$game_saves$@
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR _fn$[esp+2772]
	push	eax
	call	esi
	test	eax, eax
	jne	$_DDS$225

; 290  : 	if (FS.exist(fn,"$game_textures$",	fname,	".dds"))							goto _DDS;

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fname$[esp+2760]
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	eax
	push	OFFSET ??_C@_0BA@PHFBKPHL@$game_textures$@
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR _fn$[esp+2772]
	push	eax
	call	esi
	test	eax, eax
	jne	SHORT $_DDS$225

; 291  : 
; 292  : #ifdef _EDITOR
; 293  : 	ELog.Msg(mtError, "Can't find texture '%s'", fname);
; 294  : 	return 0;
; 295  : #else
; 296  : 
; 297  : 	Msg("! Can't find texture '%s'", fname);

	lea	eax, DWORD PTR _fname$[esp+2760]
	push	eax
	push	OFFSET ??_C@_0BK@MOGOLMPM@?$CB?5Can?8t?5find?5texture?5?8?$CFs?8@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 8

; 298  : 	R_ASSERT(FS.exist(fn, "$game_textures$", "ed\\ed_not_existing_texture", ".dds"));

	cmp	BYTE PTR ?ignore_always@?BE@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	SHORT $_DDS$225
	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fn$[esp+2760]
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	OFFSET ??_C@_0BL@OKPHIHGP@ed?2ed_not_existing_texture@
	push	OFFSET ??_C@_0BA@PHFBKPHL@$game_textures$@
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	esi
	test	eax, eax
	jne	SHORT $_DDS$225
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BE@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	298					; 0000012aH
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0EH@CJGABLCE@FS?4exist?$CIfn?0?5?$CC$game_textures$?$CC?0@
	call	ebx
$_DDS$225:

; 299  : 	goto _DDS;
; 300  : 
; 301  : 	//	Debug.fatal(DEBUG_INFO,"Can't find texture '%s'",fname);
; 302  : 
; 303  : #endif
; 304  : 
; 305  : _DDS:
; 306  : 	{
; 307  : 		// Load and get header
; 308  : 		D3DXIMAGE_INFO			IMG;
; 309  : 		S						= FS.r_open	(fn);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _fn$[esp+2760]
	push	eax
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_open@CLocatorAPI@@QAEPAVIReader@@PBD@Z
	mov	DWORD PTR _S$[esp+2760], eax
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 264  : 	IC void*		pointer		()	const		{	return &(data[Pos]);	};

	mov	ecx, DWORD PTR [eax+8]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 313  : 		img_size				= S->length	();

	mov	edi, DWORD PTR [eax+12]
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 264  : 	IC void*		pointer		()	const		{	return &(data[Pos]);	};

	add	ecx, DWORD PTR [eax+4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 315  : 		HRESULT const result = D3DXGetImageInfoFromFileInMemory	(S->pointer(),S->length(),&IMG);

	lea	eax, DWORD PTR _IMG$6[esp+2760]
	push	eax
	push	edi
	push	ecx
	call	DWORD PTR __imp__D3DXGetImageInfoFromFileInMemory@12

; 316  : 		if (FAILED(result)) {

	test	eax, eax
	jns	$LN69@texture_lo

; 317  : 			Msg("! Can't get image info for texture '%s'", fn);

	lea	eax, DWORD PTR _fn$[esp+2760]
	push	eax
	push	OFFSET ??_C@_0CI@KKHLLFGK@?$CB?5Can?8t?5get?5image?5info?5for?5text@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ

; 318  : 			FS.r_close(S);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _S$[esp+2768]
	add	esp, 8
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR __imp_?r_close@CLocatorAPI@@QAEXAAPAVIReader@@@Z

; 319  : 			string_path			temp;
; 320  : 			R_ASSERT(FS.exist(temp, "$game_textures$", "ed\\ed_not_existing_texture", ".dds"));

	cmp	BYTE PTR ?ignore_always@?CA@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	SHORT $LN14@texture_lo
	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _temp$12[esp+2760]
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	OFFSET ??_C@_0BL@OKPHIHGP@ed?2ed_not_existing_texture@
	push	OFFSET ??_C@_0BA@PHFBKPHL@$game_textures$@
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	esi
	test	eax, eax
	jne	SHORT $LN14@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?CA@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	320					; 00000140H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0EJ@GNBJIJEJ@FS?4exist?$CItemp?0?5?$CC$game_textures$@
	call	ebx
$LN14@texture_lo:

; 321  : 			R_ASSERT(xr_strcmp(temp, fn));

	cmp	BYTE PTR ?ignore_always@?CE@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	SHORT $LN17@texture_lo
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 183  : {	return (int)strcmp(S1,S2);  }

	lea	ecx, DWORD PTR _fn$[esp+2760]
	lea	eax, DWORD PTR _temp$12[esp+2760]
$LL204@texture_lo:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN205@texture_lo
	test	dl, dl
	je	SHORT $LN206@texture_lo
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN205@texture_lo
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL204@texture_lo
$LN206@texture_lo:
	xor	eax, eax
	jmp	SHORT $LN207@texture_lo
$LN205@texture_lo:
	sbb	eax, eax
	or	eax, 1
$LN207@texture_lo:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 321  : 			R_ASSERT(xr_strcmp(temp, fn));

	test	eax, eax
	jne	SHORT $LN17@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?CE@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	321					; 00000141H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BE@BIPAIHNA@xr_strcmp?$CItemp?0?5fn?$CJ@
	call	ebx
$LN17@texture_lo:

; 322  : 			strcpy(fn, temp);

	xor	ecx, ecx
	npad	3
$LL97@texture_lo:
	mov	al, BYTE PTR _temp$12[esp+ecx+2760]
	lea	ecx, DWORD PTR [ecx+1]
	mov	BYTE PTR _fn$[esp+ecx+2759], al
	test	al, al
	jne	SHORT $LL97@texture_lo

; 323  : 			goto _DDS;

	jmp	$_DDS$225
$LN69@texture_lo:

; 324  : 		}
; 325  : 
; 326  : 		if (IMG.ResourceType	== D3DRTYPE_CUBETEXTURE)			goto _DDS_CUBE;

	cmp	DWORD PTR _IMG$6[esp+2780], 5
	jne	$_DDS_2D$224
$_DDS_CUBE$226:
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 263  : 	IC int			length		()	const		{	return Size;			};

	mov	eax, DWORD PTR _S$[esp+2760]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 331  : 			HRESULT const result = D3DXCreateCubeTextureFromFileInMemoryEx(

	lea	edx, DWORD PTR _pTextureCUBE$[esp+2760]
	push	edx
	push	0
	lea	edx, DWORD PTR _IMG$6[esp+2768]
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 264  : 	IC void*		pointer		()	const		{	return &(data[Pos]);	};

	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR [eax+4]
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 331  : 			HRESULT const result = D3DXCreateCubeTextureFromFileInMemoryEx(

	push	edx
	push	0
	push	-1
	push	-1
	push	1
	push	DWORD PTR _IMG$6[esp+2804]
	push	0
	push	DWORD PTR _IMG$6[esp+2808]
	push	-1
	push	DWORD PTR [eax+12]
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	ecx
	push	DWORD PTR [eax+8]
	call	DWORD PTR __imp__D3DXCreateCubeTextureFromFileInMemoryEx@56

; 332  : 				HW.pDevice,
; 333  : 				S->pointer(),S->length(),
; 334  : 				D3DX_DEFAULT,
; 335  : 				IMG.MipLevels,0,
; 336  : 				IMG.Format,
; 337  : 				D3DPOOL_MANAGED,
; 338  : 				D3DX_DEFAULT,
; 339  : 				D3DX_DEFAULT,
; 340  : 				0,&IMG,0,
; 341  : 				&pTextureCUBE
; 342  : 				);
; 343  : 			FS.r_close				(S);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	esi, eax
	lea	eax, DWORD PTR _S$[esp+2760]
	push	eax
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?r_close@CLocatorAPI@@QAEXAAPAVIReader@@@Z

; 344  : 
; 345  : 			if (FAILED(result)) {

	test	esi, esi
	jns	$LN76@texture_lo

; 346  : 				Msg("! Can't load texture '%s'", fn);

	lea	eax, DWORD PTR _fn$[esp+2760]
	push	eax
	push	OFFSET ??_C@_0BK@PFDFKJEB@?$CB?5Can?8t?5load?5texture?5?8?$CFs?8@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ

; 347  : 				string_path			temp;
; 348  : 				R_ASSERT(FS.exist(temp, "$game_textures$", "ed\\ed_not_existing_texture", ".dds"));

	mov	esi, DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@AAY0CAI@DPBD11@Z
	add	esp, 8
	cmp	BYTE PTR ?ignore_always@?CP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	SHORT $LN20@texture_lo
	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	eax, DWORD PTR _temp$13[esp+2760]
	push	OFFSET ??_C@_04LIKELABK@?4dds@
	push	OFFSET ??_C@_0BL@OKPHIHGP@ed?2ed_not_existing_texture@
	push	OFFSET ??_C@_0BA@PHFBKPHL@$game_textures$@
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	esi
	test	eax, eax
	jne	SHORT $LN20@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?CP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	348					; 0000015cH
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0EJ@GNBJIJEJ@FS?4exist?$CItemp?0?5?$CC$game_textures$@
	call	ebx
$LN20@texture_lo:

; 349  : 				R_ASSERT(xr_strcmp(temp, fn));

	cmp	BYTE PTR ?ignore_always@?DD@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA, 0
	jne	SHORT $LN23@texture_lo
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 183  : {	return (int)strcmp(S1,S2);  }

	lea	ecx, DWORD PTR _fn$[esp+2760]
	lea	eax, DWORD PTR _temp$13[esp+2760]
	npad	3
$LL208@texture_lo:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN209@texture_lo
	test	dl, dl
	je	SHORT $LN210@texture_lo
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN209@texture_lo
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL208@texture_lo
$LN210@texture_lo:
	xor	eax, eax
	jmp	SHORT $LN211@texture_lo
$LN209@texture_lo:
	sbb	eax, eax
	or	eax, 1
$LN211@texture_lo:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 349  : 				R_ASSERT(xr_strcmp(temp, fn));

	test	eax, eax
	jne	SHORT $LN23@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DD@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	349					; 0000015dH
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BE@BIPAIHNA@xr_strcmp?$CItemp?0?5fn?$CJ@
	call	ebx
$LN23@texture_lo:

; 350  : 				strcpy(fn, temp);

	xor	ecx, ecx
	npad	4
$LL98@texture_lo:
	mov	al, BYTE PTR _temp$13[esp+ecx+2760]
	lea	ecx, DWORD PTR [ecx+1]
	mov	BYTE PTR _fn$[esp+ecx+2759], al
	test	al, al
	jne	SHORT $LL98@texture_lo

; 351  : 				goto _DDS;

	jmp	$_DDS$225
$LN213@texture_lo:
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 183  : {	return (int)strcmp(S1,S2);  }

	sbb	eax, eax
	or	eax, 1
$LN215@texture_lo:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp

; 390  : 				R_ASSERT(xr_strcmp(temp, fn));

	test	eax, eax
	jne	SHORT $LN29@texture_lo
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DP@??texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z@4_NA
	push	OFFSET ??_C@_0BG@JDBCGCPC@CRender?3?3texture_load@
	push	390					; 00000186H
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BE@BIPAIHNA@xr_strcmp?$CItemp?0?5fn?$CJ@
	call	ebx
$LN29@texture_lo:

; 391  : 				strcpy(fn, temp);

	xor	ecx, ecx
	npad	13
$LL99@texture_lo:
	mov	al, BYTE PTR _temp$11[esp+ecx+2760]
	lea	ecx, DWORD PTR [ecx+1]
	mov	BYTE PTR _fn$[esp+ecx+2759], al
	test	al, al
	jne	SHORT $LL99@texture_lo

; 392  : 				goto _DDS;

	jmp	$_DDS$225
$LN76@texture_lo:

; 352  : 			}
; 353  : 
; 354  : 			// OK
; 355  : 			dwWidth					= IMG.Width;
; 356  : 			dwHeight				= IMG.Height;
; 357  : 			fmt						= IMG.Format;
; 358  : 			ret_msize				= calc_texture_size(img_loaded_lod, mip_cnt, img_size);

	push	edi
	or	edx, -1
	xor	ecx, ecx
	call	?calc_texture_size@@YAIHII@Z		; calc_texture_size
	mov	ecx, DWORD PTR _ret_msize$[ebp]
	add	esp, 4
	mov	DWORD PTR [ecx], eax

; 359  : 			mip_cnt					= pTextureCUBE->GetLevelCount();

	mov	eax, DWORD PTR _pTextureCUBE$[esp+2760]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+52]

; 360  : 			return					pTextureCUBE;

	mov	eax, DWORD PTR _pTextureCUBE$[esp+2760]

; 563  : 	}
; 564  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN79@texture_lo:

; 393  : 			}
; 394  : 
; 395  : 			img_loaded_lod			= get_texture_load_lod(fn);

	lea	ecx, DWORD PTR _fn$[esp+2760]
	call	?get_texture_load_lod@@YAHPBD@Z		; get_texture_load_lod

; 396  : 			pTexture2D				= TW_LoadTextureFromTexture(T_sysmem,IMG.Format, img_loaded_lod, dwWidth, dwHeight);

	mov	ecx, DWORD PTR _T_sysmem$2[esp+2760]
	lea	edx, DWORD PTR _IMG$6[esp+2776]
	mov	ebx, eax
	lea	eax, DWORD PTR _dwHeight$[esp+2760]
	push	eax
	lea	eax, DWORD PTR _dwWidth$[esp+2764]
	push	eax
	push	ebx
	call	?TW_LoadTextureFromTexture@@YAPAUIDirect3DTexture9@@PAU1@AAW4_D3DFORMAT@@HAAI2@Z ; TW_LoadTextureFromTexture
	mov	esi, eax
	add	esp, 12					; 0000000cH

; 397  : 			mip_cnt					= pTexture2D->GetLevelCount();

	mov	ecx, DWORD PTR [esi]
	push	esi
	call	DWORD PTR [ecx+52]

; 398  : 			_RELEASE				(T_sysmem);

	mov	edx, DWORD PTR _T_sysmem$2[esp+2760]
	mov	DWORD PTR _mip_cnt$2$[esp+2760], eax
	test	edx, edx
	je	SHORT $LN82@texture_lo
	mov	ecx, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _mip_cnt$2$[esp+2760]
$LN82@texture_lo:

; 399  : 
; 400  : 			// OK
; 401  : 			fmt						= IMG.Format;
; 402  : 			ret_msize				= calc_texture_size(img_loaded_lod, mip_cnt, img_size);

	push	edi
	mov	edx, eax
	mov	ecx, ebx
$LN220@texture_lo:

; 563  : 	}
; 564  : }

	call	?calc_texture_size@@YAIHII@Z		; calc_texture_size
	mov	ecx, DWORD PTR _ret_msize$[ebp]
	add	esp, 4
	pop	edi
	mov	DWORD PTR [ecx], eax
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?texture_load@CRender@@UAEPAUIDirect3DBaseTexture9@@PBDAAI@Z ENDP ; CRender::texture_load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UItem@CInifile@@@std@@@std@@@std@@QBEPBUItem@CInifile@@XZ
_TEXT	SEGMENT
??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UItem@CInifile@@@std@@@std@@@std@@QBEPBUItem@CInifile@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CInifile::Item> > >::operator->, COMDAT
; _this$ = ecx

; 57   : #if _ITERATOR_DEBUG_LEVEL != 0
; 58   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());
; 59   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");
; 60   :         _STL_VERIFY(
; 61   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 62   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 63   : 
; 64   :         return _Ptr;

	mov	eax, DWORD PTR [ecx]

; 65   :     }

	ret	0
??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UItem@CInifile@@@std@@@std@@@std@@QBEPBUItem@CInifile@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CInifile::Item> > >::operator->
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Texture.cpp
;	COMDAT ??$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z
_TEXT	SEGMENT
_t_dst$1$ = -92						; size = 4
_mips$1$ = -88						; size = 4
_t_src$1$ = -84						; size = 4
_Rdst$1 = -80						; size = 8
_Rsrc$2 = -72						; size = 8
_desc$3 = -64						; size = 32
_descS$4 = -32						; size = 32
_pred$dead$ = 8						; size = 4
??$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z PROC ; TW_Iterate_1OP<unsigned int (__cdecl*)(unsigned int,unsigned int)>, COMDAT
; _t_dst$ = ecx
; _t_src$ = edx

; 168  : {

	sub	esp, 96					; 00000060H
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	mov	ebx, edx
	push	edi

; 169  : 	DWORD mips							= t_dst->GetLevelCount();

	push	esi
	mov	DWORD PTR _t_src$1$[esp+116], ebx
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _t_dst$1$[esp+116], esi
	call	DWORD PTR [eax+52]

; 170  : 	R_ASSERT							(mips == t_src->GetLevelCount());

	cmp	BYTE PTR ?ignore_always@?3???$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z@4_NA, 0 ; `TW_Iterate_1OP<unsigned int (__cdecl*)(unsigned int,unsigned int)>'::`4'::ignore_always
	mov	edi, eax
	mov	DWORD PTR _mips$1$[esp+112], edi
	jne	SHORT $LN2@TW_Iterate
	mov	ecx, DWORD PTR [ebx]
	push	ebx
	call	DWORD PTR [ecx+52]
	cmp	edi, eax
	je	SHORT $LN2@TW_Iterate
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3???$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z@4_NA ; `TW_Iterate_1OP<unsigned int (__cdecl*)(unsigned int,unsigned int)>'::`4'::ignore_always
	push	OFFSET ??_C@_0P@CFKJOMKE@TW_Iterate_1OP@
	push	170					; 000000aaH
	push	OFFSET ??_C@_0DH@EJGCNNOA@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BP@LNIDIILK@mips?5?$DN?$DN?5t_src?9?$DOGetLevelCount?$CI?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN2@TW_Iterate:

; 171  : 	for (DWORD i = 0; i < mips; i++)	{

	xor	ebp, ebp
	test	edi, edi
	je	$LN6@TW_Iterate
$LL7@TW_Iterate:

; 172  : 		D3DLOCKED_RECT				Rsrc,Rdst;
; 173  : 		D3DSURFACE_DESC				desc,descS;
; 174  : 
; 175  : 		t_dst->GetLevelDesc			(i, &desc);

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _desc$3[esp+112]
	push	ecx
	push	ebp
	push	esi
	call	DWORD PTR [eax+68]

; 176  : 		t_src->GetLevelDesc			(i, &descS);

	mov	eax, DWORD PTR [ebx]
	lea	ecx, DWORD PTR _descS$4[esp+112]
	push	ecx
	push	ebp
	push	ebx
	call	DWORD PTR [eax+68]

; 177  : 		VERIFY						(desc.Format==descS.Format);
; 178  : 		VERIFY						(desc.Format==D3DFMT_A8R8G8B8);
; 179  : 		t_src->LockRect				(i,&Rsrc,0,0);

	mov	eax, DWORD PTR [ebx]
	lea	ecx, DWORD PTR _Rsrc$2[esp+112]
	push	0
	push	0
	push	ecx
	push	ebp
	push	ebx
	call	DWORD PTR [eax+76]

; 180  : 		t_dst->LockRect				(i,&Rdst,0,0);

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _Rdst$1[esp+112]
	push	0
	push	0
	push	ecx
	push	ebp
	push	esi
	call	DWORD PTR [eax+76]

; 181  : 		for (u32 y = 0; y < desc.Height; y++)	{

	mov	ecx, DWORD PTR _desc$3[esp+140]
	xor	ebx, ebx
	test	ecx, ecx
	je	SHORT $LN15@TW_Iterate
	mov	eax, DWORD PTR _desc$3[esp+136]
$LL16@TW_Iterate:

; 182  : 			for (u32 x = 0; x < desc.Width; x++)	{

	xor	esi, esi
	test	eax, eax
	je	SHORT $LN14@TW_Iterate
	npad	3
$LL19@TW_Iterate:

; 183  : 				DWORD&	pSrc	= *(((DWORD*)((BYTE*)Rsrc.pBits + (y * Rsrc.Pitch)))+x);

	mov	ecx, DWORD PTR _Rsrc$2[esp+112]

; 184  : 				DWORD&	pDst	= *(((DWORD*)((BYTE*)Rdst.pBits + (y * Rdst.Pitch)))+x);

	lea	edx, DWORD PTR [esi*4]
	mov	edi, DWORD PTR _Rdst$1[esp+112]

; 185  : 				pDst			= pred(pDst,pSrc);

	mov	eax, DWORD PTR _Rsrc$2[esp+116]
	imul	ecx, ebx
	imul	edi, ebx
	add	ecx, edx
	add	edi, edx
	add	edi, DWORD PTR _Rdst$1[esp+116]
	push	DWORD PTR [ecx+eax]
	push	DWORD PTR [edi]
	call	?it_gloss_rev_base@@YAIII@Z		; it_gloss_rev_base
	mov	DWORD PTR [edi], eax
	inc	esi
	mov	eax, DWORD PTR _desc$3[esp+144]
	add	esp, 8
	cmp	esi, eax
	jb	SHORT $LL19@TW_Iterate
	mov	ecx, DWORD PTR _desc$3[esp+140]
$LN14@TW_Iterate:

; 181  : 		for (u32 y = 0; y < desc.Height; y++)	{

	inc	ebx
	cmp	ebx, ecx
	jb	SHORT $LL16@TW_Iterate
	mov	esi, DWORD PTR _t_dst$1$[esp+112]
	mov	edi, DWORD PTR _mips$1$[esp+112]
$LN15@TW_Iterate:

; 186  : 			}
; 187  : 		}
; 188  : 		t_dst->UnlockRect			(i);

	mov	eax, DWORD PTR [esi]
	push	ebp
	push	esi
	call	DWORD PTR [eax+80]

; 189  : 		t_src->UnlockRect			(i);

	mov	ebx, DWORD PTR _t_src$1$[esp+112]
	push	ebp
	push	ebx
	mov	eax, DWORD PTR [ebx]
	call	DWORD PTR [eax+80]
	inc	ebp
	cmp	ebp, edi
	jb	$LL7@TW_Iterate
$LN6@TW_Iterate:

; 190  : 	}
; 191  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 96					; 00000060H
	ret	0
??$TW_Iterate_1OP@P6AIII@Z@@YAXPAUIDirect3DTexture9@@0Q6AIII@Z@Z ENDP ; TW_Iterate_1OP<unsigned int (__cdecl*)(unsigned int,unsigned int)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
;	COMDAT ?xr_strlen@@YAIPBD@Z
_TEXT	SEGMENT
_S$ = 8							; size = 4
?xr_strlen@@YAIPBD@Z PROC				; xr_strlen, COMDAT

; 174  : {	return (u32)strlen(S);			}

	mov	eax, DWORD PTR _S$[esp-4]
	lea	edx, DWORD PTR [eax+1]
$LL3@xr_strlen:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@xr_strlen
	sub	eax, edx
	ret	0
?xr_strlen@@YAIPBD@Z ENDP				; xr_strlen
_TEXT	ENDS
END
