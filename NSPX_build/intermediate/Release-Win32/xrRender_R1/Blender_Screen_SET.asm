; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\blender_screen_set.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@NECCEOCB@basic?5?$CIsimple?$CJ@	; `string'
PUBLIC	??_C@_0N@KCMNEEPG@MUL_2X?5?$CIB?$FOD?$CJ@	; `string'
PUBLIC	??_C@_08FLMCOFMD@SET?5?$CI2r?$CJ@		; `string'
PUBLIC	??_C@_0L@DJIALMOC@BLEND?5?$CI2r?$CJ@		; `string'
PUBLIC	??_C@_0L@BMOLODDO@BLEND?5?$CI4r?$CJ@		; `string'
PUBLIC	??_C@_06EDEKKLFF@Z?9test@			; `string'
PUBLIC	??_C@_07GIDIPOPF@Z?9write@			; `string'
PUBLIC	??_C@_08GGMLLKEC@Lighting@			; `string'
PUBLIC	??_C@_03JPDFGHP@Fog@				; `string'
PUBLIC	??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@	; `string'
PUBLIC	??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@ ; `string'
PUBLIC	??_R2CBlender_Screen_SET@@8			; CBlender_Screen_SET::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBlender_Screen_SET@@8		; CBlender_Screen_SET::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3CBlender_Screen_SET@@8			; CBlender_Screen_SET::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCBlender_Screen_SET@@@8			; CBlender_Screen_SET `RTTI Type Descriptor'
PUBLIC	??_R4CBlender_Screen_SET@@6B@			; CBlender_Screen_SET::`RTTI Complete Object Locator'
PUBLIC	??_7CBlender_Screen_SET@@6B@			; CBlender_Screen_SET::`vftable'
;	COMDAT ?ignore_always@?IM@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?IM@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'[::M]::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?IF@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?IF@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'[::F]::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?HO@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?HO@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`126'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?HH@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?HH@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`119'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?HA@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?HA@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`112'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?GJ@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?GJ@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`105'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?GC@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?GC@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`98'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?FL@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?FL@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`91'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?FE@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?FE@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`84'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?EN@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?EN@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`77'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?EG@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?EG@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`70'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?DP@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?DP@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`63'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?DI@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?DI@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`56'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?DB@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?DB@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`49'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CK@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?CK@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`42'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CD@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?CD@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`35'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BM@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BM@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`28'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BF@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BF@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`21'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?O@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?O@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`14'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?6??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
_BSS	SEGMENT
?ignore_always@?6??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA DB 01H DUP (?) ; `CBlender_Screen_SET::Load'::`7'::ignore_always
_BSS	ENDS
;	COMDAT ??_7CBlender_Screen_SET@@6B@
CONST	SEGMENT
??_7CBlender_Screen_SET@@6B@ DD FLAT:??_R4CBlender_Screen_SET@@6B@ ; CBlender_Screen_SET::`vftable'
	DD	FLAT:?getName@IBlender@@UAEPBDXZ
	DD	FLAT:?getComment@CBlender_Screen_SET@@UAEPBDXZ
	DD	FLAT:?Save@CBlender_Screen_SET@@UAEXAAVIWriter@@@Z
	DD	FLAT:?Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z
	DD	FLAT:?canBeDetailed@IBlender@@UAEHXZ
	DD	FLAT:?canBeLMAPped@CBlender_Screen_SET@@UAEHXZ
	DD	FLAT:?Compile@CBlender_Screen_SET@@UAEXAAVCBlender_Compile@@@Z
	DD	FLAT:??_ECBlender_Screen_SET@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CBlender_Screen_SET@@6B@
rdata$r	SEGMENT
??_R4CBlender_Screen_SET@@6B@ DD 00H			; CBlender_Screen_SET::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBlender_Screen_SET@@@8
	DD	FLAT:??_R3CBlender_Screen_SET@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBlender_Screen_SET@@@8
data$rs	SEGMENT
??_R0?AVCBlender_Screen_SET@@@8 DD FLAT:??_7type_info@@6B@ ; CBlender_Screen_SET `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBlender_Screen_SET@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CBlender_Screen_SET@@8
rdata$r	SEGMENT
??_R3CBlender_Screen_SET@@8 DD 00H			; CBlender_Screen_SET::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBlender_Screen_SET@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBlender_Screen_SET@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBlender_Screen_SET@@8 DD FLAT:??_R0?AVCBlender_Screen_SET@@@8 ; CBlender_Screen_SET::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBlender_Screen_SET@@8
rdata$r	ENDS
;	COMDAT ??_R2CBlender_Screen_SET@@8
rdata$r	SEGMENT
??_R2CBlender_Screen_SET@@8 DD FLAT:??_R1A@?0A@EA@CBlender_Screen_SET@@8 ; CBlender_Screen_SET::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IBlender@@8
	DD	FLAT:??_R1A@?0A@EA@CPropertyBase@@8
rdata$r	ENDS
;	COMDAT ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
CONST	SEGMENT
??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
CONST	SEGMENT
??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@ DB 'CBlender_Screen_SET::'
	DB	'Load', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_03JPDFGHP@Fog@
CONST	SEGMENT
??_C@_03JPDFGHP@Fog@ DB 'Fog', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08GGMLLKEC@Lighting@
CONST	SEGMENT
??_C@_08GGMLLKEC@Lighting@ DB 'Lighting', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GIDIPOPF@Z?9write@
CONST	SEGMENT
??_C@_07GIDIPOPF@Z?9write@ DB 'Z-write', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EDEKKLFF@Z?9test@
CONST	SEGMENT
??_C@_06EDEKKLFF@Z?9test@ DB 'Z-test', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BMOLODDO@BLEND?5?$CI4r?$CJ@
CONST	SEGMENT
??_C@_0L@BMOLODDO@BLEND?5?$CI4r?$CJ@ DB 'BLEND (4r)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DJIALMOC@BLEND?5?$CI2r?$CJ@
CONST	SEGMENT
??_C@_0L@DJIALMOC@BLEND?5?$CI2r?$CJ@ DB 'BLEND (2r)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FLMCOFMD@SET?5?$CI2r?$CJ@
CONST	SEGMENT
??_C@_08FLMCOFMD@SET?5?$CI2r?$CJ@ DB 'SET (2r)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KCMNEEPG@MUL_2X?5?$CIB?$FOD?$CJ@
CONST	SEGMENT
??_C@_0N@KCMNEEPG@MUL_2X?5?$CIB?$FOD?$CJ@ DB 'MUL_2X (B^D)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NECCEOCB@basic?5?$CIsimple?$CJ@
CONST	SEGMENT
??_C@_0P@NECCEOCB@basic?5?$CIsimple?$CJ@ DB 'basic (simple)', 00H ; `string'
PUBLIC	?Compile@CBlender_Screen_SET@@UAEXAAVCBlender_Compile@@@Z ; CBlender_Screen_SET::Compile
PUBLIC	?Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z	; CBlender_Screen_SET::Load
PUBLIC	?Save@CBlender_Screen_SET@@UAEXAAVIWriter@@@Z	; CBlender_Screen_SET::Save
PUBLIC	??1CBlender_Screen_SET@@UAE@XZ			; CBlender_Screen_SET::~CBlender_Screen_SET
PUBLIC	??_GCBlender_Screen_SET@@UAEPAXI@Z		; CBlender_Screen_SET::`scalar deleting destructor'
PUBLIC	??0CBlender_Screen_SET@@QAE@XZ			; CBlender_Screen_SET::CBlender_Screen_SET
PUBLIC	?canBeLMAPped@CBlender_Screen_SET@@UAEHXZ	; CBlender_Screen_SET::canBeLMAPped
PUBLIC	?getComment@CBlender_Screen_SET@@UAEPBDXZ	; CBlender_Screen_SET::getComment
EXTRN	??_ECBlender_Screen_SET@@UAEPAXI@Z:PROC		; CBlender_Screen_SET::`vector deleting destructor'
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.h
;	COMDAT ?getComment@CBlender_Screen_SET@@UAEPBDXZ
_TEXT	SEGMENT
?getComment@CBlender_Screen_SET@@UAEPBDXZ PROC		; CBlender_Screen_SET::getComment, COMDAT
; _this$ = ecx

; 19   : 	virtual		LPCSTR		getComment()	{ return "basic (simple)"; }

	mov	eax, OFFSET ??_C@_0P@NECCEOCB@basic?5?$CIsimple?$CJ@
	ret	0
?getComment@CBlender_Screen_SET@@UAEPBDXZ ENDP		; CBlender_Screen_SET::getComment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.h
;	COMDAT ?canBeLMAPped@CBlender_Screen_SET@@UAEHXZ
_TEXT	SEGMENT
?canBeLMAPped@CBlender_Screen_SET@@UAEHXZ PROC		; CBlender_Screen_SET::canBeLMAPped, COMDAT
; _this$ = ecx

; 20   : 	virtual		BOOL		canBeLMAPped()	{ return FALSE; }

	xor	eax, eax
	ret	0
?canBeLMAPped@CBlender_Screen_SET@@UAEHXZ ENDP		; CBlender_Screen_SET::canBeLMAPped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
_TEXT	SEGMENT
??0CBlender_Screen_SET@@QAE@XZ PROC			; CBlender_Screen_SET::CBlender_Screen_SET
; _this$ = ecx

; 15   : {

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Screen_SET@@6B@

; 17   : 	description.version	= 4;

	mov	eax, 4
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 67   : 	xrP_TOKEN() : IDselected(0), Count(0) {}

	mov	DWORD PTR [esi+328], 0

; 37   : 	xrP_Integer() : value(0), min(0), max(255) {}

	mov	DWORD PTR [esi+336], 0
	mov	DWORD PTR [esi+340], 255		; 000000ffH
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 17   : 	description.version	= 4;

	mov	WORD PTR [esi+176], ax

; 18   : 	oBlend.Count		= VER_4_oBlendCount;
; 19   : 	oBlend.IDselected	= 0;
; 20   : 	oAREF.value			= 32;
; 21   : 	oAREF.min			= 0;
; 22   : 	oAREF.max			= 255;
; 23   : 	oZTest.value		= FALSE;
; 24   : 	oZWrite.value		= FALSE;
; 25   : 	oLighting.value		= FALSE;
; 26   : 	oFog.value			= FALSE;
; 27   : 	oClamp.value		= TRUE;
; 28   : }

	mov	eax, esi
	mov	DWORD PTR [esi+4], 1411391520		; 54202020H
	mov	DWORD PTR [esi+8], 1398756165		; 535f5345H
	mov	DWORD PTR [esi+328], 9
	mov	DWORD PTR [esi+324], 0
	mov	DWORD PTR [esi+332], 32			; 00000020H
	mov	DWORD PTR [esi+336], 0
	mov	DWORD PTR [esi+340], 255		; 000000ffH
	mov	DWORD PTR [esi+344], 0
	mov	DWORD PTR [esi+348], 0
	mov	DWORD PTR [esi+352], 0
	mov	DWORD PTR [esi+356], 0
	mov	DWORD PTR [esi+360], 1
	pop	esi
	ret	0
??0CBlender_Screen_SET@@QAE@XZ ENDP			; CBlender_Screen_SET::CBlender_Screen_SET
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
;	COMDAT ??_GCBlender_Screen_SET@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBlender_Screen_SET@@UAEPAXI@Z PROC			; CBlender_Screen_SET::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 31   : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Screen_SET@@6B@

; 32   : 	
; 33   : }

	call	DWORD PTR __imp_??1IBlender@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	364					; 0000016cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCBlender_Screen_SET@@UAEPAXI@Z ENDP			; CBlender_Screen_SET::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
_TEXT	SEGMENT
??1CBlender_Screen_SET@@UAE@XZ PROC			; CBlender_Screen_SET::~CBlender_Screen_SET
; _this$ = ecx

; 31   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CBlender_Screen_SET@@6B@

; 32   : 	
; 33   : }

	jmp	DWORD PTR __imp_??1IBlender@@UAE@XZ
??1CBlender_Screen_SET@@UAE@XZ ENDP			; CBlender_Screen_SET::~CBlender_Screen_SET
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
_TEXT	SEGMENT
_I$ = -68						; size = 68
_fs$ = 8						; size = 4
?Save@CBlender_Screen_SET@@UAEXAAVIWriter@@@Z PROC	; CBlender_Screen_SET::Save
; _this$ = ecx

; 36   : {

	sub	esp, 68					; 00000044H
	push	ebx
	push	esi

; 37   : 	IBlender::Save	(fs);

	mov	esi, DWORD PTR _fs$[esp+72]
	push	edi
	push	esi
	mov	edi, ecx
	call	DWORD PTR __imp_?Save@IBlender@@UAEXAAVIWriter@@@Z
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	push	7
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 41   : 	xrPWRITE_PROP	(fs,"Blending",	xrPID_TOKEN,     oBlend);

	lea	ebx, DWORD PTR [edi+324]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_08MHMPAKAC@Blending@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN4@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	8
	push	ebx
	call	DWORD PTR [eax+12]
$LN4@Save:
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 42   : 	I.ID = 0; strcpy(I.str,"SET");			fs.w		(&I,sizeof(I));

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _I$[esp+80]
	push	68					; 00000044H
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _I$[esp+88], 0
	mov	DWORD PTR _I$[esp+92], 5522771		; 00544553H
	call	DWORD PTR [eax+12]

; 43   : 	I.ID = 1; strcpy(I.str,"BLEND");		fs.w		(&I,sizeof(I));

	mov	eax, DWORD PTR ??_C@_05NDHFMCLH@BLEND@
	lea	ecx, DWORD PTR _I$[esp+80]
	mov	DWORD PTR _I$[esp+84], eax
	movzx	eax, WORD PTR ??_C@_05NDHFMCLH@BLEND@+4
	mov	WORD PTR _I$[esp+88], ax
	mov	eax, DWORD PTR [esi]
	push	68					; 00000044H
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _I$[esp+88], 1
	call	DWORD PTR [eax+12]

; 44   : 	I.ID = 2; strcpy(I.str,"ADD");			fs.w		(&I,sizeof(I));

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _I$[esp+80]
	push	68					; 00000044H
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _I$[esp+88], 2
	mov	DWORD PTR _I$[esp+92], 4473921		; 00444441H
	call	DWORD PTR [eax+12]

; 45   : 	I.ID = 3; strcpy(I.str,"MUL");			fs.w		(&I,sizeof(I));

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _I$[esp+80]
	push	68					; 00000044H
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _I$[esp+88], 3
	mov	DWORD PTR _I$[esp+92], 5002573		; 004c554dH
	call	DWORD PTR [eax+12]

; 46   : 	I.ID = 4; strcpy(I.str,"MUL_2X");		fs.w		(&I,sizeof(I));

	mov	eax, DWORD PTR ??_C@_06EAOMOBGC@MUL_2X@
	lea	ecx, DWORD PTR _I$[esp+80]
	mov	DWORD PTR _I$[esp+84], eax
	movzx	eax, WORD PTR ??_C@_06EAOMOBGC@MUL_2X@+4
	mov	WORD PTR _I$[esp+88], ax
	movzx	eax, BYTE PTR ??_C@_06EAOMOBGC@MUL_2X@+6
	mov	BYTE PTR _I$[esp+90], al
	mov	eax, DWORD PTR [esi]
	push	68					; 00000044H
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _I$[esp+88], 4
	call	DWORD PTR [eax+12]

; 47   : 	I.ID = 5; strcpy(I.str,"ALPHA-ADD");	fs.w		(&I,sizeof(I));

	mov	eax, DWORD PTR ??_C@_09EKBCGBOF@ALPHA?9ADD@
	lea	ecx, DWORD PTR _I$[esp+80]
	mov	DWORD PTR _I$[esp+84], eax
	mov	eax, DWORD PTR ??_C@_09EKBCGBOF@ALPHA?9ADD@+4
	mov	DWORD PTR _I$[esp+88], eax
	movzx	eax, WORD PTR ??_C@_09EKBCGBOF@ALPHA?9ADD@+8
	mov	WORD PTR _I$[esp+92], ax
	mov	eax, DWORD PTR [esi]
	push	68					; 00000044H
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _I$[esp+88], 5
	call	DWORD PTR [eax+12]

; 48   : 	I.ID = 6; strcpy(I.str,"MUL_2X (B^D)");	fs.w		(&I,sizeof(I));

	mov	eax, DWORD PTR ??_C@_0N@KCMNEEPG@MUL_2X?5?$CIB?$FOD?$CJ@
	lea	ecx, DWORD PTR _I$[esp+80]
	mov	DWORD PTR _I$[esp+84], eax
	mov	eax, DWORD PTR ??_C@_0N@KCMNEEPG@MUL_2X?5?$CIB?$FOD?$CJ@+4
	mov	DWORD PTR _I$[esp+88], eax
	mov	eax, DWORD PTR ??_C@_0N@KCMNEEPG@MUL_2X?5?$CIB?$FOD?$CJ@+8
	mov	DWORD PTR _I$[esp+92], eax
	movzx	eax, BYTE PTR ??_C@_0N@KCMNEEPG@MUL_2X?5?$CIB?$FOD?$CJ@+12
	mov	BYTE PTR _I$[esp+96], al
	mov	eax, DWORD PTR [esi]
	push	68					; 00000044H
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _I$[esp+88], 6
	call	DWORD PTR [eax+12]

; 49   : 	I.ID = 7; strcpy(I.str,"SET (2r)");		fs.w		(&I,sizeof(I));

	mov	eax, DWORD PTR ??_C@_08FLMCOFMD@SET?5?$CI2r?$CJ@
	mov	DWORD PTR _I$[esp+84], eax
	mov	eax, DWORD PTR ??_C@_08FLMCOFMD@SET?5?$CI2r?$CJ@+4
	mov	DWORD PTR _I$[esp+80], 7
	mov	DWORD PTR _I$[esp+88], eax
	movzx	eax, BYTE PTR ??_C@_08FLMCOFMD@SET?5?$CI2r?$CJ@+8
	lea	ecx, DWORD PTR _I$[esp+80]
	mov	BYTE PTR _I$[esp+92], al
	mov	eax, DWORD PTR [esi]
	push	68					; 00000044H
	push	ecx
	mov	ecx, esi
	call	DWORD PTR [eax+12]

; 50   : 	I.ID = 8; strcpy(I.str,"BLEND (2r)");	fs.w		(&I,sizeof(I));

	mov	eax, DWORD PTR ??_C@_0L@DJIALMOC@BLEND?5?$CI2r?$CJ@
	lea	ecx, DWORD PTR _I$[esp+80]
	mov	DWORD PTR _I$[esp+84], eax
	mov	eax, DWORD PTR ??_C@_0L@DJIALMOC@BLEND?5?$CI2r?$CJ@+4
	mov	DWORD PTR _I$[esp+88], eax
	movzx	eax, WORD PTR ??_C@_0L@DJIALMOC@BLEND?5?$CI2r?$CJ@+8
	mov	WORD PTR _I$[esp+92], ax
	movzx	eax, BYTE PTR ??_C@_0L@DJIALMOC@BLEND?5?$CI2r?$CJ@+10
	mov	BYTE PTR _I$[esp+94], al
	mov	eax, DWORD PTR [esi]
	push	68					; 00000044H
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _I$[esp+88], 8
	call	DWORD PTR [eax+12]

; 51   : 	I.ID = 9; strcpy(I.str,"BLEND (4r)");	fs.w		(&I,sizeof(I));

	mov	eax, DWORD PTR ??_C@_0L@BMOLODDO@BLEND?5?$CI4r?$CJ@
	lea	ecx, DWORD PTR _I$[esp+80]
	mov	DWORD PTR _I$[esp+84], eax
	mov	eax, DWORD PTR ??_C@_0L@BMOLODDO@BLEND?5?$CI4r?$CJ@+4
	mov	DWORD PTR _I$[esp+88], eax
	movzx	eax, WORD PTR ??_C@_0L@BMOLODDO@BLEND?5?$CI4r?$CJ@+8
	mov	WORD PTR _I$[esp+92], ax
	movzx	eax, BYTE PTR ??_C@_0L@BMOLODDO@BLEND?5?$CI4r?$CJ@+10
	mov	BYTE PTR _I$[esp+94], al
	mov	eax, DWORD PTR [esi]
	push	68					; 00000044H
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _I$[esp+88], 9
	call	DWORD PTR [eax+12]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	push	6
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 54   : 	xrPWRITE_PROP		(fs,"Texture clamp",xrPID_BOOL,		oClamp);

	lea	ebx, DWORD PTR [edi+360]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_0O@MIAJBJBP@Texture?5clamp@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN7@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	4
	push	ebx
	call	DWORD PTR [eax+12]
$LN7@Save:

; 101  : 	fs.w_u32(ID);

	push	4
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 55   : 	xrPWRITE_PROP		(fs,"Alpha ref",	xrPID_INTEGER,	oAREF);

	lea	ebx, DWORD PTR [edi+332]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_09HNLHEELD@Alpha?5ref@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN10@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	12					; 0000000cH
	push	ebx
	call	DWORD PTR [eax+12]
$LN10@Save:

; 101  : 	fs.w_u32(ID);

	push	6
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 56   : 	xrPWRITE_PROP		(fs,"Z-test",		xrPID_BOOL,		oZTest);

	lea	ebx, DWORD PTR [edi+344]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_06EDEKKLFF@Z?9test@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN13@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	4
	push	ebx
	call	DWORD PTR [eax+12]
$LN13@Save:

; 101  : 	fs.w_u32(ID);

	push	6
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 57   : 	xrPWRITE_PROP		(fs,"Z-write",		xrPID_BOOL,		oZWrite);

	lea	ebx, DWORD PTR [edi+348]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_07GIDIPOPF@Z?9write@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN16@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	4
	push	ebx
	call	DWORD PTR [eax+12]
$LN16@Save:

; 101  : 	fs.w_u32(ID);

	push	6
	mov	ecx, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 58   : 	xrPWRITE_PROP		(fs,"Lighting",		xrPID_BOOL,		oLighting);

	lea	ebx, DWORD PTR [edi+352]
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 101  : 	fs.w_u32(ID);

	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_08GGMLLKEC@Lighting@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z

; 103  : 	if (data && size)	fs.w(data, size);

	test	ebx, ebx
	je	SHORT $LN19@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	4
	push	ebx
	call	DWORD PTR [eax+12]
$LN19@Save:

; 101  : 	fs.w_u32(ID);

	push	6
	mov	ecx, esi
	call	DWORD PTR __imp_?w_u32@IWriter@@QAEXI@Z

; 102  : 	fs.w_stringZ(name);

	push	OFFSET ??_C@_03JPDFGHP@Fog@
	mov	ecx, esi
	call	DWORD PTR __imp_?w_stringZ@IWriter@@QAEXPBD@Z
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 59   : 	xrPWRITE_PROP		(fs,"Fog",			xrPID_BOOL,		oFog);

	add	edi, 356				; 00000164H
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 103  : 	if (data && size)	fs.w(data, size);

	je	SHORT $LN22@Save
	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	push	4
	push	edi
	call	DWORD PTR [eax+12]
$LN22@Save:
	pop	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 60   : }

	pop	esi
	pop	ebx
	add	esp, 68					; 00000044H
	ret	4
?Save@CBlender_Screen_SET@@UAEXAAVIWriter@@@Z ENDP	; CBlender_Screen_SET::Save
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
_version$ = 12						; size = 2
?Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z PROC	; CBlender_Screen_SET::Load
; _this$ = ecx

; 63   : {

	push	ebx
	push	ebp
	push	esi

; 64   : 	IBlender::Load		(fs,version);

	mov	esi, DWORD PTR _version$[esp+8]
	mov	ebx, ecx
	push	edi
	mov	edi, DWORD PTR _fs$[esp+12]
	push	esi
	push	edi
	call	DWORD PTR __imp_?Load@IBlender@@UAEXAAVIReader@@G@Z

; 65   : 
; 66   : 	switch (version)	{

	movzx	eax, si
	sub	eax, 2
	je	$LN6@Load
	sub	eax, 1
	je	$LN36@Load

; 85   : 		xrPREAD_PROP		(fs,xrPID_TOKEN,		oBlend);	oBlend.Count =   VER_5_oBlendCount;

	cmp	BYTE PTR ?ignore_always@?GC@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN69@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 85   : 		xrPREAD_PROP		(fs,xrPID_TOKEN,		oBlend);	oBlend.Count =   VER_5_oBlendCount;

	cmp	esi, 7
	je	SHORT $LN69@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?GC@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	85					; 00000055H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BJ@IPOGOJGI@xrPID_TOKEN?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN69@Load:
	mov	ebp, DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z
	lea	eax, DWORD PTR [ebx+324]
	push	8
	push	eax
	mov	ecx, edi
	call	ebp
	mov	eax, DWORD PTR [ebx+328]
	mov	ecx, eax
	shl	ecx, 4
	add	ecx, eax
	shl	ecx, 2
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 265  : 	IC void			advance		(int cnt)		{	Pos+=cnt;VERIFY((Pos<=Size) && (Pos>=0));};

	add	DWORD PTR [edi+8], ecx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 85   : 		xrPREAD_PROP		(fs,xrPID_TOKEN,		oBlend);	oBlend.Count =   VER_5_oBlendCount;

	mov	DWORD PTR [ebx+328], 10			; 0000000aH

; 86   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oClamp);

	cmp	BYTE PTR ?ignore_always@?GJ@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN74@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 86   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oClamp);

	cmp	esi, 6
	je	SHORT $LN74@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?GJ@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	86					; 00000056H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN74@Load:
	push	4
	lea	eax, DWORD PTR [ebx+360]
	mov	ecx, edi
	push	eax
	call	ebp

; 87   : 		xrPREAD_PROP		(fs,xrPID_INTEGER,		oAREF);

	cmp	BYTE PTR ?ignore_always@?HA@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN79@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 87   : 		xrPREAD_PROP		(fs,xrPID_INTEGER,		oAREF);

	cmp	esi, 4
	je	SHORT $LN79@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?HA@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	87					; 00000057H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@OMCBIJFA@xrPID_INTEGER?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN79@Load:
	push	12					; 0000000cH
	lea	eax, DWORD PTR [ebx+332]
	mov	ecx, edi
	push	eax
	call	ebp

; 88   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZTest);

	cmp	BYTE PTR ?ignore_always@?HH@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN84@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 88   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZTest);

	cmp	esi, 6
	je	SHORT $LN84@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?HH@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	88					; 00000058H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN84@Load:
	push	4
	lea	eax, DWORD PTR [ebx+344]
	mov	ecx, edi
	push	eax
	call	ebp

; 89   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZWrite);

	cmp	BYTE PTR ?ignore_always@?HO@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN89@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 89   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZWrite);

	cmp	esi, 6
	je	SHORT $LN89@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?HO@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	89					; 00000059H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN89@Load:
	push	4
	lea	eax, DWORD PTR [ebx+348]
	mov	ecx, edi
	push	eax
	call	ebp

; 90   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oLighting);

	cmp	BYTE PTR ?ignore_always@?IF@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN94@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 90   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oLighting);

	cmp	esi, 6
	je	SHORT $LN94@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?IF@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	90					; 0000005aH
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN94@Load:
	push	4
	lea	eax, DWORD PTR [ebx+352]
	mov	ecx, edi
	push	eax
	call	ebp

; 91   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oFog);

	cmp	BYTE PTR ?ignore_always@?IM@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	$LN29@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 91   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oFog);

	cmp	esi, 6
	je	$LN29@Load
	push	OFFSET ?ignore_always@?IM@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	91					; 0000005bH
	jmp	$LN408@Load
$LN36@Load:

; 76   : 		xrPREAD_PROP		(fs,xrPID_TOKEN,		oBlend);	oBlend.Count =   VER_5_oBlendCount;

	cmp	BYTE PTR ?ignore_always@?DB@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN34@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 76   : 		xrPREAD_PROP		(fs,xrPID_TOKEN,		oBlend);	oBlend.Count =   VER_5_oBlendCount;

	cmp	esi, 7
	je	SHORT $LN34@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DB@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	76					; 0000004cH
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BJ@IPOGOJGI@xrPID_TOKEN?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN34@Load:
	mov	ebp, DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z
	lea	eax, DWORD PTR [ebx+324]
	push	8
	push	eax
	mov	ecx, edi
	call	ebp
	mov	eax, DWORD PTR [ebx+328]
	mov	ecx, eax
	shl	ecx, 4
	add	ecx, eax
	shl	ecx, 2
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 265  : 	IC void			advance		(int cnt)		{	Pos+=cnt;VERIFY((Pos<=Size) && (Pos>=0));};

	add	DWORD PTR [edi+8], ecx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 76   : 		xrPREAD_PROP		(fs,xrPID_TOKEN,		oBlend);	oBlend.Count =   VER_5_oBlendCount;

	mov	DWORD PTR [ebx+328], 10			; 0000000aH

; 77   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oClamp);

	cmp	BYTE PTR ?ignore_always@?DI@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN39@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 77   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oClamp);

	cmp	esi, 6
	je	SHORT $LN39@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DI@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	77					; 0000004dH
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN39@Load:
	push	4
	lea	eax, DWORD PTR [ebx+360]
	mov	ecx, edi
	push	eax
	call	ebp

; 78   : 		xrPREAD_PROP		(fs,xrPID_INTEGER,		oAREF);

	cmp	BYTE PTR ?ignore_always@?DP@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN44@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 78   : 		xrPREAD_PROP		(fs,xrPID_INTEGER,		oAREF);

	cmp	esi, 4
	je	SHORT $LN44@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DP@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	78					; 0000004eH
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@OMCBIJFA@xrPID_INTEGER?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN44@Load:
	push	12					; 0000000cH
	lea	eax, DWORD PTR [ebx+332]
	mov	ecx, edi
	push	eax
	call	ebp

; 79   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZTest);

	cmp	BYTE PTR ?ignore_always@?EG@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN49@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 79   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZTest);

	cmp	esi, 6
	je	SHORT $LN49@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?EG@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	79					; 0000004fH
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN49@Load:
	push	4
	lea	eax, DWORD PTR [ebx+344]
	mov	ecx, edi
	push	eax
	call	ebp

; 80   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZWrite);

	cmp	BYTE PTR ?ignore_always@?EN@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN54@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 80   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZWrite);

	cmp	esi, 6
	je	SHORT $LN54@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?EN@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	80					; 00000050H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN54@Load:
	push	4
	lea	eax, DWORD PTR [ebx+348]
	mov	ecx, edi
	push	eax
	call	ebp

; 81   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oLighting);

	cmp	BYTE PTR ?ignore_always@?FE@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN59@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 81   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oLighting);

	cmp	esi, 6
	je	SHORT $LN59@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?FE@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	81					; 00000051H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN59@Load:
	push	4
	lea	eax, DWORD PTR [ebx+352]
	mov	ecx, edi
	push	eax
	call	ebp

; 82   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oFog);

	cmp	BYTE PTR ?ignore_always@?FL@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	$LN29@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 82   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oFog);

	cmp	esi, 6
	je	$LN29@Load
	push	OFFSET ?ignore_always@?FL@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	82					; 00000052H
	jmp	$LN408@Load
$LN6@Load:

; 68   : 		xrPREAD_PROP		(fs,xrPID_TOKEN,		oBlend);	oBlend.Count =   VER_5_oBlendCount;

	cmp	BYTE PTR ?ignore_always@?6??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN4@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 68   : 		xrPREAD_PROP		(fs,xrPID_TOKEN,		oBlend);	oBlend.Count =   VER_5_oBlendCount;

	cmp	esi, 7
	je	SHORT $LN4@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?6??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	68					; 00000044H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BJ@IPOGOJGI@xrPID_TOKEN?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN4@Load:
	mov	ebp, DWORD PTR __imp_?r@IReader@@QAEXPAXH@Z
	lea	eax, DWORD PTR [ebx+324]
	push	8
	push	eax
	mov	ecx, edi
	call	ebp
	mov	eax, DWORD PTR [ebx+328]
	mov	ecx, eax
	shl	ecx, 4
	add	ecx, eax
	shl	ecx, 2
; File I:\Vitalya\mine\NSProjectX\xrCore\FS.h

; 265  : 	IC void			advance		(int cnt)		{	Pos+=cnt;VERIFY((Pos<=Size) && (Pos>=0));};

	add	DWORD PTR [edi+8], ecx
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 68   : 		xrPREAD_PROP		(fs,xrPID_TOKEN,		oBlend);	oBlend.Count =   VER_5_oBlendCount;

	mov	DWORD PTR [ebx+328], 10			; 0000000aH

; 69   : 		xrPREAD_PROP		(fs,xrPID_INTEGER,		oAREF);

	cmp	BYTE PTR ?ignore_always@?O@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN9@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 69   : 		xrPREAD_PROP		(fs,xrPID_INTEGER,		oAREF);

	cmp	esi, 4
	je	SHORT $LN9@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?O@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	69					; 00000045H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BL@OMCBIJFA@xrPID_INTEGER?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN9@Load:
	push	12					; 0000000cH
	lea	eax, DWORD PTR [ebx+332]
	mov	ecx, edi
	push	eax
	call	ebp

; 70   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZTest);

	cmp	BYTE PTR ?ignore_always@?BF@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN14@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 70   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZTest);

	cmp	esi, 6
	je	SHORT $LN14@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BF@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	70					; 00000046H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN14@Load:
	push	4
	lea	eax, DWORD PTR [ebx+344]
	mov	ecx, edi
	push	eax
	call	ebp

; 71   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZWrite);

	cmp	BYTE PTR ?ignore_always@?BM@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN19@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 71   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oZWrite);

	cmp	esi, 6
	je	SHORT $LN19@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BM@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	71					; 00000047H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN19@Load:
	push	4
	lea	eax, DWORD PTR [ebx+348]
	mov	ecx, edi
	push	eax
	call	ebp

; 72   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oLighting);

	cmp	BYTE PTR ?ignore_always@?CD@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN24@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 72   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oLighting);

	cmp	esi, 6
	je	SHORT $LN24@Load
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?CD@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	72					; 00000048H
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN24@Load:
	push	4
	lea	eax, DWORD PTR [ebx+352]
	mov	ecx, edi
	push	eax
	call	ebp

; 73   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oFog);

	cmp	BYTE PTR ?ignore_always@?CK@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA, 0
	jne	SHORT $LN29@Load
; File I:\Vitalya\mine\NSProjectX\xrEngine\properties.h

; 118  : 	u32 T = fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 119  : 	fs.skip_stringZ();

	mov	ecx, edi
	mov	esi, eax
	call	DWORD PTR __imp_?skip_stringZ@IReader@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp

; 73   : 		xrPREAD_PROP		(fs,xrPID_BOOL,			oFog);

	cmp	esi, 6
	je	SHORT $LN29@Load
	push	OFFSET ?ignore_always@?CK@??Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z@4_NA
	push	OFFSET ??_C@_0BK@LOOBMOEJ@CBlender_Screen_SET?3?3Load@
	push	73					; 00000049H
$LN408@Load:
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ??_C@_0EC@KBPOHGGH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BI@FFCKKNMB@xrPID_BOOL?$DN?$DNxrPREAD?$CIfs?$CJ@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN29@Load:
	push	4
	lea	eax, DWORD PTR [ebx+356]
	mov	ecx, edi
	push	eax
	call	ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 92   : 		break;
; 93   : 	}
; 94   : }

	ret	8
?Load@CBlender_Screen_SET@@UAEXAAVIReader@@G@Z ENDP	; CBlender_Screen_SET::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRender\Blender_Screen_SET.cpp
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_C$ = 8							; size = 4
?Compile@CBlender_Screen_SET@@UAEXAAVCBlender_Compile@@@Z PROC ; CBlender_Screen_SET::Compile
; _this$ = ecx

; 97   : {

	push	ecx
	push	ebx
	push	esi

; 98   : 	IBlender::Compile		(C);

	mov	esi, DWORD PTR _C$[esp+8]
	mov	ebx, ecx
	push	esi
	mov	DWORD PTR _this$1$[esp+16], ebx
	call	DWORD PTR __imp_?Compile@IBlender@@UAEXAAVCBlender_Compile@@@Z

; 99   : 	C.PassBegin		();

	mov	ecx, esi
	call	DWORD PTR __imp_?PassBegin@CBlender_Compile@@QAEXXZ

; 100  : 	{
; 101  : 		C.PassSET_ZB		(oZTest.value,oZWrite.value);

	push	0
	push	DWORD PTR [ebx+348]
	mov	ecx, esi
	push	DWORD PTR [ebx+344]
	call	DWORD PTR __imp_?PassSET_ZB@CBlender_Compile@@QAEXHHH@Z

; 102  : 		switch (oBlend.IDselected)

	mov	eax, DWORD PTR [ebx+324]
	cmp	eax, 9
	ja	SHORT $LN2@Compile
	jmp	DWORD PTR $LN22@Compile[eax*4]
$LN4@Compile:

; 103  : 		{
; 104  : 		case 0:	// SET
; 105  : 			C.PassSET_Blend	(FALSE,	D3DBLEND_ONE,D3DBLEND_ZERO,				FALSE,0);

	push	0
	push	0
	push	1
	push	2
	push	0

; 106  : 			break;

	jmp	SHORT $LN23@Compile
$LN6@Compile:

; 107  : 		case 1: // BLEND
; 108  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_SRCALPHA,D3DBLEND_INVSRCALPHA,	TRUE,oAREF.value);
; 109  : 			break;
; 110  : 		case 2:	// ADD
; 111  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_ONE,D3DBLEND_ONE,				FALSE,oAREF.value);

	push	DWORD PTR [ebx+332]
	push	0
	push	2
	push	2

; 112  : 			break;

	jmp	SHORT $LN24@Compile
$LN7@Compile:

; 113  : 		case 3:	// MUL
; 114  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_DESTCOLOR,D3DBLEND_ZERO,		FALSE,oAREF.value);

	push	DWORD PTR [ebx+332]
	push	0
	push	1
	push	9

; 115  : 			break;

	jmp	SHORT $LN24@Compile
$LN8@Compile:

; 128  : 		case 8: // BLEND (2r)
; 129  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_SRCALPHA,D3DBLEND_INVSRCALPHA,	TRUE,oAREF.value);
; 130  : 			break;
; 131  : 		case 9: // BLEND (2r)
; 132  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_SRCALPHA,D3DBLEND_INVSRCALPHA,	TRUE,oAREF.value);
; 133  : 			break;
; 134  : 		}
; 135  : 		C.PassSET_LightFog	(oLighting.value,oFog.value);

	push	DWORD PTR [ebx+332]
	push	0
	push	3
	push	9
	jmp	SHORT $LN24@Compile
$LN9@Compile:

; 116  : 		case 4:	// MUL_2X
; 117  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_DESTCOLOR,D3DBLEND_SRCCOLOR,	FALSE,oAREF.value);
; 118  : 			break;
; 119  : 		case 5:	// ALPHA-ADD
; 120  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_SRCALPHA,D3DBLEND_ONE,			TRUE,oAREF.value);

	push	DWORD PTR [ebx+332]
	push	1
	push	2

; 121  : 			break;

	jmp	SHORT $LN25@Compile
$LN11@Compile:

; 122  : 		case 6:	// MUL_2X + A-test
; 123  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_DESTCOLOR,D3DBLEND_SRCCOLOR,	FALSE,oAREF.value);
; 124  : 			break;
; 125  : 		case 7:	// SET (2r)
; 126  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_ONE,D3DBLEND_ZERO,				TRUE,0);

	push	0
	push	1
	push	1
	push	2

; 127  : 			break;

	jmp	SHORT $LN24@Compile
$LN13@Compile:

; 128  : 		case 8: // BLEND (2r)
; 129  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_SRCALPHA,D3DBLEND_INVSRCALPHA,	TRUE,oAREF.value);
; 130  : 			break;
; 131  : 		case 9: // BLEND (2r)
; 132  : 			C.PassSET_Blend	(TRUE,	D3DBLEND_SRCALPHA,D3DBLEND_INVSRCALPHA,	TRUE,oAREF.value);
; 133  : 			break;
; 134  : 		}
; 135  : 		C.PassSET_LightFog	(oLighting.value,oFog.value);

	push	DWORD PTR [ebx+332]
	push	1
	push	6
$LN25@Compile:
	push	5
$LN24@Compile:
	push	1
$LN23@Compile:
	mov	ecx, esi
	call	DWORD PTR __imp_?PassSET_Blend@CBlender_Compile@@QAEXHIIHI@Z
$LN2@Compile:
	push	DWORD PTR [ebx+356]
	mov	ecx, esi
	push	DWORD PTR [ebx+352]
	call	DWORD PTR __imp_?PassSET_LightFog@CBlender_Compile@@QAEXHH@Z

; 136  : 		// C.PassSET_LightFog	(FALSE,FALSE);
; 137  : 
; 138  : 		if (oBlend.IDselected==6)	

	cmp	DWORD PTR [ebx+324], 6
	mov	ecx, esi
	jne	$LN14@Compile

; 139  : 		{
; 140  : 			// Usually for wallmarks
; 141  : 			C.StageBegin		();

	push	ebp
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 142  : 			C.StageSET_Address	(oClamp.value?D3DTADDRESS_CLAMP:D3DTADDRESS_WRAP);

	xor	eax, eax
	mov	ecx, esi
	cmp	DWORD PTR [ebx+360], eax
	setne	al
	lea	eax, DWORD PTR [eax*2+1]
	push	eax
	call	DWORD PTR __imp_?StageSET_Address@CBlender_Compile@@QAEXI@Z

; 143  : 			C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,	D3DTA_DIFFUSE);

	push	0
	push	2
	push	2
	mov	ecx, esi
	call	DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z

; 144  : 			C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,	D3DTA_DIFFUSE);

	push	0
	push	2
	push	2
	mov	ecx, esi
	call	DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z

; 145  : 			C.Stage_Texture		(oT_Name);

	mov	ebp, DWORD PTR __imp_?Stage_Texture@CBlender_Compile@@QAEXPBDIIII@Z
	lea	eax, DWORD PTR [ebx+196]
	push	2
	push	2
	push	2
	push	1
	push	eax
	mov	ecx, esi
	call	ebp

; 146  : 			C.Stage_Matrix		("$null",0);

	mov	ebx, DWORD PTR __imp_?Stage_Matrix@CBlender_Compile@@QAEXPBDH@Z
	mov	ecx, esi
	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	call	ebx

; 147  : 			C.Stage_Constant	("$null");

	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, esi
	call	DWORD PTR __imp_?Stage_Constant@CBlender_Compile@@QAEXPBD@Z

; 148  : 			C.StageEnd			();

	mov	ecx, esi
	mov	esi, DWORD PTR __imp_?StageEnd@CBlender_Compile@@QAEXXZ
	call	esi

; 149  : 
; 150  : 			C.StageBegin		();

	mov	ecx, DWORD PTR _C$[esp+12]
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 151  : 			C.StageSET_Address	(oClamp.value?D3DTADDRESS_CLAMP:D3DTADDRESS_WRAP);

	mov	ecx, DWORD PTR _this$1$[esp+16]
	xor	eax, eax
	cmp	DWORD PTR [ecx+360], eax
	mov	ecx, DWORD PTR _C$[esp+12]
	setne	al
	lea	eax, DWORD PTR [eax*2+1]
	push	eax
	call	DWORD PTR __imp_?StageSET_Address@CBlender_Compile@@QAEXI@Z

; 152  : 			C.StageSET_Color	(D3DTA_DIFFUSE,	  D3DTOP_BLENDDIFFUSEALPHA,	D3DTA_CURRENT);

	mov	ecx, DWORD PTR _C$[esp+12]
	push	1
	push	12					; 0000000cH
	push	0
	call	DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z

; 153  : 			C.StageSET_Alpha	(D3DTA_DIFFUSE,	  D3DTOP_MODULATE,			D3DTA_CURRENT);

	mov	ecx, DWORD PTR _C$[esp+12]
	push	1
	push	4
	push	0
	call	DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z

; 154  : 			C.Stage_Texture		("$null");

	mov	ecx, DWORD PTR _C$[esp+12]
	push	2
	push	2
	push	2
	push	1
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	call	ebp

; 155  : 			C.Stage_Matrix		("$null",	0);

	mov	ebp, DWORD PTR _C$[esp+12]
	mov	ecx, ebp
	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	call	ebx

; 156  : 			C.Stage_Constant	("$null");

	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, ebp
	call	DWORD PTR __imp_?Stage_Constant@CBlender_Compile@@QAEXPBD@Z

; 157  : 			C.StageEnd			();

	mov	ecx, ebp
	call	esi

; 158  : 		} else {

	mov	esi, ebp
	pop	ebp

; 182  : 		}
; 183  : 	}
; 184  : 	C.PassEnd			();

	mov	ecx, esi
	call	DWORD PTR __imp_?PassEnd@CBlender_Compile@@QAEXXZ
	pop	esi
	pop	ebx

; 185  : }

	pop	ecx
	ret	4
$LN14@Compile:

; 159  : 			C.StageBegin		();

	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 160  : 			C.StageSET_Address	(oClamp.value?D3DTADDRESS_CLAMP:D3DTADDRESS_WRAP);

	xor	eax, eax
	mov	ecx, esi
	cmp	DWORD PTR [ebx+360], eax
	setne	al
	lea	eax, DWORD PTR [eax*2+1]
	push	eax
	call	DWORD PTR __imp_?StageSET_Address@CBlender_Compile@@QAEXI@Z

; 161  : 			if (9==oBlend.IDselected)

	mov	eax, DWORD PTR [ebx+324]
	cmp	eax, 9
	jne	SHORT $LN16@Compile

; 162  : 			{
; 163  : 				// 4x R
; 164  : 				C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_MODULATE4X,	D3DTA_DIFFUSE);

	push	0
	push	6

; 165  : 				C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,	D3DTA_DIFFUSE);
; 166  : 			} else {

	jmp	SHORT $LN26@Compile
$LN16@Compile:

; 167  : 				if ((7==oBlend.IDselected) || (8==oBlend.IDselected))

	cmp	eax, 7
	je	SHORT $LN20@Compile
	cmp	eax, 8
	je	SHORT $LN20@Compile

; 171  : 					C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,	D3DTA_DIFFUSE);
; 172  : 				} else {
; 173  : 					// 1x R
; 174  : 					C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_MODULATE,		D3DTA_DIFFUSE);

	push	0
	push	4
	push	2
	mov	ecx, esi
	call	DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z

; 175  : 					C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_MODULATE,		D3DTA_DIFFUSE);

	push	0
	push	4
	jmp	SHORT $LN27@Compile
$LN20@Compile:

; 168  : 				{
; 169  : 					// 2x R
; 170  : 					C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_MODULATE2X,	D3DTA_DIFFUSE);

	push	0
	push	5
$LN26@Compile:

; 176  : 				}
; 177  : 			}
; 178  : 			C.Stage_Texture		(oT_Name);

	push	2
	mov	ecx, esi
	call	DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z
	push	0
	push	2
$LN27@Compile:
	push	2
	mov	ecx, esi
	call	DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z
	push	2
	push	2
	push	2
	push	1
	lea	eax, DWORD PTR [ebx+196]
	mov	ecx, esi
	push	eax
	call	DWORD PTR __imp_?Stage_Texture@CBlender_Compile@@QAEXPBDIIII@Z

; 179  : 			C.Stage_Matrix		(oT_xform,	0);

	push	0
	lea	eax, DWORD PTR [ebx+260]
	mov	ecx, esi
	push	eax
	call	DWORD PTR __imp_?Stage_Matrix@CBlender_Compile@@QAEXPBDH@Z

; 180  : 			C.Stage_Constant	("$null");

	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, esi
	call	DWORD PTR __imp_?Stage_Constant@CBlender_Compile@@QAEXPBD@Z

; 181  : 			C.StageEnd			();

	mov	ecx, esi
	call	DWORD PTR __imp_?StageEnd@CBlender_Compile@@QAEXXZ

; 182  : 		}
; 183  : 	}
; 184  : 	C.PassEnd			();

	mov	ecx, esi
	call	DWORD PTR __imp_?PassEnd@CBlender_Compile@@QAEXXZ
	pop	esi
	pop	ebx

; 185  : }

	pop	ecx
	ret	4
	npad	2
$LN22@Compile:
	DD	$LN4@Compile
	DD	$LN13@Compile
	DD	$LN6@Compile
	DD	$LN7@Compile
	DD	$LN8@Compile
	DD	$LN9@Compile
	DD	$LN8@Compile
	DD	$LN11@Compile
	DD	$LN13@Compile
	DD	$LN13@Compile
?Compile@CBlender_Screen_SET@@UAEXAAVCBlender_Compile@@@Z ENDP ; CBlender_Screen_SET::Compile
_TEXT	ENDS
END
