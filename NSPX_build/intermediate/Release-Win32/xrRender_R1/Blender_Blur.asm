; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r1\blender_blur.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@LOIABOBP@INTERNAL?3?5blur@		; `string'
PUBLIC	??_C@_06FANPPNOI@$base0@			; `string'
PUBLIC	??_C@_06EJMEMMKJ@$base1@			; `string'
PUBLIC	??_R2CBlender_Blur@@8				; CBlender_Blur::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBlender_Blur@@8			; CBlender_Blur::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3CBlender_Blur@@8				; CBlender_Blur::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCBlender_Blur@@@8			; CBlender_Blur `RTTI Type Descriptor'
PUBLIC	??_R4CBlender_Blur@@6B@				; CBlender_Blur::`RTTI Complete Object Locator'
PUBLIC	??_7CBlender_Blur@@6B@				; CBlender_Blur::`vftable'
EXTRN	__imp_?R@CBlender_Compile@@QAEAAVCSimulator@@XZ:PROC
EXTRN	__imp_?SetRS@CSimulator@@QAEXII@Z:PROC
EXTRN	__imp_?StageSET_Color3@CBlender_Compile@@QAEXIIII@Z:PROC
;	COMDAT ??_7CBlender_Blur@@6B@
CONST	SEGMENT
??_7CBlender_Blur@@6B@ DD FLAT:??_R4CBlender_Blur@@6B@	; CBlender_Blur::`vftable'
	DD	FLAT:?getName@IBlender@@UAEPBDXZ
	DD	FLAT:?getComment@CBlender_Blur@@UAEPBDXZ
	DD	FLAT:?Save@CBlender_Blur@@UAEXAAVIWriter@@@Z
	DD	FLAT:?Load@CBlender_Blur@@UAEXAAVIReader@@G@Z
	DD	FLAT:?canBeDetailed@IBlender@@UAEHXZ
	DD	FLAT:?canBeLMAPped@CBlender_Blur@@UAEHXZ
	DD	FLAT:?Compile@CBlender_Blur@@UAEXAAVCBlender_Compile@@@Z
	DD	FLAT:??_ECBlender_Blur@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CBlender_Blur@@6B@
rdata$r	SEGMENT
??_R4CBlender_Blur@@6B@ DD 00H				; CBlender_Blur::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBlender_Blur@@@8
	DD	FLAT:??_R3CBlender_Blur@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBlender_Blur@@@8
data$rs	SEGMENT
??_R0?AVCBlender_Blur@@@8 DD FLAT:??_7type_info@@6B@	; CBlender_Blur `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBlender_Blur@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CBlender_Blur@@8
rdata$r	SEGMENT
??_R3CBlender_Blur@@8 DD 00H				; CBlender_Blur::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBlender_Blur@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBlender_Blur@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBlender_Blur@@8 DD FLAT:??_R0?AVCBlender_Blur@@@8 ; CBlender_Blur::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBlender_Blur@@8
rdata$r	ENDS
;	COMDAT ??_R2CBlender_Blur@@8
rdata$r	SEGMENT
??_R2CBlender_Blur@@8 DD FLAT:??_R1A@?0A@EA@CBlender_Blur@@8 ; CBlender_Blur::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IBlender@@8
	DD	FLAT:??_R1A@?0A@EA@CPropertyBase@@8
rdata$r	ENDS
;	COMDAT ??_C@_06EJMEMMKJ@$base1@
CONST	SEGMENT
??_C@_06EJMEMMKJ@$base1@ DB '$base1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FANPPNOI@$base0@
CONST	SEGMENT
??_C@_06FANPPNOI@$base0@ DB '$base0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LOIABOBP@INTERNAL?3?5blur@
CONST	SEGMENT
??_C@_0P@LOIABOBP@INTERNAL?3?5blur@ DB 'INTERNAL: blur', 00H ; `string'
PUBLIC	?Compile@CBlender_Blur@@UAEXAAVCBlender_Compile@@@Z ; CBlender_Blur::Compile
PUBLIC	?Load@CBlender_Blur@@UAEXAAVIReader@@G@Z	; CBlender_Blur::Load
PUBLIC	?Save@CBlender_Blur@@UAEXAAVIWriter@@@Z		; CBlender_Blur::Save
PUBLIC	??1CBlender_Blur@@UAE@XZ			; CBlender_Blur::~CBlender_Blur
PUBLIC	??_GCBlender_Blur@@UAEPAXI@Z			; CBlender_Blur::`scalar deleting destructor'
PUBLIC	??0CBlender_Blur@@QAE@XZ			; CBlender_Blur::CBlender_Blur
PUBLIC	?canBeLMAPped@CBlender_Blur@@UAEHXZ		; CBlender_Blur::canBeLMAPped
PUBLIC	?getComment@CBlender_Blur@@UAEPBDXZ		; CBlender_Blur::getComment
EXTRN	??_ECBlender_Blur@@UAEPAXI@Z:PROC		; CBlender_Blur::`vector deleting destructor'
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.h
;	COMDAT ?getComment@CBlender_Blur@@UAEPBDXZ
_TEXT	SEGMENT
?getComment@CBlender_Blur@@UAEPBDXZ PROC		; CBlender_Blur::getComment, COMDAT
; _this$ = ecx

; 8    : 	virtual		LPCSTR		getComment()	{ return "INTERNAL: blur";	}

	mov	eax, OFFSET ??_C@_0P@LOIABOBP@INTERNAL?3?5blur@
	ret	0
?getComment@CBlender_Blur@@UAEPBDXZ ENDP		; CBlender_Blur::getComment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.h
;	COMDAT ?canBeLMAPped@CBlender_Blur@@UAEHXZ
_TEXT	SEGMENT
?canBeLMAPped@CBlender_Blur@@UAEHXZ PROC		; CBlender_Blur::canBeLMAPped, COMDAT
; _this$ = ecx

; 9    : 	virtual		BOOL		canBeLMAPped()	{ return FALSE; }

	xor	eax, eax
	ret	0
?canBeLMAPped@CBlender_Blur@@UAEHXZ ENDP		; CBlender_Blur::canBeLMAPped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
_TEXT	SEGMENT
??0CBlender_Blur@@QAE@XZ PROC				; CBlender_Blur::CBlender_Blur
; _this$ = ecx

; 11   : {

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Blur@@6B@

; 12   : 	description.CLS		= B_BLUR;
; 13   : }

	mov	eax, esi
	mov	DWORD PTR [esi+4], 538976288		; 20202020H
	mov	DWORD PTR [esi+8], 1112298834		; 424c5552H
	pop	esi
	ret	0
??0CBlender_Blur@@QAE@XZ ENDP				; CBlender_Blur::CBlender_Blur
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
;	COMDAT ??_GCBlender_Blur@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBlender_Blur@@UAEPAXI@Z PROC			; CBlender_Blur::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 16   : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_Blur@@6B@

; 17   : 
; 18   : }

	call	DWORD PTR __imp_??1IBlender@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	324					; 00000144H
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCBlender_Blur@@UAEPAXI@Z ENDP			; CBlender_Blur::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
_TEXT	SEGMENT
??1CBlender_Blur@@UAE@XZ PROC				; CBlender_Blur::~CBlender_Blur
; _this$ = ecx

; 16   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CBlender_Blur@@6B@

; 17   : 
; 18   : }

	jmp	DWORD PTR __imp_??1IBlender@@UAE@XZ
??1CBlender_Blur@@UAE@XZ ENDP				; CBlender_Blur::~CBlender_Blur
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
?Save@CBlender_Blur@@UAEXAAVIWriter@@@Z PROC		; CBlender_Blur::Save
; _this$ = ecx

; 22   : 	IBlender::Save	(fs);

	jmp	DWORD PTR __imp_?Save@IBlender@@UAEXAAVIWriter@@@Z
?Save@CBlender_Blur@@UAEXAAVIWriter@@@Z ENDP		; CBlender_Blur::Save
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
_TEXT	SEGMENT
_fs$ = 8						; size = 4
_version$ = 12						; size = 2
?Load@CBlender_Blur@@UAEXAAVIReader@@G@Z PROC		; CBlender_Blur::Load
; _this$ = ecx

; 27   : 	IBlender::Load	(fs,version);

	jmp	DWORD PTR __imp_?Load@IBlender@@UAEXAAVIReader@@G@Z
?Load@CBlender_Blur@@UAEXAAVIReader@@G@Z ENDP		; CBlender_Blur::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\blenders\Blender_Recorder.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp
_TEXT	SEGMENT
_C$ = 8							; size = 4
?Compile@CBlender_Blur@@UAEXAAVCBlender_Compile@@@Z PROC ; CBlender_Blur::Compile
; _this$ = ecx

; 31   : {

	push	ebp
	push	esi

; 32   : 	IBlender::Compile		(C);

	mov	esi, DWORD PTR _C$[esp+4]
	push	esi
	call	DWORD PTR __imp_?Compile@IBlender@@UAEXAAVCBlender_Compile@@@Z

; 33   : 	C.PassBegin		();

	mov	ecx, esi
	call	DWORD PTR __imp_?PassBegin@CBlender_Compile@@QAEXXZ

; 34   : 	{
; 35   : 		C.PassSET_ZB		(FALSE, FALSE);

	push	0
	push	0
	push	0
	mov	ecx, esi
	call	DWORD PTR __imp_?PassSET_ZB@CBlender_Compile@@QAEXHHH@Z

; 36   : 		C.PassSET_Blend_SET	();

	push	0
	push	0
	mov	ecx, esi
	call	DWORD PTR __imp_?PassSET_Blend_SET@CBlender_Compile@@QAEXHI@Z

; 37   : 		C.PassSET_LightFog	(FALSE, FALSE);

	push	0
	push	0
	mov	ecx, esi
	call	DWORD PTR __imp_?PassSET_LightFog@CBlender_Compile@@QAEXHH@Z

; 38   : 
; 39   : 		// Stage0 - B0*F
; 40   : 		C.StageBegin		();

	mov	ecx, esi
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 41   : 		C.StageSET_Color	(D3DTA_TEXTURE,	  D3DTOP_MODULATE,		D3DTA_TFACTOR);

	push	3
	push	4
	push	2
	mov	ecx, esi
	call	DWORD PTR __imp_?StageSET_Color@CBlender_Compile@@QAEXIII@Z

; 42   : 		C.StageSET_Alpha	(D3DTA_TEXTURE,	  D3DTOP_SELECTARG1,	D3DTA_TFACTOR);

	push	3
	push	2
	push	2
	mov	ecx, esi
	call	DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z

; 43   : 		C.Stage_Texture		("$base0");

	mov	ebp, DWORD PTR __imp_?Stage_Texture@CBlender_Compile@@QAEXPBDIIII@Z
	mov	ecx, esi
	push	2
	push	2
	push	2
	push	1
	push	OFFSET ??_C@_06FANPPNOI@$base0@
	call	ebp

; 44   : 		C.Stage_Matrix		("$null",0);

	push	0
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, esi
	call	DWORD PTR __imp_?Stage_Matrix@CBlender_Compile@@QAEXPBDH@Z

; 45   : 		C.Stage_Constant	("$null");

	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, esi
	call	DWORD PTR __imp_?Stage_Constant@CBlender_Compile@@QAEXPBD@Z

; 46   : 		C.StageEnd			();

	mov	ecx, esi
	mov	esi, DWORD PTR __imp_?StageEnd@CBlender_Compile@@QAEXXZ
	call	esi

; 47   : 
; 48   : 		// Stage1 - B1*F + current
; 49   : 		C.StageBegin		();

	mov	ecx, DWORD PTR _C$[esp+4]
	call	DWORD PTR __imp_?StageBegin@CBlender_Compile@@QAEXXZ

; 50   : 		C.StageSET_Color3	(D3DTA_TEXTURE,	  D3DTOP_MULTIPLYADD,	D3DTA_TFACTOR, D3DTA_CURRENT);

	mov	ecx, DWORD PTR _C$[esp+4]
	push	1
	push	3
	push	25					; 00000019H
	push	2
	call	DWORD PTR __imp_?StageSET_Color3@CBlender_Compile@@QAEXIIII@Z

; 51   : 		C.StageSET_Alpha	(D3DTA_CURRENT,	  D3DTOP_SELECTARG1,	D3DTA_TFACTOR);

	mov	ecx, DWORD PTR _C$[esp+4]
	push	3
	push	2
	push	1
	call	DWORD PTR __imp_?StageSET_Alpha@CBlender_Compile@@QAEXIII@Z

; 52   : 		C.Stage_Texture		("$base1");

	mov	ecx, DWORD PTR _C$[esp+4]
	push	2
	push	2
	push	2
	push	1
	push	OFFSET ??_C@_06EJMEMMKJ@$base1@
	call	ebp

; 53   : 		C.Stage_Matrix		("$null",1);

	mov	ebp, DWORD PTR _C$[esp+4]
	mov	ecx, ebp
	push	1
	push	OFFSET ??_C@_05CAGGJGBB@$null@
	call	DWORD PTR __imp_?Stage_Matrix@CBlender_Compile@@QAEXPBDH@Z

; 54   : 		C.Stage_Constant	("$null");

	push	OFFSET ??_C@_05CAGGJGBB@$null@
	mov	ecx, ebp
	call	DWORD PTR __imp_?Stage_Constant@CBlender_Compile@@QAEXPBD@Z

; 55   : 		C.StageEnd			();

	mov	ecx, ebp
	call	esi

; 58   : 		C.R().SetRS			(D3DRS_TEXTUREFACTOR,color_rgba(127,127,127,127));

	push	2139062143				; 7f7f7f7fH
	push	60					; 0000003cH
; File I:\Vitalya\mine\NSProjectX\xrEngine\blenders\Blender_Recorder.h

; 48   : 	CSimulator& R() { return RS; }

	lea	ecx, DWORD PTR [ebp+64]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R1\Blender_Blur.cpp

; 58   : 		C.R().SetRS			(D3DRS_TEXTUREFACTOR,color_rgba(127,127,127,127));

	call	DWORD PTR __imp_?SetRS@CSimulator@@QAEXII@Z

; 59   : 	}
; 60   : 	C.PassEnd			();

	mov	ecx, ebp
	call	DWORD PTR __imp_?PassEnd@CBlender_Compile@@QAEXXZ
	pop	esi
	pop	ebp

; 61   : }

	ret	4
?Compile@CBlender_Blur@@UAEXAAVCBlender_Compile@@@Z ENDP ; CBlender_Blur::Compile
_TEXT	ENDS
END
