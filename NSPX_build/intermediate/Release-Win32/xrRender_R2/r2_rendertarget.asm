; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30146.0 

	TITLE	i:\vitalya\mine\nsprojectx\nspx_build\intermediate\release-win32\xrrender_r2\r2_rendertarget.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_07HOFMEPDD@r2?2occq@			; `string'
PUBLIC	??_C@_0O@HEPKLKNP@r2?2accum_mask@		; `string'
PUBLIC	??_C@_0BA@IIKCKHAO@r2?2accum_direct@		; `string'
PUBLIC	??_C@_0BI@BLGAMEEA@r2?2accum_direct_cascade@	; `string'
PUBLIC	??_C@_0BF@MDDNKBKL@accum_volumetric_sun@	; `string'
PUBLIC	??_C@_0BN@FJAONFFM@accum_volumetric_sun_cascade@ ; `string'
PUBLIC	??_C@_0BN@OGOPBPDE@CRenderTarget?3?3CRenderTarget@ ; `string'
PUBLIC	??_C@_0EE@NHEHFFIH@I?3?2Vitalya?2mine?2NSProjectX?2laye@ ; `string'
PUBLIC	??_C@_0GL@HJPPOCPB@HW?4pDevice?9?$DOCreateDepthStencilS@ ; `string'
PUBLIC	??_C@_0BB@JPBEKKBA@r2?2accum_point_s@		; `string'
PUBLIC	??_C@_0BF@COIFGDAB@lights?2lights_spot01@	; `string'
PUBLIC	??_C@_0BA@BMOHLPOH@r2?2accum_spot_s@		; `string'
PUBLIC	??_C@_0O@EMIENKIH@r2?2accum_refl@		; `string'
PUBLIC	??_C@_0BD@KGPINAGD@effects?2screen_set@		; `string'
PUBLIC	??_C@_08NFNJNHO@r2?2bloom@			; `string'
PUBLIC	??_C@_05PJJNHPBF@r2?2ao@			; `string'
PUBLIC	??_C@_0N@JLPEBDIO@r2?2luminance@		; `string'
PUBLIC	??_C@_0BA@KFBGHPNO@$user$luminance@		; `string'
PUBLIC	??_C@_05LFHGFJK@?$CFs_?$CFd@			; `string'
PUBLIC	??_C@_0L@KCLJCHPK@r2?2combine@			; `string'
PUBLIC	??_C@_0BD@BDGMEBMG@combine_volumetric@		; `string'
PUBLIC	??_C@_0HN@BBBLIEJF@D3DXCreateVolumeTexture?$CIHW?4pDev@ ; `string'
PUBLIC	??_C@_0CE@OIDICFOJ@t_material_surf?9?$DOLockBox?5?$CI0?0?$CGR?0@ ; `string'
PUBLIC	??_C@_0BP@IACMIIEN@t_material_surf?9?$DOUnlockBox?5?$CI0?$CJ@ ; `string'
PUBLIC	??_C@_0O@KHOLBHBB@$user$jitter_@		; `string'
PUBLIC	??_C@_04HGGBINEM@?$CFs?$CFd@			; `string'
PUBLIC	??_C@_0GL@EBAMPPPG@D3DXCreateTexture?5?$CIHW?4pDevice?0T@ ; `string'
PUBLIC	??_C@_0CK@KNPHOOHO@t_noise_surf?$FLit?$FN?9?$DOLockRect?5?$CI0?0?$CG@ ; `string'
PUBLIC	??_C@_0CA@DNFBMEHN@t_noise_surf?$FLit?$FN?9?$DOUnlockRect?$CI0?$CJ@ ; `string'
PUBLIC	??_C@_0M@HNLHGNFF@postprocess@			; `string'
PUBLIC	??_C@_07CONFFJBI@distort@			; `string'
PUBLIC	??_R2CRenderTarget@@8				; CRenderTarget::`RTTI Base Class Array'
PUBLIC	??_R2IRender_Target@@8				; IRender_Target::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRenderTarget@@8			; CRenderTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IRender_Target@@8			; IRender_Target::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3IRender_Target@@8				; IRender_Target::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVIRender_Target@@@8			; IRender_Target `RTTI Type Descriptor'
PUBLIC	??_R3CRenderTarget@@8				; CRenderTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVCRenderTarget@@@8			; CRenderTarget `RTTI Type Descriptor'
PUBLIC	??_R4CRenderTarget@@6B@				; CRenderTarget::`RTTI Complete Object Locator'
PUBLIC	??_7CRenderTarget@@6B@				; CRenderTarget::`vftable'
EXTRN	__imp_??0IRender_Target@@QAE@XZ:PROC
EXTRN	__imp_?destroy@resptrcode_texture@@QAEXXZ:PROC
EXTRN	__imp_?_set@?$resptr_base@VCTexture@@@@QAEXPAVCTexture@@@Z:PROC
EXTRN	__imp_?_set@?$resptr_base@VCTexture@@@@QAEXABV1@@Z:PROC
EXTRN	__imp__D3DXCreateVolumeTexture@36:PROC
EXTRN	__imp_??_7IRender_Target@@6B@:BYTE
EXTRN	__imp_??1IRender_Target@@UAE@XZ:PROC
EXTRN	__imp_?set_Stencil@CBackend@@QAEXIIIIIIII@Z:PROC
EXTRN	__imp_?set_ColorWriteEnable@CBackend@@QAEXI@Z:PROC
;	COMDAT ?ignore_always@?FP@???0CRenderTarget@@QAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?FP@???0CRenderTarget@@QAE@XZ@4_NA DB 01H DUP (?) ; `CRenderTarget::CRenderTarget'::`95'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?FD@???0CRenderTarget@@QAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?FD@???0CRenderTarget@@QAE@XZ@4_NA DB 01H DUP (?) ; `CRenderTarget::CRenderTarget'::`83'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?EP@???0CRenderTarget@@QAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?EP@???0CRenderTarget@@QAE@XZ@4_NA DB 01H DUP (?) ; `CRenderTarget::CRenderTarget'::`79'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?EG@???0CRenderTarget@@QAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?EG@???0CRenderTarget@@QAE@XZ@4_NA DB 01H DUP (?) ; `CRenderTarget::CRenderTarget'::`70'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?DD@???0CRenderTarget@@QAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?DD@???0CRenderTarget@@QAE@XZ@4_NA DB 01H DUP (?) ; `CRenderTarget::CRenderTarget'::`51'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CP@???0CRenderTarget@@QAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?CP@???0CRenderTarget@@QAE@XZ@4_NA DB 01H DUP (?) ; `CRenderTarget::CRenderTarget'::`47'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BL@???0CRenderTarget@@QAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?BL@???0CRenderTarget@@QAE@XZ@4_NA DB 01H DUP (?) ; `CRenderTarget::CRenderTarget'::`27'::ignore_always
_BSS	ENDS
;	COMDAT ??_7CRenderTarget@@6B@
CONST	SEGMENT
??_7CRenderTarget@@6B@ DD FLAT:??_R4CRenderTarget@@6B@	; CRenderTarget::`vftable'
	DD	FLAT:?set_blur@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_gray@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_duality_h@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_duality_v@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_noise@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_noise_scale@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_noise_fps@CRenderTarget@@UAEXM@Z
	DD	FLAT:?set_color_base@CRenderTarget@@UAEXI@Z
	DD	FLAT:?set_color_gray@CRenderTarget@@UAEXI@Z
	DD	FLAT:?set_color_add@CRenderTarget@@UAEXI@Z
	DD	FLAT:?get_width@CRenderTarget@@UAEIXZ
	DD	FLAT:?get_height@CRenderTarget@@UAEIXZ
	DD	FLAT:??_ECRenderTarget@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?dwDecl@?CL@???0CRenderTarget@@QAE@XZ@4PAU_D3DVERTEXELEMENT9@@A
_DATA	SEGMENT
?dwDecl@?CL@???0CRenderTarget@@QAE@XZ@4PAU_D3DVERTEXELEMENT9@@A DW 00H ; `CRenderTarget::CRenderTarget'::`43'::dwDecl
	DW	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DW	0ffH
	DW	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
;	COMDAT ??_R4CRenderTarget@@6B@
rdata$r	SEGMENT
??_R4CRenderTarget@@6B@ DD 00H				; CRenderTarget::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRenderTarget@@@8
	DD	FLAT:??_R3CRenderTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRenderTarget@@@8
data$rs	SEGMENT
??_R0?AVCRenderTarget@@@8 DD FLAT:??_7type_info@@6B@	; CRenderTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRenderTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R3CRenderTarget@@8
rdata$r	SEGMENT
??_R3CRenderTarget@@8 DD 00H				; CRenderTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CRenderTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRender_Target@@@8
data$rs	SEGMENT
??_R0?AVIRender_Target@@@8 DD FLAT:??_7type_info@@6B@	; IRender_Target `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRender_Target@@', 00H
data$rs	ENDS
;	COMDAT ??_R3IRender_Target@@8
rdata$r	SEGMENT
??_R3IRender_Target@@8 DD 00H				; IRender_Target::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IRender_Target@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRender_Target@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRender_Target@@8 DD FLAT:??_R0?AVIRender_Target@@@8 ; IRender_Target::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRender_Target@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRenderTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRenderTarget@@8 DD FLAT:??_R0?AVCRenderTarget@@@8 ; CRenderTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRenderTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2IRender_Target@@8
rdata$r	SEGMENT
??_R2IRender_Target@@8 DD FLAT:??_R1A@?0A@EA@IRender_Target@@8 ; IRender_Target::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R2CRenderTarget@@8
rdata$r	SEGMENT
??_R2CRenderTarget@@8 DD FLAT:??_R1A@?0A@EA@CRenderTarget@@8 ; CRenderTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IRender_Target@@8
rdata$r	ENDS
;	COMDAT ??_C@_07CONFFJBI@distort@
CONST	SEGMENT
??_C@_07CONFFJBI@distort@ DB 'distort', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HNLHGNFF@postprocess@
CONST	SEGMENT
??_C@_0M@HNLHGNFF@postprocess@ DB 'postprocess', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DNFBMEHN@t_noise_surf?$FLit?$FN?9?$DOUnlockRect?$CI0?$CJ@
CONST	SEGMENT
??_C@_0CA@DNFBMEHN@t_noise_surf?$FLit?$FN?9?$DOUnlockRect?$CI0?$CJ@ DB 't'
	DB	'_noise_surf[it]->UnlockRect(0)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@KNPHOOHO@t_noise_surf?$FLit?$FN?9?$DOLockRect?5?$CI0?0?$CG@
CONST	SEGMENT
??_C@_0CK@KNPHOOHO@t_noise_surf?$FLit?$FN?9?$DOLockRect?5?$CI0?0?$CG@ DB 't'
	DB	'_noise_surf[it]->LockRect (0,&R[it],0,0)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GL@EBAMPPPG@D3DXCreateTexture?5?$CIHW?4pDevice?0T@
CONST	SEGMENT
??_C@_0GL@EBAMPPPG@D3DXCreateTexture?5?$CIHW?4pDevice?0T@ DB 'D3DXCreateT'
	DB	'exture (HW.pDevice,TEX_jitter,TEX_jitter,1,0,D3DFMT_Q8W8V8U8,'
	DB	'D3DPOOL_MANAGED,&t_noise_surf[it])', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HGGBINEM@?$CFs?$CFd@
CONST	SEGMENT
??_C@_04HGGBINEM@?$CFs?$CFd@ DB '%s%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KHOLBHBB@$user$jitter_@
CONST	SEGMENT
??_C@_0O@KHOLBHBB@$user$jitter_@ DB '$user$jitter_', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IACMIIEN@t_material_surf?9?$DOUnlockBox?5?$CI0?$CJ@
CONST	SEGMENT
??_C@_0BP@IACMIIEN@t_material_surf?9?$DOUnlockBox?5?$CI0?$CJ@ DB 't_mater'
	DB	'ial_surf->UnlockBox (0)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OIDICFOJ@t_material_surf?9?$DOLockBox?5?$CI0?0?$CGR?0@
CONST	SEGMENT
??_C@_0CE@OIDICFOJ@t_material_surf?9?$DOLockBox?5?$CI0?0?$CGR?0@ DB 't_ma'
	DB	'terial_surf->LockBox (0,&R,0,0)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0HN@BBBLIEJF@D3DXCreateVolumeTexture?$CIHW?4pDev@
CONST	SEGMENT
??_C@_0HN@BBBLIEJF@D3DXCreateVolumeTexture?$CIHW?4pDev@ DB 'D3DXCreateVol'
	DB	'umeTexture(HW.pDevice,TEX_material_LdotN,TEX_material_LdotH,4'
	DB	',1,0,D3DFMT_A8L8,D3DPOOL_MANAGED,&t_material_surf)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BDGMEBMG@combine_volumetric@
CONST	SEGMENT
??_C@_0BD@BDGMEBMG@combine_volumetric@ DB 'combine_volumetric', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KCLJCHPK@r2?2combine@
CONST	SEGMENT
??_C@_0L@KCLJCHPK@r2?2combine@ DB 'r2\combine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LFHGFJK@?$CFs_?$CFd@
CONST	SEGMENT
??_C@_05LFHGFJK@?$CFs_?$CFd@ DB '%s_%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KFBGHPNO@$user$luminance@
CONST	SEGMENT
??_C@_0BA@KFBGHPNO@$user$luminance@ DB '$user$luminance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JLPEBDIO@r2?2luminance@
CONST	SEGMENT
??_C@_0N@JLPEBDIO@r2?2luminance@ DB 'r2\luminance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05PJJNHPBF@r2?2ao@
CONST	SEGMENT
??_C@_05PJJNHPBF@r2?2ao@ DB 'r2\ao', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NFNJNHO@r2?2bloom@
CONST	SEGMENT
??_C@_08NFNJNHO@r2?2bloom@ DB 'r2\bloom', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KGPINAGD@effects?2screen_set@
CONST	SEGMENT
??_C@_0BD@KGPINAGD@effects?2screen_set@ DB 'effects\screen_set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EMIENKIH@r2?2accum_refl@
CONST	SEGMENT
??_C@_0O@EMIENKIH@r2?2accum_refl@ DB 'r2\accum_refl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BMOHLPOH@r2?2accum_spot_s@
CONST	SEGMENT
??_C@_0BA@BMOHLPOH@r2?2accum_spot_s@ DB 'r2\accum_spot_s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@COIFGDAB@lights?2lights_spot01@
CONST	SEGMENT
??_C@_0BF@COIFGDAB@lights?2lights_spot01@ DB 'lights\lights_spot01', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JPBEKKBA@r2?2accum_point_s@
CONST	SEGMENT
??_C@_0BB@JPBEKKBA@r2?2accum_point_s@ DB 'r2\accum_point_s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GL@HJPPOCPB@HW?4pDevice?9?$DOCreateDepthStencilS@
CONST	SEGMENT
??_C@_0GL@HJPPOCPB@HW?4pDevice?9?$DOCreateDepthStencilS@ DB 'HW.pDevice->'
	DB	'CreateDepthStencilSurface (size,size,D3DFMT_D24X8,D3DMULTISAM'
	DB	'PLE_NONE,0,TRUE,&rt_smap_ZB,NULL)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@NHEHFFIH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
CONST	SEGMENT
??_C@_0EE@NHEHFFIH@I?3?2Vitalya?2mine?2NSProjectX?2laye@ DB 'I:\Vitalya\m'
	DB	'ine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OGOPBPDE@CRenderTarget?3?3CRenderTarget@
CONST	SEGMENT
??_C@_0BN@OGOPBPDE@CRenderTarget?3?3CRenderTarget@ DB 'CRenderTarget::CRe'
	DB	'nderTarget', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FJAONFFM@accum_volumetric_sun_cascade@
CONST	SEGMENT
??_C@_0BN@FJAONFFM@accum_volumetric_sun_cascade@ DB 'accum_volumetric_sun'
	DB	'_cascade', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MDDNKBKL@accum_volumetric_sun@
CONST	SEGMENT
??_C@_0BF@MDDNKBKL@accum_volumetric_sun@ DB 'accum_volumetric_sun', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BLGAMEEA@r2?2accum_direct_cascade@
CONST	SEGMENT
??_C@_0BI@BLGAMEEA@r2?2accum_direct_cascade@ DB 'r2\accum_direct_cascade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IIKCKHAO@r2?2accum_direct@
CONST	SEGMENT
??_C@_0BA@IIKCKHAO@r2?2accum_direct@ DB 'r2\accum_direct', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HEPKLKNP@r2?2accum_mask@
CONST	SEGMENT
??_C@_0O@HEPKLKNP@r2?2accum_mask@ DB 'r2\accum_mask', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HOFMEPDD@r2?2occq@
CONST	SEGMENT
??_C@_07HOFMEPDD@r2?2occq@ DB 'r2\occq', 00H		; `string'
CONST	ENDS
PUBLIC	?set@TL@FVF@@QAEXMMMMIMM@Z			; FVF::TL::set
PUBLIC	?set@?$_vector2@H@@QAEAAU1@HH@Z			; _vector2<int>::set
PUBLIC	??4?$resptr_core@VCTexture@@Uresptrcode_texture@@@@QAEAAV0@ABV0@@Z ; resptr_core<CTexture,resptrcode_texture>::operator=
PUBLIC	?set_blur@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_blur
PUBLIC	?set_gray@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_gray
PUBLIC	?set_duality_h@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_duality_h
PUBLIC	?set_duality_v@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_duality_v
PUBLIC	?set_noise@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_noise
PUBLIC	?set_noise_scale@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_noise_scale
PUBLIC	?set_noise_fps@CRenderTarget@@UAEXM@Z		; CRenderTarget::set_noise_fps
PUBLIC	?set_color_base@CRenderTarget@@UAEXI@Z		; CRenderTarget::set_color_base
PUBLIC	?set_color_gray@CRenderTarget@@UAEXI@Z		; CRenderTarget::set_color_gray
PUBLIC	?set_color_add@CRenderTarget@@UAEXI@Z		; CRenderTarget::set_color_add
PUBLIC	?get_width@CRenderTarget@@UAEIXZ		; CRenderTarget::get_width
PUBLIC	?get_height@CRenderTarget@@UAEIXZ		; CRenderTarget::get_height
PUBLIC	??$xr_new@VCBlender_combine@@@@YAPAVCBlender_combine@@XZ ; xr_new<CBlender_combine>
PUBLIC	??$xr_new@VCBlender_luminance@@@@YAPAVCBlender_luminance@@XZ ; xr_new<CBlender_luminance>
PUBLIC	??$xr_new@VCBlender_ao_build@@@@YAPAVCBlender_ao_build@@XZ ; xr_new<CBlender_ao_build>
PUBLIC	??$xr_new@VCBlender_bloom_build@@@@YAPAVCBlender_bloom_build@@XZ ; xr_new<CBlender_bloom_build>
PUBLIC	??$xr_new@VCBlender_accum_reflected@@@@YAPAVCBlender_accum_reflected@@XZ ; xr_new<CBlender_accum_reflected>
PUBLIC	??$xr_new@VCBlender_accum_spot@@@@YAPAVCBlender_accum_spot@@XZ ; xr_new<CBlender_accum_spot>
PUBLIC	??$xr_new@VCBlender_accum_point@@@@YAPAVCBlender_accum_point@@XZ ; xr_new<CBlender_accum_point>
PUBLIC	??$xr_new@VCBlender_accum_direct_cascade@@@@YAPAVCBlender_accum_direct_cascade@@XZ ; xr_new<CBlender_accum_direct_cascade>
PUBLIC	??$xr_new@VCBlender_accum_direct@@@@YAPAVCBlender_accum_direct@@XZ ; xr_new<CBlender_accum_direct>
PUBLIC	??$xr_new@VCBlender_accum_direct_mask@@@@YAPAVCBlender_accum_direct_mask@@XZ ; xr_new<CBlender_accum_direct_mask>
PUBLIC	??$xr_new@VCBlender_light_occq@@@@YAPAVCBlender_light_occq@@XZ ; xr_new<CBlender_light_occq>
PUBLIC	?mulA_44@?$_matrix@M@@QAEAAU1@ABU1@@Z		; _matrix<float>::mulA_44
PUBLIC	?translate_over@?$_matrix@M@@QAEAAU1@MMM@Z	; _matrix<float>::translate_over
PUBLIC	??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ ; resptr_core<CRT,resptrcode_crt>::resptr_core<CRT,resptrcode_crt>
PUBLIC	??B?$resptr_core@VCRT@@Uresptrcode_crt@@@@QBEP80@BEPAVCRT@@XZXZ ; resptr_core<CRT,resptrcode_crt>::operator CRT * (__thiscall resptr_core<CRT,resptrcode_crt>::*)(void)const 
PUBLIC	??0?$svector@U?$_vector2@H@@$07@@QAE@XZ		; svector<_vector2<int>,8>::svector<_vector2<int>,8>
PUBLIC	?size@?$svector@U?$_vector2@H@@$07@@QBEIXZ	; svector<_vector2<int>,8>::size
PUBLIC	?push_back@?$svector@U?$_vector2@H@@$07@@QAEXU?$_vector2@H@@@Z ; svector<_vector2<int>,8>::push_back
PUBLIC	??A?$svector@U?$_vector2@H@@$07@@QAEAAU?$_vector2@H@@I@Z ; svector<_vector2<int>,8>::operator[]
PUBLIC	?need_to_render_sunshafts@CRenderTarget@@QAE_NXZ ; CRenderTarget::need_to_render_sunshafts
PUBLIC	??1CRenderTarget@@UAE@XZ			; CRenderTarget::~CRenderTarget
PUBLIC	??_GCRenderTarget@@UAEPAXI@Z			; CRenderTarget::`scalar deleting destructor'
PUBLIC	?generate_jitter@@YAXPAKI@Z			; generate_jitter
PUBLIC	?u_compute_texgen_jitter@CRenderTarget@@QAEXAAU?$_matrix@M@@@Z ; CRenderTarget::u_compute_texgen_jitter
PUBLIC	?u_compute_texgen_screen@CRenderTarget@@QAEXAAU?$_matrix@M@@@Z ; CRenderTarget::u_compute_texgen_screen
PUBLIC	?u_stencil_optimize@CRenderTarget@@QAEXH@Z	; CRenderTarget::u_stencil_optimize
PUBLIC	?u_setrt@CRenderTarget@@QAEXIIPAUIDirect3DSurface9@@000@Z ; CRenderTarget::u_setrt
PUBLIC	?u_setrt@CRenderTarget@@QAEXABV?$resptr_core@VCRT@@Uresptrcode_crt@@@@00PAUIDirect3DSurface9@@@Z ; CRenderTarget::u_setrt
PUBLIC	??0CRenderTarget@@QAE@XZ			; CRenderTarget::CRenderTarget
EXTRN	??_ECRenderTarget@@UAEPAXI@Z:PROC		; CRenderTarget::`vector deleting destructor'
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_occq.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_occq.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_occq.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_mask.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_mask.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct_cascade.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct_cascade.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_point.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_point.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_spot.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_spot.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_reflected.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_reflected.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_bloom_build.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_bloom_build.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\Blender_ao_build.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\Blender_ao_build.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_luminance.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_luminance.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_combine.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_combine.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
_TEXT	SEGMENT
_this$1$ = -684						; size = 4
_test$2$ = -680						; size = 4
tv5248 = -680						; size = 4
tv5242 = -680						; size = 4
tv4902 = -680						; size = 4
_a$2 = -680						; size = 4
_a$3 = -680						; size = 4
_s0$4 = -680						; size = 4
_fs$5 = -680						; size = 4
_ls$6 = -680						; size = 4
_y$1$ = -676						; size = 4
_x$1$ = -676						; size = 4
$T7 = -676						; size = 4
$T8 = -676						; size = 4
_fd$1$ = -672						; size = 4
___t$1$ = -672						; size = 4
__d$1$ = -672						; size = 4
tv4915 = -672						; size = 4
_ld$9 = -672						; size = 4
_ld$1$ = -668						; size = 4
_fd$10 = -668						; size = 4
$T11 = -668						; size = 4
_y$1$ = -664						; size = 4
tv4892 = -664						; size = 4
$T12 = -664						; size = 4
$T13 = -664						; size = 4
___t$1$ = -660						; size = 4
_slice$1$ = -656					; size = 4
_fs$1$ = -652						; size = 4
tv3811 = -652						; size = 4
tv4767 = -648						; size = 4
_s1$14 = -648						; size = 4
tv4929 = -644						; size = 4
_samples$15 = -640					; size = 68
_R$16 = -564						; size = 12
_R$17 = -552						; size = 32
_name$18 = -520						; size = 520
_name$19 = -520						; size = 256
??0CRenderTarget@@QAE@XZ PROC				; CRenderTarget::CRenderTarget
; _this$ = ecx

; 180  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 684				; 000002acH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$1$[esp+696], ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [ecx+64], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 180  : {

	lea	eax, DWORD PTR [ecx+116]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [ecx+68], 0
	mov	DWORD PTR [ecx+72], 0
	mov	DWORD PTR [ecx+76], 0
	mov	DWORD PTR [ecx+80], 0
	mov	DWORD PTR [ecx+84], 0
	mov	DWORD PTR [ecx+88], 0
	mov	DWORD PTR [ecx+92], 0
	mov	DWORD PTR [ecx+96], 0
	mov	DWORD PTR [ecx+100], 0
	mov	DWORD PTR [ecx+104], 0
	mov	DWORD PTR [ecx+108], 0
	mov	DWORD PTR [ecx+112], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 180  : {

	mov	DWORD PTR [ecx], OFFSET ??_7CRenderTarget@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
	mov	DWORD PTR [ecx+132], 0
	mov	DWORD PTR [ecx+136], 0
	mov	DWORD PTR [ecx+140], 0
	mov	DWORD PTR [ecx+144], 0
	mov	DWORD PTR [ecx+148], 0
	mov	DWORD PTR [ecx+152], 0
	mov	DWORD PTR [ecx+156], 0
	mov	DWORD PTR [ecx+160], 0
	mov	DWORD PTR [ecx+164], 0
	mov	DWORD PTR [ecx+168], 0
	mov	DWORD PTR [ecx+172], 0
	mov	DWORD PTR [ecx+184], 0
	mov	DWORD PTR [ecx+204], 0
	mov	DWORD PTR [ecx+208], 0
	mov	DWORD PTR [ecx+212], 0
	mov	DWORD PTR [ecx+216], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 180  : {

	mov	DWORD PTR ___t$1$[esp+696], eax
	lea	eax, DWORD PTR [ecx+204]
	mov	DWORD PTR ___t$1$[esp+696], eax
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [ecx+220], 0
	mov	DWORD PTR [ecx+224], 0
	mov	DWORD PTR [ecx+228], 0
	mov	DWORD PTR [ecx+232], 0
	mov	DWORD PTR [ecx+236], 0
	mov	DWORD PTR [ecx+240], 0
	mov	DWORD PTR [ecx+244], 0
	mov	DWORD PTR [ecx+248], 0
	mov	DWORD PTR [ecx+252], 0
	mov	DWORD PTR [ecx+256], 0
	mov	DWORD PTR [ecx+260], 0
	mov	DWORD PTR [ecx+264], 0
	mov	DWORD PTR [ecx+292], 0
	mov	DWORD PTR [ecx+296], 0
	mov	DWORD PTR [ecx+300], 0
	mov	DWORD PTR [ecx+304], 0
	mov	DWORD PTR [ecx+308], 0
	mov	DWORD PTR [ecx+316], 0
	mov	DWORD PTR [ecx+320], 0
	mov	DWORD PTR [ecx+328], 0
	mov	DWORD PTR [ecx+332], 0
	mov	DWORD PTR [ecx+336], 0
	mov	DWORD PTR [ecx+340], 0
	mov	DWORD PTR [ecx+344], 0
	mov	DWORD PTR [ecx+348], 0
	mov	DWORD PTR [ecx+352], 0
	mov	DWORD PTR [ecx+356], 0
	mov	DWORD PTR [ecx+360], 0
	mov	DWORD PTR [ecx+364], 0
	mov	DWORD PTR [ecx+368], 0
	mov	DWORD PTR [ecx+372], 0
	mov	DWORD PTR [ecx+376], 0
	mov	DWORD PTR [ecx+380], 0
	mov	DWORD PTR [ecx+384], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 181  : 	param_blur			= 0.f;

	mov	DWORD PTR [ecx+400], 0

; 182  : 	param_gray			= 0.f;

	mov	DWORD PTR [ecx+404], 0

; 183  : 	param_noise			= 0.f;

	mov	DWORD PTR [ecx+416], 0

; 184  : 	param_duality_h		= 0.f;

	mov	DWORD PTR [ecx+408], 0

; 185  : 	param_duality_v		= 0.f;

	mov	DWORD PTR [ecx+412], 0

; 186  : 	param_noise_fps		= 25.f;

	mov	DWORD PTR [ecx+424], 1103626240		; 41c80000H

; 187  : 	param_noise_scale	= 1.f;

	mov	DWORD PTR [ecx+420], 1065353216		; 3f800000H

; 188  : 
; 189  : 	im_noise_time		= 1/100;

	mov	DWORD PTR [ecx+388], 0

; 190  : 	im_noise_shift_w	= 0;

	mov	DWORD PTR [ecx+392], 0

; 191  : 	im_noise_shift_h	= 0;

	mov	DWORD PTR [ecx+396], 0

; 192  : 
; 193  : 	param_color_base	= color_rgba(127,127,127,	0);

	mov	DWORD PTR [ecx+428], 8355711		; 007f7f7fH

; 194  : 	param_color_gray	= color_rgba(85,85,85,		0);

	mov	DWORD PTR [ecx+432], 5592405		; 00555555H

; 195  : 	param_color_add		= color_rgba(0,0,0,			0);

	mov	DWORD PTR [ecx+436], 0

; 196  : 
; 197  : 	dwAccumulatorClearMark			= 0;

	mov	DWORD PTR [ecx+12], 0

; 198  : 	Device.Resources->Evict			();

	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	ecx, DWORD PTR [ecx+432]
	call	DWORD PTR __imp_?Evict@CResourceManager@@QAEXXZ
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	ebx, DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	push	324					; 00000144H
	call	ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_occq.cpp

; 6    : CBlender_light_occq::CBlender_light_occq	()	{	description.CLS		= 0;	}

	mov	edi, DWORD PTR __imp_??0IBlender@@QAE@XZ
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_occq.cpp

; 6    : CBlender_light_occq::CBlender_light_occq	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 201  : 	b_occq							= xr_new<CBlender_light_occq>			();

	mov	ecx, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_occq.cpp

; 6    : CBlender_light_occq::CBlender_light_occq	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_light_occq@@6B@
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 201  : 	b_occq							= xr_new<CBlender_light_occq>			();

	mov	DWORD PTR [ecx+20], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	ebx

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_mask.cpp

; 6    : CBlender_accum_direct_mask::CBlender_accum_direct_mask	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 202  : 	b_accum_mask					= xr_new<CBlender_accum_direct_mask>	();

	mov	eax, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_mask.cpp

; 6    : CBlender_accum_direct_mask::CBlender_accum_direct_mask	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_direct_mask@@6B@
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 202  : 	b_accum_mask					= xr_new<CBlender_accum_direct_mask>	();

	mov	DWORD PTR [eax+24], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	ebx

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct.cpp

; 6    : CBlender_accum_direct::CBlender_accum_direct	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 203  : 	b_accum_direct					= xr_new<CBlender_accum_direct>			();

	mov	eax, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct.cpp

; 6    : CBlender_accum_direct::CBlender_accum_direct	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_direct@@6B@
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 203  : 	b_accum_direct					= xr_new<CBlender_accum_direct>			();

	mov	DWORD PTR [eax+28], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	ebx

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct_cascade.cpp

; 6    : CBlender_accum_direct_cascade::CBlender_accum_direct_cascade	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 204  : 	b_accum_direct_cascade			= xr_new<CBlender_accum_direct_cascade>	();

	mov	eax, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct_cascade.cpp

; 6    : CBlender_accum_direct_cascade::CBlender_accum_direct_cascade	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_direct_cascade@@6B@
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 204  : 	b_accum_direct_cascade			= xr_new<CBlender_accum_direct_cascade>	();

	mov	DWORD PTR [eax+32], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	ebx

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_point.cpp

; 6    : CBlender_accum_point::CBlender_accum_point	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 205  : 	b_accum_point					= xr_new<CBlender_accum_point>			();

	mov	eax, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_point.cpp

; 6    : CBlender_accum_point::CBlender_accum_point	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_point@@6B@
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 205  : 	b_accum_point					= xr_new<CBlender_accum_point>			();

	mov	DWORD PTR [eax+36], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	ebx

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_spot.cpp

; 6    : CBlender_accum_spot::CBlender_accum_spot	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 206  : 	b_accum_spot					= xr_new<CBlender_accum_spot>			();

	mov	eax, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_spot.cpp

; 6    : CBlender_accum_spot::CBlender_accum_spot	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_spot@@6B@
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 206  : 	b_accum_spot					= xr_new<CBlender_accum_spot>			();

	mov	DWORD PTR [eax+40], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	push	324					; 00000144H
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	ebx

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_reflected.cpp

; 6    : CBlender_accum_reflected::CBlender_accum_reflected	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 207  : 	b_accum_reflected				= xr_new<CBlender_accum_reflected>		();

	mov	eax, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_reflected.cpp

; 6    : CBlender_accum_reflected::CBlender_accum_reflected	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_reflected@@6B@
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 207  : 	b_accum_reflected				= xr_new<CBlender_accum_reflected>		();

	mov	DWORD PTR [eax+44], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	ebx

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_bloom_build.cpp

; 6    : CBlender_bloom_build::CBlender_bloom_build	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 208  : 	b_bloom							= xr_new<CBlender_bloom_build>			();

	mov	eax, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_bloom_build.cpp

; 6    : CBlender_bloom_build::CBlender_bloom_build	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_bloom_build@@6B@
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 208  : 	b_bloom							= xr_new<CBlender_bloom_build>			();

	mov	DWORD PTR [eax+48], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	ebx

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\Blender_ao_build.cpp

; 8    : {

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 209  : 	b_ao							= xr_new<CBlender_ao_build>				();

	mov	eax, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\Blender_ao_build.cpp

; 8    : {

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_ao_build@@6B@

; 9    : 	description.CLS = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 209  : 	b_ao							= xr_new<CBlender_ao_build>				();

	mov	DWORD PTR [eax+52], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	ebx

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_luminance.cpp

; 6    : CBlender_luminance::CBlender_luminance	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 210  : 	b_luminance						= xr_new<CBlender_luminance>			();

	mov	eax, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_luminance.cpp

; 6    : CBlender_luminance::CBlender_luminance	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_luminance@@6B@
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 210  : 	b_luminance						= xr_new<CBlender_luminance>			();

	mov	DWORD PTR [eax+56], esi
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	324					; 00000144H
	call	ebx

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_combine.cpp

; 6    : CBlender_combine::CBlender_combine	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 211  : 	b_combine						= xr_new<CBlender_combine>				();

	mov	edx, DWORD PTR _this$1$[esp+696]

; 224  : 			rt_Position.create(r2_RT_P, w, h, D3DFMT_A16B16G16R16F);

	mov	edi, DWORD PTR __imp_?create@resptrcode_crt@@QAEXPBDIIW4_D3DFORMAT@@@Z
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_combine.cpp

; 6    : CBlender_combine::CBlender_combine	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi], OFFSET ??_7CBlender_combine@@6B@
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 224  : 			rt_Position.create(r2_RT_P, w, h, D3DFMT_A16B16G16R16F);

	lea	ecx, DWORD PTR [edx+68]
	mov	DWORD PTR [edx+60], esi
	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	push	113					; 00000071H
	mov	ebx, DWORD PTR [eax+260]
	mov	esi, DWORD PTR [eax+256]
	push	ebx
	push	esi
	push	OFFSET ??_C@_0P@OKPEOIFD@$user$position@
	call	edi

; 225  : 			rt_Normal.create(r2_RT_N, w, h, D3DFMT_A16B16G16R16F);

	mov	ecx, DWORD PTR _this$1$[esp+696]
	push	113					; 00000071H
	push	ebx
	push	esi
	push	OFFSET ??_C@_0N@CEOKIBDJ@$user$normal@
	lea	ecx, DWORD PTR [ecx+72]
	call	edi

; 226  : 	//	}
; 227  : 
; 228  : 		// select albedo & accum
; 229  : 		if (RImplementation.o.mrtmixdepth)	

	mov	ecx, DWORD PTR _this$1$[esp+696]
	mov	eax, DWORD PTR ?RImplementation@@3VCRender@@A+652
	lea	ecx, DWORD PTR [ecx+76]
	test	eax, 524288				; 00080000H
	je	SHORT $LN55@CRenderTar

; 230  : 		{
; 231  : 			// NV50
; 232  : 			rt_Color.create			(r2_RT_albedo,	w,h,D3DFMT_A8R8G8B8);

	push	21					; 00000015H
$LN642@CRenderTar:

; 257  : 			//	}
; 258  : 			}
; 259  : 		}
; 260  : 
; 261  : 		//if (RImplementation.o.advancedpp)
; 262  : 		//{
; 263  : 		//	// generic(LDR) RTs
; 264  : 		//	rt_Generic_0.create(r2_RT_generic0, w, h, D3DFMT_A32B32G32R32F);
; 265  : 		///	rt_Generic_1.create(r2_RT_generic1, w, h, D3DFMT_A32B32G32R32F);
; 266  : 		//	rt_Generic_2.create(r2_RT_generic2, w, h, D3DFMT_A32B32G32R32F);
; 267  : 		//}
; 268  : 		//else
; 269  : 		//{
; 270  : 			// generic(LDR) RTs
; 271  : 			rt_Generic_0.create(r2_RT_generic0, w, h, D3DFMT_A16B16G16R16F);

	push	ebx
	push	esi
	push	OFFSET ??_C@_0N@NMIEKNDL@$user$albedo@
	call	edi
	mov	ecx, DWORD PTR _this$1$[esp+696]
	push	113					; 00000071H
	push	ebx
	push	esi
	push	OFFSET ??_C@_0M@HIKFGAGK@$user$accum@
	lea	ecx, DWORD PTR [ecx+80]
	jmp	SHORT $LN633@CRenderTar
$LN55@CRenderTar:

; 233  : 			rt_Accumulator.create	(r2_RT_accum,	w,h,D3DFMT_A16B16G16R16F);
; 234  : 		}
; 235  : 		else		
; 236  : 		{
; 237  : 			// can't - mix-depth
; 238  : 			if (RImplementation.o.fp16_blend) {

	test	eax, 2097152				; 00200000H
	je	SHORT $LN4@CRenderTar

; 239  : 				// NV40
; 240  : 				rt_Color.create				(r2_RT_albedo,		w,h,D3DFMT_A16B16G16R16F);	// expand to full

	push	113					; 00000071H

; 241  : 				rt_Accumulator.create		(r2_RT_accum,		w,h,D3DFMT_A16B16G16R16F);
; 242  : 			} else {

	jmp	SHORT $LN642@CRenderTar
$LN4@CRenderTar:

; 243  : 				// R4xx, no-fp-blend,-> albedo_wo
; 244  : 				VERIFY						(RImplementation.o.albedo_wo);
; 245  : 
; 246  : 			//	if (RImplementation.o.advancedpp)
; 247  : 			//	{
; 248  : 			//		rt_Color.create(r2_RT_albedo, w, h, D3DFMT_A32B32G32R32F);	// normal
; 249  : 			//		rt_Accumulator.create(r2_RT_accum, w, h, D3DFMT_A32B32G32R32F);
; 250  : 			//		rt_Accumulator_temp.create(r2_RT_accum_temp, w, h, D3DFMT_A32B32G32R32F);
; 251  : 			//	}
; 252  : 			//	else
; 253  : 			//	{
; 254  : 					rt_Color.create(r2_RT_albedo, w, h, D3DFMT_A8R8G8B8);	// normal

	push	21					; 00000015H
	push	ebx
	push	esi
	push	OFFSET ??_C@_0N@NMIEKNDL@$user$albedo@
	call	edi

; 255  : 					rt_Accumulator.create(r2_RT_accum, w, h, D3DFMT_A16B16G16R16F);

	mov	ecx, DWORD PTR _this$1$[esp+696]
	push	113					; 00000071H
	push	ebx
	push	esi
	push	OFFSET ??_C@_0M@HIKFGAGK@$user$accum@
	lea	ecx, DWORD PTR [ecx+80]
	call	edi

; 256  : 					rt_Accumulator_temp.create(r2_RT_accum_temp, w, h, D3DFMT_A16B16G16R16F);

	mov	ecx, DWORD PTR _this$1$[esp+696]
	push	113					; 00000071H
	push	ebx
	push	esi
	push	OFFSET ??_C@_0BB@ECLDCOAD@$user$accum_temp@
	lea	ecx, DWORD PTR [ecx+84]
$LN633@CRenderTar:

; 257  : 			//	}
; 258  : 			}
; 259  : 		}
; 260  : 
; 261  : 		//if (RImplementation.o.advancedpp)
; 262  : 		//{
; 263  : 		//	// generic(LDR) RTs
; 264  : 		//	rt_Generic_0.create(r2_RT_generic0, w, h, D3DFMT_A32B32G32R32F);
; 265  : 		///	rt_Generic_1.create(r2_RT_generic1, w, h, D3DFMT_A32B32G32R32F);
; 266  : 		//	rt_Generic_2.create(r2_RT_generic2, w, h, D3DFMT_A32B32G32R32F);
; 267  : 		//}
; 268  : 		//else
; 269  : 		//{
; 270  : 			// generic(LDR) RTs
; 271  : 			rt_Generic_0.create(r2_RT_generic0, w, h, D3DFMT_A16B16G16R16F);

	call	edi
	mov	ecx, DWORD PTR _this$1$[esp+696]
	push	113					; 00000071H
	push	ebx
	push	esi
	push	OFFSET ??_C@_0P@GADMJKEI@$user$generic0@
	lea	ecx, DWORD PTR [ecx+88]
	call	edi

; 272  : 			rt_Generic_1.create(r2_RT_generic1, w, h, D3DFMT_A16B16G16R16F);

	push	113					; 00000071H
	push	ebx
	mov	ebx, DWORD PTR _this$1$[esp+704]
	push	esi
	push	OFFSET ??_C@_0P@HJCHKLAJ@$user$generic1@
	lea	ecx, DWORD PTR [ebx+92]
	call	edi

; 273  : 		//}
; 274  : 	}
; 275  : 
; 276  : 	// OCCLUSION
; 277  : 	s_occq.create					(b_occq,		"r2\\occq");

	push	0
	push	0
	push	0
	push	OFFSET ??_C@_07HOFMEPDD@r2?2occq@
	push	DWORD PTR [ebx+20]
	lea	ecx, DWORD PTR [ebx+220]
	mov	ebx, DWORD PTR __imp_?create@resptrcode_shader@@QAEXPAVIBlender@@PBD111@Z
	call	ebx

; 278  : 
; 279  : 	// DIRECT (spot)
; 280  : 	D3DFORMAT						depth_format	= (D3DFORMAT)RImplementation.o.HW_smap_FORMAT;
; 281  : 
; 282  : 	if (RImplementation.o.HW_smap)

	mov	eax, DWORD PTR ?RImplementation@@3VCRender@@A+652
	mov	ecx, DWORD PTR _this$1$[esp+696]
	test	eax, 8388608				; 00800000H
	je	SHORT $LN59@CRenderTar

; 283  : 	{
; 284  : 		D3DFORMAT	nullrt				= D3DFMT_R5G6B5;
; 285  : 		if (RImplementation.o.nullrt)	nullrt	= (D3DFORMAT)MAKEFOURCC('N','U','L','L');
; 286  : 
; 287  : 		u32	size					=RImplementation.o.smapsize	;
; 288  : 		rt_smap_depth.create		(r2_RT_smap_depth,			size,size,depth_format	);

	push	DWORD PTR ?RImplementation@@3VCRender@@A+656
	mov	ebx, DWORD PTR ?RImplementation@@3VCRender@@A+660
	lea	ecx, DWORD PTR [ecx+172]
	shr	eax, 1
	movzx	esi, ax
	push	esi
	push	esi
	push	OFFSET ??_C@_0BB@DGBMBPHE@$user$smap_depth@
	shr	ebx, 2
	call	edi
	test	bl, 1
	mov	ecx, 23					; 00000017H
	mov	eax, 1280070990				; 4c4c554eH
	cmove	eax, ecx

; 289  : 		rt_smap_surf.create			(r2_RT_smap_surf,			size,size,nullrt		);

	push	eax
	push	esi
	push	esi
	mov	esi, DWORD PTR _this$1$[esp+708]
	push	OFFSET ??_C@_0BA@KFJFNDHA@$user$smap_surf@
	lea	ecx, DWORD PTR [esi+168]
	call	edi

; 290  : 		rt_smap_ZB					= NULL;
; 291  : 		s_accum_mask.create			(b_accum_mask,				"r2\\accum_mask");

	mov	ebx, DWORD PTR __imp_?create@resptrcode_shader@@QAEXPAVIBlender@@PBD111@Z
	mov	DWORD PTR [esi+176], 0

; 292  : 		s_accum_direct.create		(b_accum_direct,			"r2\\accum_direct");
; 293  : 		s_accum_direct_cascade.create(b_accum_direct_cascade,	"r2\\accum_direct_cascade");
; 294  : 		if (RImplementation.o.advancedpp)
; 295  : 		{
; 296  : 			s_accum_direct_volumetric.create("accum_volumetric_sun");
; 297  : 			s_accum_direct_volumetric_cascade.create("accum_volumetric_sun_cascade");
; 298  : 		}
; 299  : 	}

	jmp	$LN636@CRenderTar
$LN59@CRenderTar:

; 300  : 	else
; 301  : 	{
; 302  : 		u32	size					=RImplementation.o.smapsize	;

	shr	eax, 1

; 303  : 		rt_smap_surf.create			(r2_RT_smap_surf,			size,size,D3DFMT_R32F);

	lea	ecx, DWORD PTR [ecx+168]
	push	114					; 00000072H
	movzx	esi, ax
	push	esi
	push	esi
	push	OFFSET ??_C@_0BA@KFJFNDHA@$user$smap_surf@
	call	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	mov	ecx, DWORD PTR _this$1$[esp+696]

; 62   : 						resptr_core		(T * p, bool add_ref = true) 					{	p_ = p;	if(add_ref)	_inc(); }

	mov	DWORD PTR $T13[esp+696], 0

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	lea	ecx, DWORD PTR [ecx+172]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	mov	ecx, DWORD PTR _this$1$[esp+696]
	mov	DWORD PTR [ecx+172], 0

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T13[esp+696]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 305  : 		R_CHK						(HW.pDevice->CreateDepthStencilSurface	(size,size,D3DFMT_D24X8,D3DMULTISAMPLE_NONE,0,TRUE,&rt_smap_ZB,NULL));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	0
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR _this$1$[esp+700]
	add	eax, 176				; 000000b0H
	push	eax
	mov	edx, DWORD PTR [ecx]
	push	1
	push	0
	push	0
	push	77					; 0000004dH
	push	esi
	push	esi
	push	ecx
	call	DWORD PTR [edx+116]
	cmp	BYTE PTR ?ignore_always@?BL@???0CRenderTarget@@QAE@XZ@4_NA, 0
	jne	SHORT $LN5@CRenderTar
	test	eax, eax
	jns	SHORT $LN5@CRenderTar
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BL@???0CRenderTarget@@QAE@XZ@4_NA
	push	OFFSET ??_C@_0BN@OGOPBPDE@CRenderTarget?3?3CRenderTarget@
	push	305					; 00000131H
	push	OFFSET ??_C@_0EE@NHEHFFIH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0GL@HJPPOCPB@HW?4pDevice?9?$DOCreateDepthStencilS@
	push	eax
	call	DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
$LN5@CRenderTar:

; 306  : 		s_accum_mask.create			(b_accum_mask,				"r2\\accum_mask");

	mov	esi, DWORD PTR _this$1$[esp+696]
$LN636@CRenderTar:

; 307  : 		s_accum_direct.create		(b_accum_direct,			"r2\\accum_direct");
; 308  : 		s_accum_direct_cascade.create(b_accum_direct_cascade,	"r2\\accum_direct_cascade");
; 309  : 		if (RImplementation.o.advancedpp)
; 310  : 		{
; 311  : 			s_accum_direct_volumetric.create("accum_volumetric_sun");
; 312  : 			s_accum_direct_volumetric_cascade.create("accum_volumetric_sun_cascade");
; 313  : 		}
; 314  : 	}
; 315  : 
; 316  : 	// POINT
; 317  : 	{
; 318  : 		s_accum_point.create		(b_accum_point,				"r2\\accum_point_s");

	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0O@HEPKLKNP@r2?2accum_mask@
	push	DWORD PTR [esi+24]
	lea	ecx, DWORD PTR [esi+224]
	call	ebx
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BA@IIKCKHAO@r2?2accum_direct@
	push	DWORD PTR [esi+28]
	lea	ecx, DWORD PTR [esi+228]
	call	ebx
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BI@BLGAMEEA@r2?2accum_direct_cascade@
	push	DWORD PTR [esi+32]
	lea	ecx, DWORD PTR [esi+232]
	call	ebx
	test	DWORD PTR ?RImplementation@@3VCRender@@A+660, 4096 ; 00001000H
	je	SHORT $LN64@CRenderTar
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BF@MDDNKBKL@accum_volumetric_sun@
	lea	ecx, DWORD PTR [esi+236]
	call	DWORD PTR __imp_?create@resptrcode_shader@@QAEXPBD000@Z
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BN@FJAONFFM@accum_volumetric_sun_cascade@
	lea	ecx, DWORD PTR [esi+240]
	call	DWORD PTR __imp_?create@resptrcode_shader@@QAEXPBD000@Z
$LN64@CRenderTar:
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BB@JPBEKKBA@r2?2accum_point_s@
	push	DWORD PTR [esi+36]
	lea	ecx, DWORD PTR [esi+244]
	call	ebx

; 319  : 		accum_point_geom_create		();

	mov	ecx, esi
	call	?accum_point_geom_create@CRenderTarget@@QAEXXZ ; CRenderTarget::accum_point_geom_create

; 320  : 		g_accum_point.create		(D3DFVF_XYZ,				g_accum_point_vb, g_accum_point_ib);

	push	DWORD PTR [esi+272]
	lea	ecx, DWORD PTR [esi+256]
	push	DWORD PTR [esi+268]
	push	2
	call	DWORD PTR __imp_?create@resptrcode_geom@@QAEXIPAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z

; 321  : 		accum_omnip_geom_create		();

	mov	ecx, esi
	call	?accum_omnip_geom_create@CRenderTarget@@QAEXXZ ; CRenderTarget::accum_omnip_geom_create

; 322  : 		g_accum_omnipart.create		(D3DFVF_XYZ,				g_accum_omnip_vb, g_accum_omnip_ib);

	push	DWORD PTR [esi+280]
	lea	ecx, DWORD PTR [esi+264]
	push	DWORD PTR [esi+276]
	push	2
	call	DWORD PTR __imp_?create@resptrcode_geom@@QAEXIPAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z

; 323  : 	}
; 324  : 
; 325  : 	// SPOT
; 326  : 	{
; 327  : 		s_accum_spot.create			(b_accum_spot,				"r2\\accum_spot_s",	"lights\\lights_spot01");

	push	0
	push	0
	push	OFFSET ??_C@_0BF@COIFGDAB@lights?2lights_spot01@
	push	OFFSET ??_C@_0BA@BMOHLPOH@r2?2accum_spot_s@
	push	DWORD PTR [esi+40]
	lea	ecx, DWORD PTR [esi+248]
	call	ebx

; 328  : 		accum_spot_geom_create		();

	mov	ecx, esi
	call	?accum_spot_geom_create@CRenderTarget@@QAEXXZ ; CRenderTarget::accum_spot_geom_create

; 329  : 		g_accum_spot.create			(D3DFVF_XYZ,				g_accum_spot_vb, g_accum_spot_ib);

	push	DWORD PTR [esi+288]
	lea	ecx, DWORD PTR [esi+260]
	push	DWORD PTR [esi+284]
	push	2
	call	DWORD PTR __imp_?create@resptrcode_geom@@QAEXIPAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z

; 330  : 	}
; 331  : 
; 332  : 	// REFLECTED
; 333  : 	{
; 334  : 		s_accum_reflected.create	(b_accum_reflected,			"r2\\accum_refl");

	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0O@EMIENKIH@r2?2accum_refl@
	push	DWORD PTR [esi+44]
	lea	ecx, DWORD PTR [esi+252]
	call	ebx

; 335  : 	}
; 336  : 
; 337  : 	// BLOOM
; 338  : 	{
; 339  : 		D3DFORMAT	fmt				= D3DFMT_A16B16G16R16F;			//;		// D3DFMT_X8R8G8B8
; 340  : 		u32	w=BLOOM_size_X, h=BLOOM_size_Y;
; 341  : 		u32 fvf_build				= D3DFVF_XYZRHW|D3DFVF_TEX4|D3DFVF_TEXCOORDSIZE2(0)|D3DFVF_TEXCOORDSIZE2(1)|D3DFVF_TEXCOORDSIZE2(2)|D3DFVF_TEXCOORDSIZE2(3);
; 342  : 		u32 fvf_filter				= (u32)D3DFVF_XYZRHW|D3DFVF_TEX8|D3DFVF_TEXCOORDSIZE4(0)|D3DFVF_TEXCOORDSIZE4(1)|D3DFVF_TEXCOORDSIZE4(2)|D3DFVF_TEXCOORDSIZE4(3)|D3DFVF_TEXCOORDSIZE4(4)|D3DFVF_TEXCOORDSIZE4(5)|D3DFVF_TEXCOORDSIZE4(6)|D3DFVF_TEXCOORDSIZE4(7);
; 343  : 		rt_Bloom_1.create			(r2_RT_bloom1,	w,h,		fmt);

	push	113					; 00000071H
	push	256					; 00000100H
	push	256					; 00000100H
	push	OFFSET ??_C@_0N@FBKINICG@$user$bloom1@
	lea	ecx, DWORD PTR [esi+100]
	call	edi

; 344  : 		rt_Bloom_2.create			(r2_RT_bloom2,	w,h,		fmt);

	push	113					; 00000071H
	push	256					; 00000100H
	push	256					; 00000100H
	push	OFFSET ??_C@_0N@HKIFILOF@$user$bloom2@
	lea	ecx, DWORD PTR [esi+104]
	call	edi

; 345  : 		g_bloom_build.create		(fvf_build,		RCache.Vertex.Buffer(), RCache.QuadIB);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [esi+292]
	push	DWORD PTR [eax+40]
	push	DWORD PTR [eax]
	push	1028					; 00000404H
	call	DWORD PTR __imp_?create@resptrcode_geom@@QAEXIPAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z

; 346  : 		g_bloom_filter.create		(fvf_filter,	RCache.Vertex.Buffer(), RCache.QuadIB);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [esi+296]
	push	DWORD PTR [eax+40]
	push	DWORD PTR [eax]
	push	-1431697404				; aaaa0804H
	call	DWORD PTR __imp_?create@resptrcode_geom@@QAEXIPAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z

; 347  : 		s_bloom_dbg_1.create		("effects\\screen_set",		r2_RT_bloom1);

	push	0
	push	0
	push	OFFSET ??_C@_0N@FBKINICG@$user$bloom1@
	push	OFFSET ??_C@_0BD@KGPINAGD@effects?2screen_set@
	lea	ecx, DWORD PTR [esi+300]
	call	DWORD PTR __imp_?create@resptrcode_shader@@QAEXPBD000@Z

; 348  : 		s_bloom_dbg_2.create		("effects\\screen_set",		r2_RT_bloom2);

	push	0
	push	0
	push	OFFSET ??_C@_0N@HKIFILOF@$user$bloom2@
	push	OFFSET ??_C@_0BD@KGPINAGD@effects?2screen_set@
	lea	ecx, DWORD PTR [esi+304]
	call	DWORD PTR __imp_?create@resptrcode_shader@@QAEXPBD000@Z

; 349  : 		s_bloom.create				(b_bloom,					"r2\\bloom");

	push	0
	push	0
	push	0
	push	OFFSET ??_C@_08NFNJNHO@r2?2bloom@
	push	DWORD PTR [esi+48]
	lea	ecx, DWORD PTR [esi+308]
	call	ebx

; 350  : 		f_bloom_factor				= 0.5f;

	mov	DWORD PTR [esi+312], 1056964608		; 3f000000H

; 351  : 	}
; 352  : 
; 353  : 	//AO
; 354  : 	if (ps_r2_ls_flags_ext.is(R2FLAGEXT_AO_BLUR) && RImplementation.o.advancedpp)

	test	BYTE PTR ?ps_r2_ls_flags_ext@@3U?$_flags@I@@A, 4
	je	$LN65@CRenderTar
	test	DWORD PTR ?RImplementation@@3VCRender@@A+660, 4096 ; 00001000H
	je	$LN65@CRenderTar

; 355  : 	{
; 356  : 		u32 w = Device.dwWidth, h = Device.dwHeight;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A

; 357  : 
; 358  : 		//Create rendertarget
; 359  : 		rt_ao.create		 (r2_RT_ao1, w, h, D3DFMT_A16B16G16R16F);

	mov	ecx, DWORD PTR _this$1$[esp+696]
	mov	ebx, DWORD PTR __imp_?create@resptrcode_crt@@QAEXPBDIIW4_D3DFORMAT@@@Z
	push	113					; 00000071H
	mov	esi, DWORD PTR [eax+260]
	mov	edi, DWORD PTR [eax+256]
	lea	ecx, DWORD PTR [ecx+140]
	push	esi
	push	edi
	push	OFFSET ??_C@_09GPEBHJEP@$user$ao1@
	call	ebx

; 360  : 		rt_ao_blurred1.create(r2_RT_ao2, w, h, D3DFMT_A16B16G16R16F);

	mov	ecx, DWORD PTR _this$1$[esp+696]
	push	113					; 00000071H
	push	esi
	push	edi
	push	OFFSET ??_C@_09EEGMCKIM@$user$ao2@
	lea	ecx, DWORD PTR [ecx+144]
	call	ebx

; 361  : 		rt_ao_blurred2.create(r2_RT_ao3, w, h, D3DFMT_A16B16G16R16F);

	mov	ecx, DWORD PTR _this$1$[esp+696]
	push	113					; 00000071H
	push	esi
	push	edi
	push	OFFSET ??_C@_09FNHHBLMN@$user$ao3@
	lea	ecx, DWORD PTR [ecx+148]
	call	ebx

; 362  : 		rt_ao_blurred3.create(r2_RT_ao4, w, h, D3DFMT_A16B16G16R16F);

	mov	ecx, DWORD PTR _this$1$[esp+696]
	push	113					; 00000071H
	push	esi
	push	edi
	push	OFFSET ??_C@_09BCDGINAK@$user$ao4@
	lea	ecx, DWORD PTR [ecx+152]
	call	ebx

; 363  : 
; 364  : 		rt_blurred_position.create(r2_RT_blurred_position, w, h, D3DFMT_A16B16G16R16F);

	push	113					; 00000071H
	push	esi
	mov	esi, DWORD PTR _this$1$[esp+704]
	push	edi
	push	OFFSET ??_C@_0BH@BODBNLFF@$user$blurred_position@
	mov	edi, ebx
	lea	ecx, DWORD PTR [esi+156]
	call	edi

; 365  : 
; 366  : 		//Create shader resource
; 367  : 		//b_ao = xr_new<CBlender_ao_build>();
; 368  : 		s_ao.create(b_ao, "r2\\ao");

	mov	ebx, DWORD PTR __imp_?create@resptrcode_shader@@QAEXPAVIBlender@@PBD111@Z
	lea	ecx, DWORD PTR [esi+316]
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_05PJJNHPBF@r2?2ao@
	push	DWORD PTR [esi+52]
	call	ebx
$LN65@CRenderTar:

; 369  : 	}
; 370  : 
; 371  : 	// TONEMAP
; 372  : 	{
; 373  : 		rt_LUM_64.create			(r2_RT_luminance_t64,	64, 64,	D3DFMT_A16B16G16R16F	);

	push	113					; 00000071H
	push	64					; 00000040H
	push	64					; 00000040H
	push	OFFSET ??_C@_0O@EKANACOA@$user$lum_t64@
	lea	ecx, DWORD PTR [esi+108]
	call	edi

; 374  : 		rt_LUM_8.create				(r2_RT_luminance_t8,	8,	8,	D3DFMT_A16B16G16R16F	);

	push	113					; 00000071H
	push	8
	push	8
	push	OFFSET ??_C@_0N@GNJAHIFP@$user$lum_t8@
	lea	ecx, DWORD PTR [esi+112]
	call	edi

; 375  : 		s_luminance.create			(b_luminance,				"r2\\luminance");

	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0N@JLPEBDIO@r2?2luminance@
	push	DWORD PTR [esi+56]
	lea	ecx, DWORD PTR [esi+320]
	call	ebx

; 376  : 		f_luminance_adapt			= 0.5f;
; 377  : 
; 378  : 		t_LUM_src.create			(r2_RT_luminance_src);

	mov	ebx, DWORD PTR __imp_?create@resptrcode_texture@@QAEXPBD@Z
	lea	ecx, DWORD PTR [esi+132]
	push	OFFSET ??_C@_0BC@CLBKNDOG@$user$tonemap_src@
	mov	DWORD PTR [esi+324], 1056964608		; 3f000000H
	call	ebx

; 379  : 		t_LUM_dest.create			(r2_RT_luminance_cur);

	push	OFFSET ??_C@_0O@JLAPJDFG@$user$tonemap@
	lea	ecx, DWORD PTR [esi+136]
	call	ebx
	mov	ebx, DWORD PTR ___t$1$[esp+696]
	xor	esi, esi
	npad	2
$LL10@CRenderTar:

; 380  : 
; 381  : 		// create pool
; 382  : 		for (u32 it=0; it<4; it++)	{
; 383  : 			string256					name;
; 384  : 			sprintf						(name,"%s_%d",	r2_RT_luminance_pool,it	);

	push	esi
	push	OFFSET ??_C@_0BA@KFBGHPNO@$user$luminance@
	lea	eax, DWORD PTR _name$19[esp+704]
	push	OFFSET ??_C@_05LFHGFJK@?$CFs_?$CFd@
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 385  : 			rt_LUM_pool[it].create		(name,	1,	1,	D3DFMT_R32F				);

	lea	eax, DWORD PTR _name$19[esp+696]
	mov	ecx, ebx
	push	114					; 00000072H
	push	1
	push	1
	push	eax
	call	edi

; 19   : 	dwWidth									= _1->dwWidth;

	mov	eax, DWORD PTR [ebx]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	xor	edx, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 19   : 	dwWidth									= _1->dwWidth;

	mov	ecx, DWORD PTR _this$1$[esp+696]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 62   : 						resptr_core		(T * p, bool add_ref = true) 					{	p_ = p;	if(add_ref)	_inc(); }

	mov	DWORD PTR $T11[esp+696], 0
	mov	DWORD PTR $T8[esp+696], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 19   : 	dwWidth									= _1->dwWidth;

	mov	eax, DWORD PTR [eax+24]
	mov	DWORD PTR [ecx+4], eax

; 20   : 	dwHeight								= _1->dwHeight;

	mov	eax, DWORD PTR [ebx]

; 21   : 	if (_1) RCache.set_RT(_1->pRT,	0); else RCache.set_RT(NULL,0);

	push	edx
	mov	eax, DWORD PTR [eax+28]
	mov	DWORD PTR [ecx+8], eax
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	mov	ecx, DWORD PTR [ebx]
	test	ecx, ecx
	mov	eax, DWORD PTR __imp_?_get@?$resptr_base@VCRT@@@@QBEPAVCRT@@XZ
	cmove	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 21   : 	if (_1) RCache.set_RT(_1->pRT,	0); else RCache.set_RT(NULL,0);

	test	eax, eax
	je	SHORT $LN307@CRenderTar
	push	DWORD PTR [ecx+16]
	jmp	SHORT $LN637@CRenderTar
$LN307@CRenderTar:
	push	0
$LN637@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z
	mov	eax, DWORD PTR $T8[esp+696]
	xor	edx, edx
	mov	ecx, DWORD PTR __imp_?_get@?$resptr_base@VCRT@@@@QBEPAVCRT@@XZ
	test	eax, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 22   : 	if (_2) RCache.set_RT(_2->pRT,	1); else RCache.set_RT(NULL,1);

	push	1
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	cmove	ecx, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 22   : 	if (_2) RCache.set_RT(_2->pRT,	1); else RCache.set_RT(NULL,1);

	test	ecx, ecx
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	je	SHORT $LN309@CRenderTar
	push	DWORD PTR [eax+16]
	jmp	SHORT $LN638@CRenderTar
$LN309@CRenderTar:
	push	0
$LN638@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z
	mov	eax, DWORD PTR $T11[esp+696]
	xor	edx, edx
	mov	ecx, DWORD PTR __imp_?_get@?$resptr_base@VCRT@@@@QBEPAVCRT@@XZ
	test	eax, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 23   : 	if (_3) RCache.set_RT(_3->pRT,	2); else RCache.set_RT(NULL,2);

	push	2
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	cmove	ecx, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 23   : 	if (_3) RCache.set_RT(_3->pRT,	2); else RCache.set_RT(NULL,2);

	test	ecx, ecx
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	je	SHORT $LN311@CRenderTar
	push	DWORD PTR [eax+16]
	jmp	SHORT $LN639@CRenderTar
$LN311@CRenderTar:
	push	0
$LN639@CRenderTar:

; 24   : 	RCache.set_ZB							(zb);

	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	0
	call	DWORD PTR __imp_?set_ZB@CBackend@@QAEXPAUIDirect3DSurface9@@@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T8[esp+696]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	lea	ecx, DWORD PTR $T11[esp+696]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 387  : 			CHK_DX						(HW.pDevice->Clear( 0L, NULL, D3DCLEAR_TARGET,	0x7f7f7f7f,	1.0f, 0L));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	fld1
	push	0
	mov	eax, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	fstp	DWORD PTR [esp]
	push	2139062143				; 7f7f7f7fH
	push	1
	push	0
	push	0
	push	eax
	call	DWORD PTR [ecx+172]
	inc	esi
	add	ebx, 4
	cmp	esi, 4
	jb	$LL10@CRenderTar

; 388  : 		}
; 389  : 		u_setrt						( Device.dwWidth,Device.dwHeight,HW.pBaseRT,NULL,NULL,HW.pBaseZB);

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A

; 31   : 	dwWidth									= W;

	mov	ebx, DWORD PTR _this$1$[esp+696]

; 33   : 	VERIFY									(_1);
; 34   : 	RCache.set_RT							(_1,	0);

	push	0

; 388  : 		}
; 389  : 		u_setrt						( Device.dwWidth,Device.dwHeight,HW.pBaseRT,NULL,NULL,HW.pBaseZB);

	mov	edx, DWORD PTR [eax+12]
	mov	esi, DWORD PTR [eax+16]
	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A

; 34   : 	RCache.set_RT							(_1,	0);

	push	edx

; 388  : 		}
; 389  : 		u_setrt						( Device.dwWidth,Device.dwHeight,HW.pBaseRT,NULL,NULL,HW.pBaseZB);

	mov	ecx, DWORD PTR [eax+260]

; 31   : 	dwWidth									= W;

	mov	eax, DWORD PTR [eax+256]
	mov	DWORD PTR [ebx+4], eax

; 32   : 	dwHeight								= H;

	mov	DWORD PTR [ebx+8], ecx

; 33   : 	VERIFY									(_1);
; 34   : 	RCache.set_RT							(_1,	0);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 35   : 	RCache.set_RT							(_2,	1);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	1
	push	0
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 36   : 	RCache.set_RT							(_3,	2);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	2
	push	0
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 37   : 	RCache.set_ZB							(zb);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	esi
	call	DWORD PTR __imp_?set_ZB@CBackend@@QAEXPAUIDirect3DSurface9@@@Z

; 390  : 	}
; 391  : 
; 392  : 	// COMBINE
; 393  : 	{
; 394  : 		static D3DVERTEXELEMENT9 dwDecl[] =
; 395  : 		{
; 396  : 			{ 0, 0,  D3DDECLTYPE_FLOAT4,	D3DDECLMETHOD_DEFAULT, 	D3DDECLUSAGE_POSITION,	0 },	// pos+uv
; 397  : 			D3DDECL_END()
; 398  : 		};
; 399  : 		s_combine.create					(b_combine,					"r2\\combine");

	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0L@KCLJCHPK@r2?2combine@
	push	DWORD PTR [ebx+60]
	lea	ecx, DWORD PTR [ebx+364]
	call	DWORD PTR __imp_?create@resptrcode_shader@@QAEXPAVIBlender@@PBD111@Z

; 400  : 		s_combine_volumetric.create			("combine_volumetric");

	mov	esi, DWORD PTR __imp_?create@resptrcode_shader@@QAEXPBD000@Z
	lea	ecx, DWORD PTR [ebx+368]
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BD@BDGMEBMG@combine_volumetric@
	call	esi

; 401  : 		s_combine_dbg_0.create				("effects\\screen_set",		r2_RT_smap_surf		);	

	push	0
	push	0
	push	OFFSET ??_C@_0BA@KFJFNDHA@$user$smap_surf@
	push	OFFSET ??_C@_0BD@KGPINAGD@effects?2screen_set@
	lea	ecx, DWORD PTR [ebx+352]
	call	esi

; 402  : 		s_combine_dbg_1.create				("effects\\screen_set",		r2_RT_luminance_t8	);

	push	0
	push	0
	push	OFFSET ??_C@_0N@GNJAHIFP@$user$lum_t8@
	push	OFFSET ??_C@_0BD@KGPINAGD@effects?2screen_set@
	lea	ecx, DWORD PTR [ebx+356]
	call	esi

; 403  : 		s_combine_dbg_Accumulator.create	("effects\\screen_set",		r2_RT_accum			);

	push	0
	push	0
	push	OFFSET ??_C@_0M@HIKFGAGK@$user$accum@
	push	OFFSET ??_C@_0BD@KGPINAGD@effects?2screen_set@
	lea	ecx, DWORD PTR [ebx+360]
	call	esi

; 404  : 		g_combine_VP.create					(dwDecl,		RCache.Vertex.Buffer(), RCache.QuadIB);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [ebx+332]
	push	DWORD PTR [eax+40]
	push	DWORD PTR [eax]
	push	OFFSET ?dwDecl@?CL@???0CRenderTarget@@QAE@XZ@4PAU_D3DVERTEXELEMENT9@@A
	call	DWORD PTR __imp_?create@resptrcode_geom@@QAEXPAU_D3DVERTEXELEMENT9@@PAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z

; 405  : 		g_combine.create					(FVF::F_TL,		RCache.Vertex.Buffer(), RCache.QuadIB);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [ebx+328]
	mov	esi, DWORD PTR __imp_?create@resptrcode_geom@@QAEXIPAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z
	push	DWORD PTR [eax+40]
	push	DWORD PTR [eax]
	push	324					; 00000144H
	call	esi

; 406  : 		g_combine_2UV.create				(FVF::F_TL2uv,	RCache.Vertex.Buffer(), RCache.QuadIB);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [ebx+336]
	push	DWORD PTR [eax+40]
	push	DWORD PTR [eax]
	push	580					; 00000244H
	call	esi

; 407  : 		g_combine_cuboid.create				(FVF::F_L,		RCache.Vertex.Buffer(), RCache.Index.Buffer());

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [ebx+340]
	push	DWORD PTR [eax+20]
	push	DWORD PTR [eax]
	push	66					; 00000042H
	call	esi

; 408  : 
; 409  : 		u32 fvf_aa_blur				= D3DFVF_XYZRHW|D3DFVF_TEX4|D3DFVF_TEXCOORDSIZE2(0)|D3DFVF_TEXCOORDSIZE2(1)|D3DFVF_TEXCOORDSIZE2(2)|D3DFVF_TEXCOORDSIZE2(3);
; 410  : 		g_aa_blur.create			(fvf_aa_blur,	RCache.Vertex.Buffer(), RCache.QuadIB);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [ebx+344]
	push	DWORD PTR [eax+40]
	push	DWORD PTR [eax]
	push	1028					; 00000404H
	call	esi

; 411  : 
; 412  : 		u32 fvf_aa_AA				= D3DFVF_XYZRHW|D3DFVF_TEX7|D3DFVF_TEXCOORDSIZE2(0)|D3DFVF_TEXCOORDSIZE2(1)|D3DFVF_TEXCOORDSIZE2(2)|D3DFVF_TEXCOORDSIZE2(3)|D3DFVF_TEXCOORDSIZE2(4)|D3DFVF_TEXCOORDSIZE4(5)|D3DFVF_TEXCOORDSIZE4(6);
; 413  : 		g_aa_AA.create				(fvf_aa_AA,		RCache.Vertex.Buffer(), RCache.QuadIB);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [ebx+348]
	push	DWORD PTR [eax+40]
	push	DWORD PTR [eax]
	push	671090436				; 28000704H
	call	esi

; 414  : 
; 415  : 		t_envmap_0.create			(r2_T_envs0);

	mov	esi, DWORD PTR __imp_?create@resptrcode_texture@@QAEXPBD@Z
	lea	ecx, DWORD PTR [ebx+160]
	push	OFFSET ??_C@_0N@ELLPPFMK@$user$env_s0@
	call	esi

; 416  : 		t_envmap_1.create			(r2_T_envs1);

	push	OFFSET ??_C@_0N@FCKEMEIL@$user$env_s1@
	lea	ecx, DWORD PTR [ebx+164]
	call	esi

; 417  : 	}
; 418  : 
; 419  : 	// Build textures
; 420  : 	{
; 421  : 		// Build material(s)
; 422  : 		{
; 423  : 			// Surface
; 424  : 			R_CHK						(D3DXCreateVolumeTexture(HW.pDevice,TEX_material_LdotN,TEX_material_LdotH,4,1,0,D3DFMT_A8L8,D3DPOOL_MANAGED,&t_material_surf));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	add	ebx, 180				; 000000b4H
	push	ebx
	push	1
	push	51					; 00000033H
	push	0
	push	1
	push	4
	push	256					; 00000100H
	push	128					; 00000080H
	push	DWORD PTR [eax+8]
	call	DWORD PTR __imp__D3DXCreateVolumeTexture@36
	cmp	BYTE PTR ?ignore_always@?CP@???0CRenderTarget@@QAE@XZ@4_NA, 0
	jne	SHORT $LN11@CRenderTar
	test	eax, eax
	jns	SHORT $LN11@CRenderTar
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?CP@???0CRenderTarget@@QAE@XZ@4_NA
	push	OFFSET ??_C@_0BN@OGOPBPDE@CRenderTarget?3?3CRenderTarget@
	push	424					; 000001a8H
	push	OFFSET ??_C@_0EE@NHEHFFIH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0HN@BBBLIEJF@D3DXCreateVolumeTexture?$CIHW?4pDev@
	push	eax
	call	DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
$LN11@CRenderTar:

; 425  : 			t_material					= Device.Resources->_CreateTexture(r2_material);

	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	push	OFFSET ??_C@_0P@KHHMBLJK@$user$material@
	mov	ecx, DWORD PTR [ecx+432]
	call	DWORD PTR __imp_?_CreateTexture@CResourceManager@@QAEPAVCTexture@@PBD@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 62   : 						resptr_core		(T * p, bool add_ref = true) 					{	p_ = p;	if(add_ref)	_inc(); }

	mov	esi, eax
	mov	DWORD PTR $T7[esp+696], esi

; 43   : 	void				_inc	()									{	if (0==p_) return;	p_->dwReference++;														}

	test	esi, esi
	je	SHORT $LN359@CRenderTar
	inc	DWORD PTR [esi+4]
	mov	esi, DWORD PTR $T7[esp+696]

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	test	esi, esi

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	je	SHORT $LN359@CRenderTar
	inc	DWORD PTR [esi+4]
$LN359@CRenderTar:
	mov	edi, DWORD PTR _this$1$[esp+696]
	lea	ecx, DWORD PTR [edi+184]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T7[esp+696]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	mov	DWORD PTR [edi+184], esi

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 426  : 			t_material->surface_set		(t_material_surf);

	push	DWORD PTR [ebx]
	mov	ecx, DWORD PTR [edi+184]
	call	DWORD PTR __imp_?surface_set@CTexture@@QAEXPAUIDirect3DBaseTexture9@@@Z

; 427  : 
; 428  : 			// Fill it (addr: x=dot(L,N),y=dot(L,H))
; 429  : 			D3DLOCKED_BOX				R;
; 430  : 			R_CHK						(t_material_surf->LockBox	(0,&R,0,0));

	mov	eax, DWORD PTR [ebx]
	lea	edx, DWORD PTR _R$16[esp+696]
	push	0
	push	0
	push	edx
	mov	ecx, DWORD PTR [eax]
	push	0
	push	eax
	call	DWORD PTR [ecx+76]
	cmp	BYTE PTR ?ignore_always@?DD@???0CRenderTarget@@QAE@XZ@4_NA, 0
	jne	SHORT $LN14@CRenderTar
	test	eax, eax
	jns	SHORT $LN14@CRenderTar
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DD@???0CRenderTarget@@QAE@XZ@4_NA
	push	OFFSET ??_C@_0BN@OGOPBPDE@CRenderTarget?3?3CRenderTarget@
	push	430					; 000001aeH
	push	OFFSET ??_C@_0EE@NHEHFFIH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0CE@OIDICFOJ@t_material_surf?9?$DOLockBox?5?$CI0?0?$CGR?0@
	push	eax
	call	DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
$LN14@CRenderTar:

; 431  : 			for (u32 slice=0; slice<4; slice++)

	fld	DWORD PTR __real@3b808081
	xor	ebx, ebx
	fld	DWORD PTR __real@33d6bf95

; 432  : 			{
; 433  : 				for (u32 y=0; y<TEX_material_LdotH; y++)

	xor	edx, edx
	fld	DWORD PTR __real@3c010204
	fld	DWORD PTR __real@3d000000
	mov	DWORD PTR _slice$1$[esp+696], ebx
	mov	DWORD PTR _y$1$[esp+696], edx
	jmp	SHORT $LN22@CRenderTar
$LN628@CRenderTar:

; 431  : 			for (u32 slice=0; slice<4; slice++)

	fxch	ST(1)

; 432  : 			{
; 433  : 				for (u32 y=0; y<TEX_material_LdotH; y++)

	xor	edx, edx
	fxch	ST(3)
	mov	DWORD PTR _y$1$[esp+696], edx
	fxch	ST(1)
	fxch	ST(2)
	jmp	SHORT $LN22@CRenderTar
$LN625@CRenderTar:
	fxch	ST(1)
	fxch	ST(3)
	fxch	ST(1)
	fxch	ST(2)
$LN22@CRenderTar:

; 434  : 				{
; 435  : 					for (u32 x=0; x<TEX_material_LdotN; x++)

	xor	ecx, ecx
	mov	DWORD PTR tv5248[esp+696], edx
	mov	DWORD PTR _x$1$[esp+696], ecx
	fild	DWORD PTR tv5248[esp+696]
	test	edx, edx
	jns	SHORT $LN629@CRenderTar
	fadd	DWORD PTR __real@4f800000
$LN629@CRenderTar:
	fmulp	ST(4), ST(0)
	fxch	ST(3)
	faddp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR tv4929[esp+696]
	jmp	SHORT $LN25@CRenderTar
$LN622@CRenderTar:
	fxch	ST(1)
$LN25@CRenderTar:

; 436  : 					{
; 437  : 						u16*	p	=	(u16*)		(LPBYTE (R.pBits) + slice*R.SlicePitch + y*R.RowPitch + x*2);

	mov	edi, DWORD PTR _R$16[esp+700]
	mov	eax, DWORD PTR _R$16[esp+696]
	imul	edi, ebx
	imul	eax, edx

; 438  : 						float	ld	=	float(x)	/ float	(TEX_material_LdotN-1);

	mov	DWORD PTR tv5242[esp+696], ecx
	fild	DWORD PTR tv5242[esp+696]
	add	edi, DWORD PTR _R$16[esp+704]
	add	edi, eax
	test	ecx, ecx
	jns	SHORT $LN630@CRenderTar
	fadd	DWORD PTR __real@4f800000
$LN630@CRenderTar:
	fst	DWORD PTR tv4767[esp+696]
	fmulp	ST(1), ST(0)
	fst	DWORD PTR _ld$1$[esp+696]
	fst	DWORD PTR _ld$9[esp+696]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 749  :             return (float)pow(_X, _Y);

	fxch	ST(1)
	call	__CIpow
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 440  : 						ls			*=	powf(ld,1/32.f);

	fmul	DWORD PTR tv4929[esp+696]
	fstp	DWORD PTR tv3811[esp+696]
	movss	xmm1, DWORD PTR tv3811[esp+696]
	movss	DWORD PTR _fs$1$[esp+696], xmm1
	movss	DWORD PTR _ls$6[esp+696], xmm1

; 441  : 						float	fd,fs;
; 442  : 
; 443  : 						switch	(slice)

	jmp	DWORD PTR $LN606@CRenderTar[ebx*4]
$LN68@CRenderTar:
	fld	DWORD PTR _ld$1$[esp+696]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 749  :             return (float)pow(_X, _Y);

	fld	DWORD PTR __real@3f400000
	call	__CIpow
	movss	xmm0, DWORD PTR _fs$1$[esp+696]
	mulss	xmm0, xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 446  : 							fd	= powf(ld,0.75f);		// 0.75

	fstp	DWORD PTR _fd$10[esp+696]

; 448  : 								}	break;

	movss	xmm2, DWORD PTR _fd$10[esp+696]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 749  :             return (float)pow(_X, _Y);

	mulss	xmm0, xmm0
	mulss	xmm0, xmm0
	mulss	xmm0, xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 447  : 							fs	= powf(ls,16.f)*.5f;

	mulss	xmm0, DWORD PTR __real@3f000000

; 448  : 								}	break;

	jmp	$LN26@CRenderTar
$LN69@CRenderTar:
	fld	DWORD PTR _ld$1$[esp+696]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 749  :             return (float)pow(_X, _Y);

	fld	DWORD PTR __real@3f666666
	call	__CIpow
	movss	xmm1, DWORD PTR _fs$1$[esp+696]
	movaps	xmm0, xmm1
	mulss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 450  : 							fd	= powf(ld,0.90f);		// 0.90

	fstp	DWORD PTR _fd$10[esp+696]

; 452  : 								}	break;

	movss	xmm2, DWORD PTR _fd$10[esp+696]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 749  :             return (float)pow(_X, _Y);

	mulss	xmm0, xmm1
	mulss	xmm0, xmm0
	mulss	xmm0, xmm0
	mulss	xmm0, xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 452  : 								}	break;

	jmp	$LN26@CRenderTar
$LN70@CRenderTar:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 749  :             return (float)pow(_X, _Y);

	movaps	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 454  : 							fd	= ld;					// 1.0

	movss	xmm2, DWORD PTR _ld$9[esp+696]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 749  :             return (float)pow(_X, _Y);

	mulss	xmm0, xmm1
	mulss	xmm0, xmm0
	mulss	xmm0, xmm0
	mulss	xmm0, xmm0
	mulss	xmm0, xmm0
	mulss	xmm0, xmm0
	mulss	xmm0, xmm0
	mulss	xmm0, DWORD PTR __real@4064b9de
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 456  : 								}	break;

	jmp	$LN26@CRenderTar
$LN71@CRenderTar:

; 458  : 							float	s0	=	_abs	(1-_abs	(0.05f*_sin(33.f*ld)+ld-ls));

	fld	DWORD PTR tv4767[esp+696]
	fmul	DWORD PTR __real@3e850a14

; 460  : 							float	s2	=	_abs	(1-_abs	(ld-ls));

	movss	xmm0, DWORD PTR _ld$9[esp+696]
	movss	xmm2, DWORD PTR __real@3f800000
	movss	DWORD PTR _fd$1$[esp+696], xmm0
	subss	xmm0, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 754  :             return (float)sin(_X);

	fld	ST(0)
	fsin
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 458  : 							float	s0	=	_abs	(1-_abs	(0.05f*_sin(33.f*ld)+ld-ls));

	fld	DWORD PTR __real@3d4ccccd
	fmul	ST(1), ST(0)
	fld	DWORD PTR _ld$1$[esp+696]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 460  : 							float	s2	=	_abs	(1-_abs	(ld-ls));

	subss	xmm2, xmm0
	fadd	ST(2), ST(0)
	fld	DWORD PTR _ls$6[esp+696]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	andps	xmm2, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 458  : 							float	s0	=	_abs	(1-_abs	(0.05f*_sin(33.f*ld)+ld-ls));

	fsub	ST(3), ST(0)
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	fxch	ST(3)
	fabs
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 458  : 							float	s0	=	_abs	(1-_abs	(0.05f*_sin(33.f*ld)+ld-ls));

	fld1
	fld	ST(0)
	fsubrp	ST(2), ST(0)
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	fxch	ST(1)
	fabs
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 458  : 							float	s0	=	_abs	(1-_abs	(0.05f*_sin(33.f*ld)+ld-ls));

	fst	DWORD PTR _s0$4[esp+696]

; 459  : 							float	s1	=	_abs	(1-_abs	(0.05f*_cos(33.f*ld*ls)+ld-ls));

	fxch	ST(5)
	fmul	ST(0), ST(4)
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 653  :             return (float)cos(_X);

	fcos
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 459  : 							float	s1	=	_abs	(1-_abs	(0.05f*_cos(33.f*ld*ls)+ld-ls));

	fmulp	ST(3), ST(0)
	fxch	ST(2)
	fadd	ST(0), ST(1)
	fsubrp	ST(3), ST(0)
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	fxch	ST(2)
	fabs
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 459  : 							float	s1	=	_abs	(1-_abs	(0.05f*_cos(33.f*ld*ls)+ld-ls));

	fsubp	ST(1), ST(0)
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	fabs
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 459  : 							float	s1	=	_abs	(1-_abs	(0.05f*_cos(33.f*ld*ls)+ld-ls));

	fst	DWORD PTR _s1$14[esp+696]
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 94   : template <class T>	IC T		_max	(T a, T b)	{ return a>b?a:b;	}

	fxch	ST(2)
	fcomip	ST(2)
	fstp	ST(1)
	jbe	SHORT $LN409@CRenderTar
	movss	xmm1, DWORD PTR _s0$4[esp+696]
	jmp	SHORT $LN410@CRenderTar
$LN409@CRenderTar:
	movss	xmm1, DWORD PTR _s1$14[esp+696]
$LN410@CRenderTar:
	comiss	xmm1, xmm2
	ja	SHORT $LN414@CRenderTar
	movaps	xmm1, xmm2
$LN414@CRenderTar:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 749  :             return (float)pow(_X, _Y);

	fld	DWORD PTR __real@3e124925
	movaps	xmm0, xmm1
	mulss	xmm0, xmm1
	mulss	xmm0, xmm1
	mulss	xmm0, xmm0
	mulss	xmm0, xmm0
	movss	DWORD PTR tv4902[esp+696], xmm0
	call	__CIpow
	fld	DWORD PTR tv4902[esp+696]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 464  : 								}	break;

	movss	xmm2, DWORD PTR _fd$1$[esp+696]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 749  :             return (float)pow(_X, _Y);

	fmul	ST(0), ST(0)
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 463  : 							fs		*=	powf	(ld,1/7.f);

	fmulp	ST(1), ST(0)
	fstp	DWORD PTR _fs$5[esp+696]

; 464  : 								}	break;

	movss	xmm0, DWORD PTR _fs$5[esp+696]
	jmp	SHORT $LN26@CRenderTar

; 465  : 						default:
; 466  : 							fd	= fs = 0;

$LN26@CRenderTar:

; 468  : 						s32		_d	=	clampr	(iFloor	(fd*255.5f),	0,255);

	movss	xmm1, DWORD PTR __real@437f8000
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ecx, 158				; 0000009eH
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 468  : 						s32		_d	=	clampr	(iFloor	(fd*255.5f),	0,255);

	mulss	xmm2, xmm1
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 83   :     int a			= *(const int*)(&x);

	movss	DWORD PTR _a$3[esp+696], xmm2

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	esi, DWORD PTR _a$3[esp+696]
	mov	eax, esi
	sar	eax, 23					; 00000017H

; 85   :     int r			= (((u32)(a) << 8) | (1U << 31)) >> exponent;

	mov	ebx, esi
	movzx	eax, al
	or	ebx, -8388608				; ff800000H
	sub	ecx, eax
	shl	ebx, 8
	shr	ebx, cl

; 86   :     exponent		+= 31-127;
; 87   :     {
; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	mov	eax, 1
	sub	ecx, 96					; 00000060H

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	mov	edx, esi
	shl	eax, cl
	dec	eax
	sar	edx, 31					; 0000001fH
	sar	eax, 8
	and	eax, esi
	neg	eax
	sbb	eax, eax
	inc	eax
	and	eax, edx

; 92   :         r			-=	(imask&a);

	sub	ebx, eax
	lea	eax, DWORD PTR [ecx+64]
	sar	eax, 31					; 0000001fH

; 93   :         r			&=	exponent;

	and	ebx, eax
	xor	ebx, edx
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h

; 96   : 	if		( val<_low	)	return _low; 

	jge	SHORT $LN422@CRenderTar
	mov	DWORD PTR __d$1$[esp+696], 0
	jmp	SHORT $LN424@CRenderTar
$LN422@CRenderTar:

; 97   : 	else if	( val>_high )	return _high;

	cmp	ebx, 255				; 000000ffH
	mov	eax, 255				; 000000ffH
	cmovg	ebx, eax
	mov	DWORD PTR __d$1$[esp+696], ebx
$LN424@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 469  : 						s32		_s	=	clampr	(iFloor	(fs*255.5f),	0,255);

	mulss	xmm0, xmm1
; File I:\Vitalya\mine\NSProjectX\xrCore\_bitwise.h

; 84   :     int exponent	= (127 + 31) - ((a >> 23) & 0xFF);

	mov	ecx, 158				; 0000009eH
	movss	DWORD PTR _a$2[esp+696], xmm0
	mov	esi, DWORD PTR _a$2[esp+696]
	mov	eax, esi
	sar	eax, 23					; 00000017H

; 85   :     int r			= (((u32)(a) << 8) | (1U << 31)) >> exponent;

	mov	ebx, esi
	movzx	eax, al
	or	ebx, -8388608				; ff800000H
	sub	ecx, eax
	shl	ebx, 8
	shr	ebx, cl

; 86   :     exponent		+= 31-127;
; 87   :     {
; 88   :         int imask	=	(!(((( (1<<(exponent)))-1)>>8)&a));

	mov	eax, 1
	sub	ecx, 96					; 00000060H

; 89   :         exponent	-=	(31-127)+32;
; 90   :         exponent	>>=	31;
; 91   :         a			>>=	31;

	mov	edx, esi
	shl	eax, cl
	dec	eax
	sar	edx, 31					; 0000001fH
	sar	eax, 8
	and	eax, esi
	neg	eax
	sbb	eax, eax
	inc	eax
	and	eax, edx

; 92   :         r			-=	(imask&a);

	sub	ebx, eax
	lea	eax, DWORD PTR [ecx+64]
	sar	eax, 31					; 0000001fH

; 93   :         r			&=	exponent;

	and	ebx, eax
	xor	ebx, edx
; File I:\Vitalya\mine\NSProjectX\xrCore\vector.h

; 96   : 	if		( val<_low	)	return _low; 

	jge	SHORT $LN430@CRenderTar
	xor	ebx, ebx
	jmp	SHORT $LN432@CRenderTar
$LN430@CRenderTar:

; 97   : 	else if	( val>_high )	return _high;

	cmp	ebx, 255				; 000000ffH
	mov	eax, 255				; 000000ffH
	cmovg	ebx, eax
$LN432@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 470  : 						if ((y==(TEX_material_LdotH-1)) && (x==(TEX_material_LdotN-1)))	{ _d = 255; _s=255;	}

	mov	edx, DWORD PTR _y$1$[esp+696]
	mov	ecx, DWORD PTR _x$1$[esp+696]
	cmp	edx, 255				; 000000ffH
	jne	SHORT $LN73@CRenderTar
	cmp	ecx, 127				; 0000007fH
	je	SHORT $LN605@CRenderTar
$LN73@CRenderTar:

; 471  : 						*p			=	u16		(_s*256 + _d);

	shl	ebx, 8
	add	ebx, DWORD PTR __d$1$[esp+696]
	mov	WORD PTR [edi+ecx*2], bx
	inc	ecx
	mov	DWORD PTR _x$1$[esp+696], ecx
	cmp	ecx, 128				; 00000080H
	jae	SHORT $LN604@CRenderTar

; 434  : 				{
; 435  : 					for (u32 x=0; x<TEX_material_LdotN; x++)

	fld	DWORD PTR __real@3c010204
	fld	DWORD PTR __real@3d000000
	mov	ebx, DWORD PTR _slice$1$[esp+696]
	jmp	$LN622@CRenderTar
$LN605@CRenderTar:

; 470  : 						if ((y==(TEX_material_LdotH-1)) && (x==(TEX_material_LdotN-1)))	{ _d = 255; _s=255;	}

	mov	eax, 65535				; 0000ffffH
	mov	WORD PTR [edi+ecx*2], ax
$LN604@CRenderTar:

; 432  : 			{
; 433  : 				for (u32 y=0; y<TEX_material_LdotH; y++)

	fld	DWORD PTR __real@3c010204
	inc	edx
	fld	DWORD PTR __real@3d000000
	fld	DWORD PTR __real@3b808081
	fld	DWORD PTR __real@33d6bf95
	mov	ebx, DWORD PTR _slice$1$[esp+696]
	mov	DWORD PTR _y$1$[esp+696], edx
	cmp	edx, 256				; 00000100H
	jb	$LN625@CRenderTar
	fstp	ST(3)
	inc	ebx
	mov	DWORD PTR _slice$1$[esp+696], ebx
	fstp	ST(1)
	fstp	ST(0)
	fstp	ST(0)
	fld	DWORD PTR __real@3c010204
	fld	DWORD PTR __real@3d000000
	fld	DWORD PTR __real@3b808081
	fld	DWORD PTR __real@33d6bf95
	cmp	ebx, 4
	jb	$LN628@CRenderTar

; 472  : 					}
; 473  : 				}
; 474  : 			}
; 475  : 			R_CHK		(t_material_surf->UnlockBox	(0));

	mov	eax, DWORD PTR _this$1$[esp+696]
	fstp	ST(3)
	fstp	ST(1)
	push	0
	fstp	ST(0)
	mov	eax, DWORD PTR [eax+180]
	fstp	ST(0)
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+80]
	cmp	BYTE PTR ?ignore_always@?EG@???0CRenderTarget@@QAE@XZ@4_NA, 0
	mov	esi, DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
	jne	SHORT $LN28@CRenderTar
	test	eax, eax
	jns	SHORT $LN28@CRenderTar
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?EG@???0CRenderTarget@@QAE@XZ@4_NA
	push	OFFSET ??_C@_0BN@OGOPBPDE@CRenderTarget?3?3CRenderTarget@
	push	475					; 000001dbH
	push	OFFSET ??_C@_0EE@NHEHFFIH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0BP@IACMIIEN@t_material_surf?9?$DOUnlockBox?5?$CI0?$CJ@
	push	eax
	call	esi
$LN28@CRenderTar:

; 476  : 			// #ifdef DEBUG
; 477  : 			// R_CHK	(D3DXSaveTextureToFile	("x:\\r2_material.dds",D3DXIFF_DDS,t_material_surf,0));
; 478  : 			// #endif
; 479  : 		}
; 480  : 
; 481  : 		// Build noise table
; 482  : 		if (1)
; 483  : 		{
; 484  : 			// Surfaces
; 485  : 			D3DLOCKED_RECT				R[TEX_jitter_count];
; 486  : 			for (int it=0; it<TEX_jitter_count; it++)

	lea	eax, DWORD PTR _R$17[esp+696]
	xor	edi, edi
	mov	DWORD PTR tv4915[esp+696], eax
	jmp	SHORT $LN33@CRenderTar
$LL608@CRenderTar:
	mov	esi, DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
$LN33@CRenderTar:

; 487  : 			{
; 488  : 				string_path					name;
; 489  : 				sprintf						(name,"%s%d",r2_jitter,it);

	push	edi
	push	OFFSET ??_C@_0O@KHOLBHBB@$user$jitter_@
	lea	eax, DWORD PTR _name$18[esp+704]
	push	OFFSET ??_C@_04HGGBINEM@?$CFs?$CFd@
	push	eax
	call	_sprintf

; 490  : 				R_CHK	(D3DXCreateTexture	(HW.pDevice,TEX_jitter,TEX_jitter,1,0,D3DFMT_Q8W8V8U8,D3DPOOL_MANAGED,&t_noise_surf[it]));

	mov	ebx, DWORD PTR ___t$1$[esp+712]
	add	esp, 16					; 00000010H
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	add	ebx, -16				; fffffff0H
	push	ebx
	push	1
	push	63					; 0000003fH
	push	0
	push	1
	push	64					; 00000040H
	push	64					; 00000040H
	push	DWORD PTR [eax+8]
	call	DWORD PTR __imp__D3DXCreateTexture@32
	cmp	BYTE PTR ?ignore_always@?EP@???0CRenderTarget@@QAE@XZ@4_NA, 0
	jne	SHORT $LN34@CRenderTar
	test	eax, eax
	jns	SHORT $LN34@CRenderTar
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?EP@???0CRenderTarget@@QAE@XZ@4_NA
	push	OFFSET ??_C@_0BN@OGOPBPDE@CRenderTarget?3?3CRenderTarget@
	push	490					; 000001eaH
	push	OFFSET ??_C@_0EE@NHEHFFIH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0GL@EBAMPPPG@D3DXCreateTexture?5?$CIHW?4pDevice?0T@
	push	eax
	call	esi
$LN34@CRenderTar:

; 491  : 				t_noise[it]					= Device.Resources->_CreateTexture	(name);

	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	lea	eax, DWORD PTR _name$18[esp+696]
	push	eax
	mov	ecx, DWORD PTR [ecx+432]
	call	DWORD PTR __imp_?_CreateTexture@CResourceManager@@QAEPAVCTexture@@PBD@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 62   : 						resptr_core		(T * p, bool add_ref = true) 					{	p_ = p;	if(add_ref)	_inc(); }

	mov	esi, eax
	mov	DWORD PTR $T12[esp+696], esi

; 43   : 	void				_inc	()									{	if (0==p_) return;	p_->dwReference++;														}

	test	esi, esi
	je	SHORT $LN448@CRenderTar
	inc	DWORD PTR [esi+4]
	mov	esi, DWORD PTR $T12[esp+696]

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	test	esi, esi

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	je	SHORT $LN448@CRenderTar
	inc	DWORD PTR [esi+4]
$LN448@CRenderTar:
	mov	ecx, DWORD PTR ___t$1$[esp+696]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
	mov	eax, DWORD PTR ___t$1$[esp+696]

; 64   : 						~resptr_core	()												{	_dec();						}

	lea	ecx, DWORD PTR $T12[esp+696]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	mov	DWORD PTR [eax], esi

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 492  : 				t_noise[it]->surface_set	(t_noise_surf[it]);

	mov	eax, DWORD PTR ___t$1$[esp+696]
	push	DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?surface_set@CTexture@@QAEXPAUIDirect3DBaseTexture9@@@Z

; 493  : 				R_CHK						(t_noise_surf[it]->LockRect	(0,&R[it],0,0));

	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR tv4915[esp+696]
	push	0
	push	0
	mov	ecx, DWORD PTR [eax]
	push	esi
	push	0
	push	eax
	call	DWORD PTR [ecx+76]
	cmp	BYTE PTR ?ignore_always@?FD@???0CRenderTarget@@QAE@XZ@4_NA, 0
	jne	SHORT $LN37@CRenderTar
	test	eax, eax
	jns	SHORT $LN37@CRenderTar
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?FD@???0CRenderTarget@@QAE@XZ@4_NA
	push	OFFSET ??_C@_0BN@OGOPBPDE@CRenderTarget?3?3CRenderTarget@
	push	493					; 000001edH
	push	OFFSET ??_C@_0EE@NHEHFFIH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0CK@KNPHOOHO@t_noise_surf?$FLit?$FN?9?$DOLockRect?5?$CI0?0?$CG@
	push	eax
	call	DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
$LN37@CRenderTar:

; 476  : 			// #ifdef DEBUG
; 477  : 			// R_CHK	(D3DXSaveTextureToFile	("x:\\r2_material.dds",D3DXIFF_DDS,t_material_surf,0));
; 478  : 			// #endif
; 479  : 		}
; 480  : 
; 481  : 		// Build noise table
; 482  : 		if (1)
; 483  : 		{
; 484  : 			// Surfaces
; 485  : 			D3DLOCKED_RECT				R[TEX_jitter_count];
; 486  : 			for (int it=0; it<TEX_jitter_count; it++)

	add	DWORD PTR ___t$1$[esp+696], 4
	inc	edi
	add	esi, 8
	mov	DWORD PTR tv4915[esp+696], esi
	cmp	edi, 4
	jb	$LL608@CRenderTar

; 494  : 			}
; 495  : 
; 496  : 			// Fill it,
; 497  : 			for (u32 y=0; y<TEX_jitter; y++)

	mov	DWORD PTR _y$1$[esp+696], 0
$LL42@CRenderTar:

; 498  : 			{
; 499  : 				for (u32 x=0; x<TEX_jitter; x++)

	mov	DWORD PTR tv4892[esp+696], 0
	npad	6
$LL45@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 21   : 	svector() : count(0) 

	xor	edi, edi
	mov	DWORD PTR _samples$15[esp+760], edi
	npad	10
$LL453@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	mov	ecx, DWORD PTR __imp_?Random@@3VCRandom@@A
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	mov	edx, eax
	and	edx, -2147483393			; 800000ffH
	jns	SHORT $LN631@CRenderTar
	dec	edx
	or	edx, -256				; ffffff00H
	inc	edx
$LN631@CRenderTar:
	mov	ecx, DWORD PTR __imp_?Random@@3VCRandom@@A
	mov	DWORD PTR _test$2$[esp+696], edx
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	mov	ebx, eax
	and	ebx, -2147483393			; 800000ffH
	jns	SHORT $LN632@CRenderTar
	dec	ebx
	or	ebx, -256				; ffffff00H
	inc	ebx
$LN632@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 165  : 		for (u32 t=0; t<samples.size(); t++)

	xor	esi, esi
	test	edi, edi
	je	SHORT $LN603@CRenderTar
$LL457@CRenderTar:

; 167  : 			int		dist	= _abs(test.x-samples[t].x)+_abs(test.y-samples[t].y);

	mov	eax, edx
	sub	eax, DWORD PTR _samples$15[esp+esi*8+700]
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 157  : IC s32		_abs	(s32 x)			{ return (x>=0)? x : s32(-x); }

	cdq
	mov	ecx, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 167  : 			int		dist	= _abs(test.x-samples[t].x)+_abs(test.y-samples[t].y);

	mov	eax, ebx
	sub	eax, DWORD PTR _samples$15[esp+esi*8+696]
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 157  : IC s32		_abs	(s32 x)			{ return (x>=0)? x : s32(-x); }

	xor	ecx, edx
	sub	ecx, edx
	cdq
	xor	eax, edx
	sub	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 167  : 			int		dist	= _abs(test.x-samples[t].x)+_abs(test.y-samples[t].y);

	add	ecx, eax

; 168  : 			if (dist<32)	{

	cmp	ecx, 32					; 00000020H
	jl	SHORT $LN462@CRenderTar

; 165  : 		for (u32 t=0; t<samples.size(); t++)

	mov	edx, DWORD PTR _test$2$[esp+696]
	inc	esi
	cmp	esi, edi
	jb	SHORT $LL457@CRenderTar
$LN603@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 35   : 	IC void		push_back(value_type e)		{ VERIFY(count<dim); array[count++]=e;	}

	mov	DWORD PTR _samples$15[esp+edi*8+696], ebx
	mov	DWORD PTR _samples$15[esp+edi*8+700], edx
	mov	edi, DWORD PTR _samples$15[esp+760]
	inc	edi
	mov	DWORD PTR _samples$15[esp+760], edi
$LN462@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 160  : 	while (samples.size()<elem_count*2)

	cmp	edi, 8
	jb	$LL453@CRenderTar
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	mov	eax, DWORD PTR _samples$15[esp+704]
	movzx	edi, BYTE PTR _samples$15[esp+696]
	shl	eax, 8
	or	edi, eax
	movzx	esi, BYTE PTR _samples$15[esp+712]
	movzx	eax, BYTE PTR _samples$15[esp+700]
	movzx	edx, BYTE PTR _samples$15[esp+728]
	shl	edi, 8
	or	edi, eax
	movzx	ecx, BYTE PTR _samples$15[esp+744]
	movzx	eax, BYTE PTR _samples$15[esp+708]
	shl	edi, 8
	or	edi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 506  : 								*p	=	data	[it];

	mov	ebx, DWORD PTR tv4892[esp+696]
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	mov	eax, DWORD PTR _samples$15[esp+720]
	shl	eax, 8
	or	esi, eax
	movzx	eax, BYTE PTR _samples$15[esp+716]
	shl	esi, 8
	or	esi, eax
	movzx	eax, BYTE PTR _samples$15[esp+724]
	shl	esi, 8
	or	esi, eax
	mov	eax, DWORD PTR _samples$15[esp+736]
	shl	eax, 8
	or	edx, eax
	movzx	eax, BYTE PTR _samples$15[esp+732]
	shl	edx, 8
	or	edx, eax
	movzx	eax, BYTE PTR _samples$15[esp+740]
	shl	edx, 8
	or	edx, eax
	mov	eax, DWORD PTR _samples$15[esp+752]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _samples$15[esp+748]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _samples$15[esp+756]
	shl	ecx, 8
	or	ecx, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 505  : 						u32*	p	=	(u32*)	(LPBYTE (R[it].pBits) + y*R[it].Pitch + x*4);

	mov	eax, DWORD PTR _y$1$[esp+696]
	imul	eax, DWORD PTR _R$17[esp+696]
	add	eax, DWORD PTR _R$17[esp+700]

; 506  : 								*p	=	data	[it];

	mov	DWORD PTR [eax+ebx], edi
	mov	edi, DWORD PTR _y$1$[esp+696]
	mov	eax, edi
	imul	eax, DWORD PTR _R$17[esp+704]
	add	eax, DWORD PTR _R$17[esp+708]
	mov	DWORD PTR [eax+ebx], esi
	mov	eax, edi
	imul	eax, DWORD PTR _R$17[esp+712]
	add	eax, DWORD PTR _R$17[esp+716]
	mov	DWORD PTR [eax+ebx], edx
	mov	eax, edi
	imul	eax, DWORD PTR _R$17[esp+720]
	add	eax, DWORD PTR _R$17[esp+724]
	mov	DWORD PTR [eax+ebx], ecx
	add	ebx, 4
	mov	DWORD PTR tv4892[esp+696], ebx
	cmp	ebx, 256				; 00000100H
	jb	$LL45@CRenderTar

; 494  : 			}
; 495  : 
; 496  : 			// Fill it,
; 497  : 			for (u32 y=0; y<TEX_jitter; y++)

	inc	edi
	mov	DWORD PTR _y$1$[esp+696], edi
	cmp	edi, 64					; 00000040H
	jb	$LL42@CRenderTar

; 507  : 					}
; 508  : 				}
; 509  : 			}
; 510  : 			for (int it=0; it<TEX_jitter_count; it++)	{

	mov	ebx, DWORD PTR _this$1$[esp+696]
	mov	edi, 4
	lea	esi, DWORD PTR [ebx+188]
$LL51@CRenderTar:

; 511  : 				R_CHK						(t_noise_surf[it]->UnlockRect(0));

	mov	eax, DWORD PTR [esi]
	push	0
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+80]
	cmp	BYTE PTR ?ignore_always@?FP@???0CRenderTarget@@QAE@XZ@4_NA, 0
	jne	SHORT $LN52@CRenderTar
	test	eax, eax
	jns	SHORT $LN52@CRenderTar
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?FP@???0CRenderTarget@@QAE@XZ@4_NA
	push	OFFSET ??_C@_0BN@OGOPBPDE@CRenderTarget?3?3CRenderTarget@
	push	511					; 000001ffH
	push	OFFSET ??_C@_0EE@NHEHFFIH@I?3?2Vitalya?2mine?2NSProjectX?2laye@
	push	OFFSET ??_C@_0CA@DNFBMEHN@t_noise_surf?$FLit?$FN?9?$DOUnlockRect?$CI0?$CJ@
	push	eax
	call	DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
$LN52@CRenderTar:

; 507  : 					}
; 508  : 				}
; 509  : 			}
; 510  : 			for (int it=0; it<TEX_jitter_count; it++)	{

	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL51@CRenderTar

; 512  : 			}
; 513  : 		}
; 514  : 	}
; 515  : 
; 516  : 	// PP
; 517  : 	s_postprocess.create				("postprocess");

	mov	esi, DWORD PTR __imp_?create@resptrcode_shader@@QAEXPBD000@Z
	lea	ecx, DWORD PTR [ebx+372]
	push	edi
	push	edi
	push	edi
	push	OFFSET ??_C@_0M@HNLHGNFF@postprocess@
	call	esi

; 518  : 	g_postprocess.create				(D3DFVF_XYZRHW|D3DFVF_DIFFUSE|D3DFVF_SPECULAR|D3DFVF_TEX3,RCache.Vertex.Buffer(),RCache.QuadIB);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [ebx+376]
	mov	edi, DWORD PTR __imp_?create@resptrcode_geom@@QAEXIPAUIDirect3DVertexBuffer9@@PAUIDirect3DIndexBuffer9@@@Z
	push	DWORD PTR [eax+40]
	push	DWORD PTR [eax]
	push	964					; 000003c4H
	call	edi

; 519  : 
; 520  : 	// Menu
; 521  : 	s_menu.create						("distort");

	push	0
	push	0
	push	0
	push	OFFSET ??_C@_07CONFFJBI@distort@
	lea	ecx, DWORD PTR [ebx+380]
	call	esi

; 522  : 	g_menu.create						(FVF::F_TL,RCache.Vertex.Buffer(),RCache.QuadIB);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	ecx, DWORD PTR [ebx+384]
	push	DWORD PTR [eax+40]
	push	DWORD PTR [eax]
	push	324					; 00000144H
	call	edi

; 523  : 
; 524  : 	// 
; 525  : 	dwWidth		= Device.dwWidth;

	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A

; 526  : 	dwHeight	= Device.dwHeight;
; 527  : }

	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax+256]
	mov	DWORD PTR [ebx+4], eax
	mov	eax, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [eax+260]
	mov	DWORD PTR [ebx+8], eax
	mov	eax, ebx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN606@CRenderTar:
	DD	$LN68@CRenderTar
	DD	$LN69@CRenderTar
	DD	$LN70@CRenderTar
	DD	$LN71@CRenderTar
??0CRenderTarget@@QAE@XZ ENDP				; CRenderTarget::CRenderTarget
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
_TEXT	SEGMENT
__1$ = 8						; size = 4
__2$ = 12						; size = 4
__3$ = 16						; size = 4
_zb$ = 20						; size = 4
?u_setrt@CRenderTarget@@QAEXABV?$resptr_core@VCRT@@Uresptrcode_crt@@@@00PAUIDirect3DSurface9@@@Z PROC ; CRenderTarget::u_setrt
; _this$ = ecx

; 18   : 	VERIFY									(_1);
; 19   : 	dwWidth									= _1->dwWidth;

	mov	edx, DWORD PTR __1$[esp-4]
	mov	eax, DWORD PTR [edx]
	mov	eax, DWORD PTR [eax+24]
	mov	DWORD PTR [ecx+4], eax

; 20   : 	dwHeight								= _1->dwHeight;

	mov	eax, DWORD PTR [edx]
	mov	eax, DWORD PTR [eax+28]
	mov	DWORD PTR [ecx+8], eax
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	mov	ecx, DWORD PTR [edx]
	xor	edx, edx
	mov	eax, DWORD PTR __imp_?_get@?$resptr_base@VCRT@@@@QBEPAVCRT@@XZ
	test	ecx, ecx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 21   : 	if (_1) RCache.set_RT(_1->pRT,	0); else RCache.set_RT(NULL,0);

	push	edx
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	cmove	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 21   : 	if (_1) RCache.set_RT(_1->pRT,	0); else RCache.set_RT(NULL,0);

	test	eax, eax
	je	SHORT $LN5@u_setrt
	push	DWORD PTR [ecx+16]
	jmp	SHORT $LN18@u_setrt
$LN5@u_setrt:
	push	0
$LN18@u_setrt:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z
	mov	eax, DWORD PTR __2$[esp-4]
	xor	edx, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 22   : 	if (_2) RCache.set_RT(_2->pRT,	1); else RCache.set_RT(NULL,1);

	push	1
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	mov	eax, DWORD PTR __imp_?_get@?$resptr_base@VCRT@@@@QBEPAVCRT@@XZ
	cmove	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 22   : 	if (_2) RCache.set_RT(_2->pRT,	1); else RCache.set_RT(NULL,1);

	test	eax, eax
	je	SHORT $LN7@u_setrt
	push	DWORD PTR [ecx+16]
	jmp	SHORT $LN19@u_setrt
$LN7@u_setrt:
	push	0
$LN19@u_setrt:
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z
	mov	eax, DWORD PTR __3$[esp-4]
	xor	edx, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 23   : 	if (_3) RCache.set_RT(_3->pRT,	2); else RCache.set_RT(NULL,2);

	push	2
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	mov	eax, DWORD PTR __imp_?_get@?$resptr_base@VCRT@@@@QBEPAVCRT@@XZ
	cmove	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 23   : 	if (_3) RCache.set_RT(_3->pRT,	2); else RCache.set_RT(NULL,2);

	test	eax, eax
	je	SHORT $LN9@u_setrt
	push	DWORD PTR [ecx+16]
	jmp	SHORT $LN20@u_setrt
$LN9@u_setrt:
	push	0
$LN20@u_setrt:

; 24   : 	RCache.set_ZB							(zb);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z
	push	DWORD PTR _zb$[esp-4]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_ZB@CBackend@@QAEXPAUIDirect3DSurface9@@@Z

; 25   : //	RImplementation.rmNormal				();
; 26   : }

	ret	16					; 00000010H
?u_setrt@CRenderTarget@@QAEXABV?$resptr_core@VCRT@@Uresptrcode_crt@@@@00PAUIDirect3DSurface9@@@Z ENDP ; CRenderTarget::u_setrt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
_TEXT	SEGMENT
_W$ = 8							; size = 4
_H$ = 12						; size = 4
__1$ = 16						; size = 4
__2$dead$ = 20						; size = 4
__3$dead$ = 24						; size = 4
_zb$ = 28						; size = 4
?u_setrt@CRenderTarget@@QAEXIIPAUIDirect3DSurface9@@000@Z PROC ; CRenderTarget::u_setrt
; _this$ = ecx

; 30   : 	VERIFY									(_1);
; 31   : 	dwWidth									= W;

	mov	eax, DWORD PTR _W$[esp-4]
	mov	DWORD PTR [ecx+4], eax

; 32   : 	dwHeight								= H;

	mov	eax, DWORD PTR _H$[esp-4]

; 33   : 	VERIFY									(_1);
; 34   : 	RCache.set_RT							(_1,	0);

	push	0
	push	DWORD PTR __1$[esp]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 35   : 	RCache.set_RT							(_2,	1);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	1
	push	0
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 36   : 	RCache.set_RT							(_3,	2);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	2
	push	0
	call	DWORD PTR __imp_?set_RT@CBackend@@QAEXPAUIDirect3DSurface9@@I@Z

; 37   : 	RCache.set_ZB							(zb);

	push	DWORD PTR _zb$[esp-4]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	call	DWORD PTR __imp_?set_ZB@CBackend@@QAEXPAUIDirect3DSurface9@@@Z

; 38   : //	RImplementation.rmNormal				();
; 39   : }

	ret	24					; 00000018H
?u_setrt@CRenderTarget@@QAEXIIPAUIDirect3DSurface9@@000@Z ENDP ; CRenderTarget::u_setrt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
_TEXT	SEGMENT
tv678 = -12						; size = 4
__h$ = -12						; size = 4
tv680 = -8						; size = 4
__w$ = -8						; size = 4
_Offset$ = -4						; size = 4
_common_stencil$ = 8					; size = 4
?u_stencil_optimize@CRenderTarget@@QAEXH@Z PROC		; CRenderTarget::u_stencil_optimize
; _this$ = ecx

; 42   : {

	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
	mov	edi, ecx

; 43   : 	VERIFY	(RImplementation.o.nvstencil);
; 44   : 	RCache.set_ColorWriteEnable	(FALSE);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	0
	call	DWORD PTR __imp_?set_ColorWriteEnable@CBackend@@QAEXI@Z

; 45   : 	u32		Offset;
; 46   : 	float	_w					= float(Device.dwWidth);

	mov	edx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [edx+256]
	fild	DWORD PTR [edx+256]
	test	eax, eax
	jns	SHORT $LN54@u_stencil_
	fadd	DWORD PTR __real@4f800000
$LN54@u_stencil_:

; 47   : 	float	_h					= float(Device.dwHeight);

	mov	eax, DWORD PTR [edx+260]
	fstp	DWORD PTR __w$[esp+20]
	fild	DWORD PTR [edx+260]
	test	eax, eax
	jns	SHORT $LN55@u_stencil_
	fadd	DWORD PTR __real@4f800000
$LN55@u_stencil_:

; 48   : 	u32		C					= color_rgba	(255,255,255,255);
; 49   : 	float	eps					= EPS_S;
; 50   : 	FVF::TL* pv					= (FVF::TL*) RCache.Vertex.Lock	(4,g_combine->vb_stride,Offset);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	lea	eax, DWORD PTR _Offset$[esp+20]
	push	eax
	mov	eax, DWORD PTR [edi+328]
	fstp	DWORD PTR __h$[esp+24]
	push	DWORD PTR [eax+20]
	push	4
	call	DWORD PTR __imp_?Lock@_VertexStream@@QAEPAXIIAAI@Z

; 51   : 	pv->set						(eps,			float(_h+eps),	eps,	1.f, C, 0, 0);	pv++;

	movss	xmm2, DWORD PTR __h$[esp+20]

; 52   : 	pv->set						(eps,			eps,			eps,	1.f, C, 0, 0);	pv++;
; 53   : 	pv->set						(float(_w+eps),	float(_h+eps),	eps,	1.f, C, 0, 0);	pv++;

	movss	xmm0, DWORD PTR __w$[esp+20]
	addss	xmm2, DWORD PTR __real@33d6bf95
	addss	xmm0, DWORD PTR __real@33d6bf95
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	mov	DWORD PTR [eax], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+8], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+12], 1065353216		; 3f800000H
	movss	DWORD PTR [eax+4], xmm2
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h

; 91   : 			p.set(x, y, z, w); color = c;	uv.x = u; uv.y = v;

	mov	DWORD PTR [eax+16], -1
	mov	DWORD PTR [eax+20], 0
	mov	DWORD PTR [eax+24], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	mov	DWORD PTR [eax+28], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+32], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+36], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+40], 1065353216		; 3f800000H
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h

; 91   : 			p.set(x, y, z, w); color = c;	uv.x = u; uv.y = v;

	mov	DWORD PTR [eax+44], -1
	mov	DWORD PTR [eax+48], 0
	mov	DWORD PTR [eax+52], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [eax+56], xmm0
	movss	DWORD PTR [eax+60], xmm2
	mov	DWORD PTR [eax+64], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+68], 1065353216		; 3f800000H
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h

; 91   : 			p.set(x, y, z, w); color = c;	uv.x = u; uv.y = v;

	mov	DWORD PTR [eax+72], -1
	mov	DWORD PTR [eax+76], 0
	mov	DWORD PTR [eax+80], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [eax+84], xmm0
	mov	DWORD PTR [eax+88], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+92], 869711765		; 33d6bf95H
	mov	DWORD PTR [eax+96], 1065353216		; 3f800000H
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h

; 91   : 			p.set(x, y, z, w); color = c;	uv.x = u; uv.y = v;

	mov	DWORD PTR [eax+100], -1
	mov	DWORD PTR [eax+104], 0
	mov	DWORD PTR [eax+108], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 55   : 	RCache.Vertex.Unlock		(4,g_combine->vb_stride);

	mov	eax, DWORD PTR [edi+328]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
	push	DWORD PTR [eax+20]
	push	4
	call	DWORD PTR __imp_?Unlock@_VertexStream@@QAEXII@Z

; 56   : 	RCache.set_CullMode			(CULL_NONE	);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 266  : 	if (cull_mode != _mode) { cull_mode = _mode;			CHK_DX(HW.pDevice->SetRenderState(D3DRS_CULLMODE, _mode)); }

	cmp	DWORD PTR [ecx+8916], 1
	je	SHORT $LN28@u_stencil_
	mov	DWORD PTR [ecx+8916], 1
	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	1
	push	22					; 00000016H
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+228]
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
$LN28@u_stencil_:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 57   : 	if (common_stencil)			RCache.set_Stencil	(TRUE,D3DCMP_LESSEQUAL,dwLightMarkerID,0xff,0x00);	// keep/keep/keep

	cmp	DWORD PTR _common_stencil$[esp+16], 0
	je	SHORT $LN5@u_stencil_
	push	1
	push	1
	push	1
	push	0
	push	255					; 000000ffH
	push	DWORD PTR [edi+16]
	push	4
	push	1
	call	DWORD PTR __imp_?set_Stencil@CBackend@@QAEXIIIIIIII@Z
	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
$LN5@u_stencil_:

; 58   : 	RCache.set_Element			(s_occq->E[1]	);

	mov	eax, DWORD PTR [edi+220]
	push	0
	add	eax, 12					; 0000000cH
	push	eax
	call	DWORD PTR __imp_?set_Element@CBackend@@QAEXAAV?$resptr_core@UShaderElement@@V?$resptr_base@UShaderElement@@@@@@I@Z
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 70   : 	T &					operator*() const												{	return *p_;	}

	mov	edi, DWORD PTR [edi+328]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 59   : 	RCache.set_Geometry			(g_combine		);

	mov	esi, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 224  : 	set_Format(_geom->dcl._get()->dcl);

	mov	eax, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [eax+8]

; 131  : 	if (decl != _decl)

	cmp	DWORD PTR [esi+592], edx
	je	SHORT $LN39@u_stencil_

; 132  : 	{
; 133  : 		PGO(Msg("PGO:v_format:%x", _decl));
; 134  : #ifdef DEBUG
; 135  : 		stat.decl++;
; 136  : #endif
; 137  : 		decl = _decl;

	mov	DWORD PTR [esi+592], edx

; 138  : 		CHK_DX(HW.pDevice->SetVertexDeclaration(decl));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+348]
$LN39@u_stencil_:

; 225  : 	set_Vertices(_geom->vb, _geom->vb_stride);

	mov	edx, DWORD PTR [edi+20]
	push	ebx
	mov	ebx, DWORD PTR [edi+12]

; 172  : 	if ((vb != _vb) || (vb_stride != _vb_stride))

	cmp	DWORD PTR [esi+596], ebx
	jne	SHORT $LN43@u_stencil_
	cmp	DWORD PTR [esi+604], edx
	je	SHORT $LN42@u_stencil_
$LN43@u_stencil_:

; 173  : 	{
; 174  : 		PGO(Msg("PGO:VB:%x,%d", _vb, _vb_stride));
; 175  : #ifdef DEBUG
; 176  : 		stat.vb++;
; 177  : #endif
; 178  : 		vb = _vb;

	mov	DWORD PTR [esi+596], ebx

; 179  : 		vb_stride = _vb_stride;

	mov	DWORD PTR [esi+604], edx

; 180  : 		CHK_DX(HW.pDevice->SetStreamSource(0, vb, 0, vb_stride));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	push	0
	push	ebx
	mov	eax, DWORD PTR [eax+8]
	push	0
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+400]
$LN42@u_stencil_:

; 226  : 	set_Indices(_geom->ib);

	mov	edx, DWORD PTR [edi+16]

; 186  : 	if (ib != _ib)

	pop	ebx
	cmp	DWORD PTR [esi+600], edx
	je	SHORT $LN46@u_stencil_

; 187  : 	{
; 188  : 		PGO(Msg("PGO:IB:%x", _ib));
; 189  : #ifdef DEBUG
; 190  : 		stat.ib++;
; 191  : #endif
; 192  : 		ib = _ib;

	mov	DWORD PTR [esi+600], edx

; 193  : 		CHK_DX(HW.pDevice->SetIndices(ib));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	edx
	mov	eax, DWORD PTR [eax+8]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+416]
$LN46@u_stencil_:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 60   : 	RCache.Render				(D3DPT_TRIANGLELIST,Offset,0,4,0,2);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	mov	esi, DWORD PTR _Offset$[esp+20]
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 202  : 	constants.flush();

	lea	ecx, DWORD PTR [eax+608]
	inc	DWORD PTR [eax+9024]
	add	DWORD PTR [eax+9020], 4
	add	DWORD PTR [eax+9016], 2
; File I:\Vitalya\mine\NSProjectX\xrEngine\r_constants_cache.h

; 172  : 		if (a_pixel.b_dirty || a_vertex.b_dirty)	flush_cache();

	cmp	DWORD PTR [ecx+4112], 0
	jne	SHORT $LN52@u_stencil_
	cmp	DWORD PTR [ecx+8240], 0
	je	SHORT $LN51@u_stencil_
$LN52@u_stencil_:
	call	DWORD PTR __imp_?flush_cache@R_constants@@QAEXXZ
$LN51@u_stencil_:
; File I:\Vitalya\mine\NSProjectX\xrEngine\R_Backend_Runtime.h

; 203  : 	CHK_DX(HW.pDevice->DrawIndexedPrimitive(T, baseV, startV, countV, startI, PC));

	mov	eax, DWORD PTR __imp_?HW@@3VCHW@@A
	push	2
	push	0
	push	4
	mov	eax, DWORD PTR [eax+8]
	push	0
	push	esi
	push	4
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+328]
	pop	edi
	pop	esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 61   : }

	add	esp, 12					; 0000000cH
	ret	4
?u_stencil_optimize@CRenderTarget@@QAEXH@Z ENDP		; CRenderTarget::u_stencil_optimize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
_TEXT	SEGMENT
tv1361 = -4						; size = 4
tv1324 = -4						; size = 4
tv1317 = -4						; size = 4
tv458 = -4						; size = 4
_m_Texgen$ = 8						; size = 4
?u_compute_texgen_screen@CRenderTarget@@QAEXAAU?$_matrix@M@@@Z PROC ; CRenderTarget::u_compute_texgen_screen
; _this$dead$ = ecx

; 65   : {

	push	ecx

; 66   : 	float	_w						= float(Device.dwWidth);

	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [ecx+256]
	fild	DWORD PTR [ecx+256]
	test	eax, eax
	jns	SHORT $LN8@u_compute_
	fadd	DWORD PTR __real@4f800000
$LN8@u_compute_:

; 68   : 	float	o_w						= (.5f / _w);

	fld	DWORD PTR __real@3f000000
	fld	ST(0)
	mov	eax, DWORD PTR [ecx+260]
	fdivrp	ST(2), ST(0)

; 75   : 		0.5f + o_w,			0.5f + o_h,			0.0f,			1.0f

	fadd	ST(1), ST(0)
	fxch	ST(1)
	fst	DWORD PTR tv1317[esp+4]
	movss	xmm4, DWORD PTR tv1317[esp+4]
	fild	DWORD PTR [ecx+260]
	test	eax, eax
	jns	SHORT $LN9@u_compute_

; 67   : 	float	_h						= float(Device.dwHeight);

	fadd	DWORD PTR __real@4f800000
$LN9@u_compute_:

; 69   : 	float	o_h						= (.5f / _h);

	fdivr	ST(0), ST(2)
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 90   : 		m[1][0] = A.m[0][0] * B.m[1][0] + A.m[1][0] * B.m[1][1] + A.m[2][0] * B.m[1][2] + A.m[3][0] * B.m[1][3];

	movaps	xmm1, xmm4
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 77   : 	m_Texgen.mul	(m_TexelAdjust,RCache.xforms.m_wvp);

	mov	ecx, DWORD PTR __imp_?RCache@@3VCBackend@@A
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 85   : 		m[0][0] = A.m[0][0] * B.m[0][0] + A.m[1][0] * B.m[0][1] + A.m[2][0] * B.m[0][2] + A.m[3][0] * B.m[0][3];

	mov	eax, DWORD PTR _m_Texgen$[esp]

; 90   : 		m[1][0] = A.m[0][0] * B.m[1][0] + A.m[1][0] * B.m[1][1] + A.m[2][0] * B.m[1][2] + A.m[3][0] * B.m[1][3];

	movss	xmm2, DWORD PTR __real@3f000000
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 75   : 		0.5f + o_w,			0.5f + o_h,			0.0f,			1.0f

	fadd	ST(0), ST(2)
	fst	DWORD PTR tv1324[esp+4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 85   : 		m[0][0] = A.m[0][0] * B.m[0][0] + A.m[1][0] * B.m[0][1] + A.m[2][0] * B.m[0][2] + A.m[3][0] * B.m[0][3];

	fld	DWORD PTR [ecx+444]
	fmulp	ST(2), ST(0)
	fld	DWORD PTR [ecx+432]
	fmul	ST(0), ST(3)
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 75   : 		0.5f + o_w,			0.5f + o_h,			0.0f,			1.0f

	movss	xmm3, DWORD PTR tv1324[esp+4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 85   : 		m[0][0] = A.m[0][0] * B.m[0][0] + A.m[1][0] * B.m[0][1] + A.m[2][0] * B.m[0][2] + A.m[3][0] * B.m[0][3];

	faddp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [eax]

; 86   : 		m[0][1] = A.m[0][1] * B.m[0][0] + A.m[1][1] * B.m[0][1] + A.m[2][1] * B.m[0][2] + A.m[3][1] * B.m[0][3];

	fmul	DWORD PTR [ecx+444]
	fld	DWORD PTR [ecx+436]
	fmulp	ST(2), ST(0)
	fsubrp	ST(1), ST(0)
	fstp	DWORD PTR [eax+4]

; 87   : 		m[0][2] = A.m[0][2] * B.m[0][0] + A.m[1][2] * B.m[0][1] + A.m[2][2] * B.m[0][2] + A.m[3][2] * B.m[0][3];

	fld	DWORD PTR [ecx+440]
	fstp	DWORD PTR [eax+8]

; 88   : 		m[0][3] = A.m[0][3] * B.m[0][0] + A.m[1][3] * B.m[0][1] + A.m[2][3] * B.m[0][2] + A.m[3][3] * B.m[0][3];

	fld	DWORD PTR [ecx+444]
	fstp	DWORD PTR [eax+12]

; 90   : 		m[1][0] = A.m[0][0] * B.m[1][0] + A.m[1][0] * B.m[1][1] + A.m[2][0] * B.m[1][2] + A.m[3][0] * B.m[1][3];

	mulss	xmm1, DWORD PTR [ecx+460]
	movss	xmm0, DWORD PTR [ecx+448]
	mulss	xmm0, xmm2
	addss	xmm1, xmm0
	movss	DWORD PTR [eax+16], xmm1

; 91   : 		m[1][1] = A.m[0][1] * B.m[1][0] + A.m[1][1] * B.m[1][1] + A.m[2][1] * B.m[1][2] + A.m[3][1] * B.m[1][3];

	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [ecx+460]
	movss	xmm0, DWORD PTR [ecx+452]
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movss	DWORD PTR [eax+20], xmm1

; 92   : 		m[1][2] = A.m[0][2] * B.m[1][0] + A.m[1][2] * B.m[1][1] + A.m[2][2] * B.m[1][2] + A.m[3][2] * B.m[1][3];
; 93   : 		m[1][3] = A.m[0][3] * B.m[1][0] + A.m[1][3] * B.m[1][1] + A.m[2][3] * B.m[1][2] + A.m[3][3] * B.m[1][3];
; 94   : 
; 95   : 		m[2][0] = A.m[0][0] * B.m[2][0] + A.m[1][0] * B.m[2][1] + A.m[2][0] * B.m[2][2] + A.m[3][0] * B.m[2][3];

	movaps	xmm1, xmm4
	fld	DWORD PTR [ecx+456]
	fstp	DWORD PTR [eax+24]
	fld	DWORD PTR [ecx+460]
	fstp	DWORD PTR [eax+28]
	mulss	xmm1, DWORD PTR [ecx+476]
	movss	xmm0, DWORD PTR [ecx+464]
	mulss	xmm0, xmm2
	addss	xmm1, xmm0
	movss	DWORD PTR [eax+32], xmm1

; 96   : 		m[2][1] = A.m[0][1] * B.m[2][0] + A.m[1][1] * B.m[2][1] + A.m[2][1] * B.m[2][2] + A.m[3][1] * B.m[2][3];

	movaps	xmm1, xmm3
	movss	xmm0, DWORD PTR [ecx+468]
	mulss	xmm1, DWORD PTR [ecx+476]
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movss	DWORD PTR [eax+36], xmm1

; 97   : 		m[2][2] = A.m[0][2] * B.m[2][0] + A.m[1][2] * B.m[2][1] + A.m[2][2] * B.m[2][2] + A.m[3][2] * B.m[2][3];

	fld	DWORD PTR [ecx+472]
	fstp	DWORD PTR [eax+40]

; 98   : 		m[2][3] = A.m[0][3] * B.m[2][0] + A.m[1][3] * B.m[2][1] + A.m[2][3] * B.m[2][2] + A.m[3][3] * B.m[2][3];

	fld	DWORD PTR [ecx+476]
	fstp	DWORD PTR [eax+44]

; 99   : 
; 100  : 		m[3][0] = A.m[0][0] * B.m[3][0] + A.m[1][0] * B.m[3][1] + A.m[2][0] * B.m[3][2] + A.m[3][0] * B.m[3][3];

	movss	xmm0, DWORD PTR [ecx+480]
	mulss	xmm4, DWORD PTR [ecx+492]
	mulss	xmm0, xmm2
	addss	xmm4, xmm0
	movss	DWORD PTR [eax+48], xmm4

; 101  : 		m[3][1] = A.m[0][1] * B.m[3][0] + A.m[1][1] * B.m[3][1] + A.m[2][1] * B.m[3][2] + A.m[3][1] * B.m[3][3];

	movss	xmm0, DWORD PTR [ecx+484]
	mulss	xmm3, DWORD PTR [ecx+492]
	mulss	xmm0, xmm2
	subss	xmm3, xmm0
	movss	DWORD PTR [eax+52], xmm3

; 102  : 		m[3][2] = A.m[0][2] * B.m[3][0] + A.m[1][2] * B.m[3][1] + A.m[2][2] * B.m[3][2] + A.m[3][2] * B.m[3][3];

	fld	DWORD PTR [ecx+488]
	fstp	DWORD PTR [eax+56]

; 103  : 		m[3][3] = A.m[0][3] * B.m[3][0] + A.m[1][3] * B.m[3][1] + A.m[2][3] * B.m[3][2] + A.m[3][3] * B.m[3][3];

	fld	DWORD PTR [ecx+492]
	fstp	DWORD PTR [eax+60]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 78   : }

	pop	ecx
	ret	4
?u_compute_texgen_screen@CRenderTarget@@QAEXAAU?$_matrix@M@@@Z ENDP ; CRenderTarget::u_compute_texgen_screen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
_TEXT	SEGMENT
tv2140 = -68						; size = 4
_scale_Y$ = -68						; size = 4
_m_TexelAdjust$ = -64					; size = 64
tv2142 = 8						; size = 4
_scale_X$ = 8						; size = 4
_m_Texgen_J$ = 8					; size = 4
?u_compute_texgen_jitter@CRenderTarget@@QAEXAAU?$_matrix@M@@@Z PROC ; CRenderTarget::u_compute_texgen_jitter
; _this$dead$ = ecx

; 83   : 	// place into	0..1 space
; 84   : 	Fmatrix			m_TexelAdjust		= 
; 85   : 	{
; 86   : 		0.5f,				0.0f,				0.0f,			0.0f,
; 87   : 		0.0f,				-0.5f,				0.0f,			0.0f,
; 88   : 		0.0f,				0.0f,				1.0f,			0.0f,
; 89   : 		0.5f,				0.5f,				0.0f,			1.0f
; 90   : 	};
; 91   : 	m_Texgen_J.mul	(m_TexelAdjust,RCache.xforms.m_wvp);

	mov	eax, DWORD PTR __imp_?RCache@@3VCBackend@@A
	sub	esp, 72					; 00000048H
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 85   : 		m[0][0] = A.m[0][0] * B.m[0][0] + A.m[1][0] * B.m[0][1] + A.m[2][0] * B.m[0][2] + A.m[3][0] * B.m[0][3];

	mov	edx, DWORD PTR _m_Texgen_J$[esp+68]
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm0, DWORD PTR [eax+432]
	addss	xmm0, DWORD PTR [eax+444]
	mulss	xmm0, xmm2
	movss	DWORD PTR [edx], xmm0

; 86   : 		m[0][1] = A.m[0][1] * B.m[0][0] + A.m[1][1] * B.m[0][1] + A.m[2][1] * B.m[0][2] + A.m[3][1] * B.m[0][3];

	movss	xmm1, DWORD PTR [eax+444]
	movss	xmm0, DWORD PTR [eax+436]
	mulss	xmm0, xmm2
	mulss	xmm1, xmm2
	subss	xmm1, xmm0
	movss	DWORD PTR [edx+4], xmm1

; 87   : 		m[0][2] = A.m[0][2] * B.m[0][0] + A.m[1][2] * B.m[0][1] + A.m[2][2] * B.m[0][2] + A.m[3][2] * B.m[0][3];

	fld	DWORD PTR [eax+440]
	fstp	DWORD PTR [edx+8]

; 88   : 		m[0][3] = A.m[0][3] * B.m[0][0] + A.m[1][3] * B.m[0][1] + A.m[2][3] * B.m[0][2] + A.m[3][3] * B.m[0][3];

	fld	DWORD PTR [eax+444]
	fstp	DWORD PTR [edx+12]

; 89   : 
; 90   : 		m[1][0] = A.m[0][0] * B.m[1][0] + A.m[1][0] * B.m[1][1] + A.m[2][0] * B.m[1][2] + A.m[3][0] * B.m[1][3];

	movss	xmm0, DWORD PTR [eax+448]
	addss	xmm0, DWORD PTR [eax+460]
	mulss	xmm0, xmm2
	movss	DWORD PTR [edx+16], xmm0

; 91   : 		m[1][1] = A.m[0][1] * B.m[1][0] + A.m[1][1] * B.m[1][1] + A.m[2][1] * B.m[1][2] + A.m[3][1] * B.m[1][3];

	movss	xmm1, DWORD PTR [eax+460]
	movss	xmm0, DWORD PTR [eax+452]
	mulss	xmm0, xmm2
	mulss	xmm1, xmm2
	subss	xmm1, xmm0
	movss	DWORD PTR [edx+20], xmm1

; 92   : 		m[1][2] = A.m[0][2] * B.m[1][0] + A.m[1][2] * B.m[1][1] + A.m[2][2] * B.m[1][2] + A.m[3][2] * B.m[1][3];

	fld	DWORD PTR [eax+456]
	fstp	DWORD PTR [edx+24]

; 93   : 		m[1][3] = A.m[0][3] * B.m[1][0] + A.m[1][3] * B.m[1][1] + A.m[2][3] * B.m[1][2] + A.m[3][3] * B.m[1][3];

	fld	DWORD PTR [eax+460]
	fstp	DWORD PTR [edx+28]

; 94   : 
; 95   : 		m[2][0] = A.m[0][0] * B.m[2][0] + A.m[1][0] * B.m[2][1] + A.m[2][0] * B.m[2][2] + A.m[3][0] * B.m[2][3];

	movss	xmm0, DWORD PTR [eax+464]
	addss	xmm0, DWORD PTR [eax+476]
	mulss	xmm0, xmm2
	movss	DWORD PTR [edx+32], xmm0

; 96   : 		m[2][1] = A.m[0][1] * B.m[2][0] + A.m[1][1] * B.m[2][1] + A.m[2][1] * B.m[2][2] + A.m[3][1] * B.m[2][3];

	movss	xmm1, DWORD PTR [eax+476]
	movss	xmm0, DWORD PTR [eax+468]
	mulss	xmm0, xmm2
	mulss	xmm1, xmm2
	subss	xmm1, xmm0
	movss	DWORD PTR [edx+36], xmm1

; 97   : 		m[2][2] = A.m[0][2] * B.m[2][0] + A.m[1][2] * B.m[2][1] + A.m[2][2] * B.m[2][2] + A.m[3][2] * B.m[2][3];

	fld	DWORD PTR [eax+472]
	fstp	DWORD PTR [edx+40]

; 98   : 		m[2][3] = A.m[0][3] * B.m[2][0] + A.m[1][3] * B.m[2][1] + A.m[2][3] * B.m[2][2] + A.m[3][3] * B.m[2][3];

	fld	DWORD PTR [eax+476]
	fstp	DWORD PTR [edx+44]

; 99   : 
; 100  : 		m[3][0] = A.m[0][0] * B.m[3][0] + A.m[1][0] * B.m[3][1] + A.m[2][0] * B.m[3][2] + A.m[3][0] * B.m[3][3];

	movss	xmm0, DWORD PTR [eax+480]
	addss	xmm0, DWORD PTR [eax+492]
	mulss	xmm0, xmm2
	movss	DWORD PTR [edx+48], xmm0

; 101  : 		m[3][1] = A.m[0][1] * B.m[3][0] + A.m[1][1] * B.m[3][1] + A.m[2][1] * B.m[3][2] + A.m[3][1] * B.m[3][3];

	movss	xmm1, DWORD PTR [eax+492]
	movss	xmm0, DWORD PTR [eax+484]
	mulss	xmm1, xmm2
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movss	DWORD PTR [edx+52], xmm1

; 102  : 		m[3][2] = A.m[0][2] * B.m[3][0] + A.m[1][2] * B.m[3][1] + A.m[2][2] * B.m[3][2] + A.m[3][2] * B.m[3][3];

	fld	DWORD PTR [eax+488]
	fstp	DWORD PTR [edx+56]

; 103  : 		m[3][3] = A.m[0][3] * B.m[3][0] + A.m[1][3] * B.m[3][1] + A.m[2][3] * B.m[3][2] + A.m[3][3] * B.m[3][3];

	fld	DWORD PTR [eax+492]
	fstp	DWORD PTR [edx+60]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 94   : 	float	scale_X			= float(Device.dwWidth)	/ float(TEX_jitter);

	mov	ecx, DWORD PTR __imp_?Device@@3VCRenderDevice@@A
	mov	eax, DWORD PTR [ecx+256]
	fild	DWORD PTR [ecx+256]
	test	eax, eax
	jns	SHORT $LN33@u_compute_
	fadd	DWORD PTR __real@4f800000
$LN33@u_compute_:
	fld	DWORD PTR __real@3c800000

; 95   : 	float	scale_Y			= float(Device.dwHeight)/ float(TEX_jitter);

	mov	eax, DWORD PTR [ecx+260]
	fmul	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR _scale_X$[esp+68]
	fild	DWORD PTR [ecx+260]
	test	eax, eax
	jns	SHORT $LN34@u_compute_
	fadd	DWORD PTR __real@4f800000
$LN34@u_compute_:
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 260  : 		identity(); m[0][0]=x; m[1][1]=y; m[2][2]=z; 

	movss	xmm0, DWORD PTR _scale_X$[esp+68]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 99   : 	m_Texgen_J.mulA_44			(m_TexelAdjust);

	lea	eax, DWORD PTR _m_TexelAdjust$[esp+72]
	fmulp	ST(1), ST(0)
	mov	ecx, edx
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 260  : 		identity(); m[0][0]=x; m[1][1]=y; m[2][2]=z; 

	movss	DWORD PTR _m_TexelAdjust$[esp+72], xmm0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 99   : 	m_Texgen_J.mulA_44			(m_TexelAdjust);

	push	eax
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 72   : 		_11=1; _12=0; _13=0; _14=0;

	mov	DWORD PTR _m_TexelAdjust$[esp+80], 0
	mov	DWORD PTR _m_TexelAdjust$[esp+84], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 95   : 	float	scale_Y			= float(Device.dwHeight)/ float(TEX_jitter);

	fstp	DWORD PTR _scale_Y$[esp+76]
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 260  : 		identity(); m[0][0]=x; m[1][1]=y; m[2][2]=z; 

	movss	xmm0, DWORD PTR _scale_Y$[esp+76]

; 72   : 		_11=1; _12=0; _13=0; _14=0;

	mov	DWORD PTR _m_TexelAdjust$[esp+88], 0

; 73   : 		_21=0; _22=1; _23=0; _24=0;

	mov	DWORD PTR _m_TexelAdjust$[esp+92], 0
	mov	DWORD PTR _m_TexelAdjust$[esp+100], 0
	mov	DWORD PTR _m_TexelAdjust$[esp+104], 0

; 74   : 		_31=0; _32=0; _33=1; _34=0;

	mov	DWORD PTR _m_TexelAdjust$[esp+108], 0
	mov	DWORD PTR _m_TexelAdjust$[esp+112], 0
	mov	DWORD PTR _m_TexelAdjust$[esp+120], 0

; 75   : 		_41=0; _42=0; _43=0; _44=1;

	mov	DWORD PTR _m_TexelAdjust$[esp+136], 1065353216 ; 3f800000H

; 260  : 		identity(); m[0][0]=x; m[1][1]=y; m[2][2]=z; 

	movss	DWORD PTR _m_TexelAdjust$[esp+96], xmm0
	mov	DWORD PTR _m_TexelAdjust$[esp+116], 1065353216 ; 3f800000H
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	mov	DWORD PTR _m_TexelAdjust$[esp+124], 1006632960 ; 3c000000H
	mov	DWORD PTR _m_TexelAdjust$[esp+128], 1006632960 ; 3c000000H
	mov	DWORD PTR _m_TexelAdjust$[esp+132], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 99   : 	m_Texgen_J.mulA_44			(m_TexelAdjust);

	call	?mulA_44@?$_matrix@M@@QAEAAU1@ABU1@@Z	; _matrix<float>::mulA_44

; 100  : }

	add	esp, 72					; 00000048H
	ret	4
?u_compute_texgen_jitter@CRenderTarget@@QAEXAAU?$_matrix@M@@@Z ENDP ; CRenderTarget::u_compute_texgen_jitter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
_TEXT	SEGMENT
_dest$1$ = -76						; size = 4
_samples$ = -72						; size = 68
?generate_jitter@@YAXPAKI@Z PROC			; generate_jitter
; _dest$ = ecx
; _elem_count$dead$ = edx

; 157  : {

	sub	esp, 76					; 0000004cH
	push	ebx
	push	ebp
	push	esi
	push	edi
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 21   : 	svector() : count(0) 

	xor	edi, edi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 157  : {

	mov	DWORD PTR _dest$1$[esp+92], ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 21   : 	svector() : count(0) 

	mov	DWORD PTR _samples$[esp+156], edi
$LL2@generate_j:
; File I:\Vitalya\mine\NSProjectX\xrCore\_random.h

; 33   : 	IC 	s32		randI	(s32 max)					{ VERIFY(max);  return randI()%max; }

	mov	ecx, DWORD PTR __imp_?Random@@3VCRandom@@A
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	mov	ebp, eax
	and	ebp, -2147483393			; 800000ffH
	jns	SHORT $LN92@generate_j
	dec	ebp
	or	ebp, -256				; ffffff00H
	inc	ebp
$LN92@generate_j:
	mov	ecx, DWORD PTR __imp_?Random@@3VCRandom@@A
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	mov	ebx, eax
	and	ebx, -2147483393			; 800000ffH
	jns	SHORT $LN93@generate_j
	dec	ebx
	or	ebx, -256				; ffffff00H
	inc	ebx
$LN93@generate_j:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 165  : 		for (u32 t=0; t<samples.size(); t++)

	xor	ecx, ecx
	test	edi, edi
	je	SHORT $LN91@generate_j
$LL6@generate_j:

; 167  : 			int		dist	= _abs(test.x-samples[t].x)+_abs(test.y-samples[t].y);

	mov	eax, ebp
	sub	eax, DWORD PTR _samples$[esp+ecx*8+96]
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 157  : IC s32		_abs	(s32 x)			{ return (x>=0)? x : s32(-x); }

	cdq
	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 167  : 			int		dist	= _abs(test.x-samples[t].x)+_abs(test.y-samples[t].y);

	mov	eax, ebx
	sub	eax, DWORD PTR _samples$[esp+ecx*8+92]
; File I:\Vitalya\mine\NSProjectX\xrCore\_std_extensions.h

; 157  : IC s32		_abs	(s32 x)			{ return (x>=0)? x : s32(-x); }

	xor	esi, edx
	sub	esi, edx
	cdq
	xor	eax, edx
	sub	eax, edx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 167  : 			int		dist	= _abs(test.x-samples[t].x)+_abs(test.y-samples[t].y);

	add	esi, eax

; 168  : 			if (dist<32)	{

	cmp	esi, 32					; 00000020H
	jl	SHORT $LN11@generate_j

; 165  : 		for (u32 t=0; t<samples.size(); t++)

	inc	ecx
	cmp	ecx, edi
	jb	SHORT $LL6@generate_j
$LN91@generate_j:
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h

; 35   : 	IC void		push_back(value_type e)		{ VERIFY(count<dim); array[count++]=e;	}

	mov	DWORD PTR _samples$[esp+edi*8+92], ebx
	mov	DWORD PTR _samples$[esp+edi*8+96], ebp
	mov	edi, DWORD PTR _samples$[esp+156]
	inc	edi
	mov	DWORD PTR _samples$[esp+156], edi
$LN11@generate_j:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 160  : 	while (samples.size()<elem_count*2)

	cmp	edi, 8
	jb	SHORT $LL2@generate_j
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	mov	eax, DWORD PTR _samples$[esp+100]
	movzx	ecx, BYTE PTR _samples$[esp+92]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 176  : 		*dest	= color_rgba(samples[2*it].x,samples[2*it].y,samples[2*it+1].y,samples[2*it+1].x);

	mov	edx, DWORD PTR _dest$1$[esp+92]
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _samples$[esp+96]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _samples$[esp+104]
	shl	ecx, 8
	or	ecx, eax
	mov	eax, DWORD PTR _samples$[esp+116]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 176  : 		*dest	= color_rgba(samples[2*it].x,samples[2*it].y,samples[2*it+1].y,samples[2*it+1].x);

	mov	DWORD PTR [edx], ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	movzx	ecx, BYTE PTR _samples$[esp+108]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _samples$[esp+112]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _samples$[esp+120]
	shl	ecx, 8
	or	ecx, eax
	mov	eax, DWORD PTR _samples$[esp+132]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 176  : 		*dest	= color_rgba(samples[2*it].x,samples[2*it].y,samples[2*it+1].y,samples[2*it+1].x);

	mov	DWORD PTR [edx+4], ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	movzx	ecx, BYTE PTR _samples$[esp+124]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _samples$[esp+128]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _samples$[esp+136]
	shl	ecx, 8
	or	ecx, eax
	mov	eax, DWORD PTR _samples$[esp+148]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 176  : 		*dest	= color_rgba(samples[2*it].x,samples[2*it].y,samples[2*it+1].y,samples[2*it+1].x);

	mov	DWORD PTR [edx+8], ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	movzx	ecx, BYTE PTR _samples$[esp+140]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _samples$[esp+144]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _samples$[esp+152]
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 177  : }

	pop	edi
	pop	esi
; File I:\Vitalya\mine\NSProjectX\xrCore\_color.h

; 5    : ICF u32	color_argb	(u32 a, u32 r, u32 g, u32 b)	{	return ((a&0xff)<<24)|((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);	}

	shl	ecx, 8
	or	ecx, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 177  : }

	pop	ebp
	mov	DWORD PTR [edx+12], ecx
	pop	ebx
	add	esp, 76					; 0000004cH
	ret	0
?generate_jitter@@YAXPAKI@Z ENDP			; generate_jitter
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GCRenderTarget@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRenderTarget@@UAEPAXI@Z PROC			; CRenderTarget::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CRenderTarget@@UAE@XZ		; CRenderTarget::~CRenderTarget
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar
	push	444					; 000001bcH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN4@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCRenderTarget@@UAEPAXI@Z ENDP			; CRenderTarget::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget_accum_spot_geom.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget_accum_omnipart_geom.cpp
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget_accum_point_geom.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\render.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
_TEXT	SEGMENT
??1CRenderTarget@@UAE@XZ PROC				; CRenderTarget::~CRenderTarget
; _this$ = ecx

; 530  : {

	push	ebx
	push	ebp

; 531  : 	// Textures
; 532  : 	t_material->surface_set		(NULL);

	mov	ebp, DWORD PTR __imp_?surface_set@CTexture@@QAEXPAUIDirect3DBaseTexture9@@@Z
	push	esi
	mov	esi, ecx
	push	edi
	push	0
	mov	ecx, DWORD PTR [esi+184]
	mov	DWORD PTR [esi], OFFSET ??_7CRenderTarget@@6B@
	call	ebp

; 533  : 
; 534  : #ifdef DEBUG
; 535  : 	_SHOW_REF					("t_material_surf",t_material_surf);
; 536  : #endif // DEBUG
; 537  : 	_RELEASE					(t_material_surf);

	mov	ecx, DWORD PTR [esi+180]
	test	ecx, ecx
	je	SHORT $LN5@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+180], 0
$LN5@CRenderTar:

; 538  : 
; 539  : 	t_LUM_src->surface_set		(NULL);

	mov	ecx, DWORD PTR [esi+132]
	push	0
	call	ebp

; 540  : 	t_LUM_dest->surface_set		(NULL);

	mov	ecx, DWORD PTR [esi+136]
	push	0
	call	ebp

; 541  : 
; 542  : #ifdef DEBUG
; 543  : 	_SHOW_REF("t_envmap_0 - #small",t_envmap_0->pSurface);
; 544  : 	_SHOW_REF("t_envmap_1 - #small",t_envmap_1->pSurface);
; 545  : #endif // DEBUG
; 546  : 	t_envmap_0->surface_set		(NULL);

	mov	ecx, DWORD PTR [esi+160]
	push	0
	call	ebp

; 547  : 	t_envmap_1->surface_set		(NULL);

	mov	ecx, DWORD PTR [esi+164]
	push	0
	call	ebp
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	lea	ecx, DWORD PTR [esi+160]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+164]
	mov	DWORD PTR [esi+160], 0
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
	mov	DWORD PTR [esi+164], 0
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 551  : 	_RELEASE					(rt_smap_ZB);

	mov	ecx, DWORD PTR [esi+176]
	test	ecx, ecx
	je	SHORT $LN6@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+176], 0
$LN6@CRenderTar:

; 552  : 
; 553  : 	// Jitter
; 554  : 	for (int it=0; it<TEX_jitter_count; it++)	{

	lea	edi, DWORD PTR [esi+188]
	mov	ebx, 4
	npad	1
$LL4@CRenderTar:

; 555  : 		t_noise	[it]->surface_set	(NULL);

	mov	ecx, DWORD PTR [edi+16]
	push	0
	call	ebp

; 556  : #ifdef DEBUG
; 557  : 		_SHOW_REF("t_noise_surf[it]",t_noise_surf[it]);
; 558  : #endif // DEBUG
; 559  : 		_RELEASE					(t_noise_surf[it]);

	mov	ecx, DWORD PTR [edi]
	test	ecx, ecx
	je	SHORT $LN2@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [edi], 0
$LN2@CRenderTar:

; 552  : 
; 553  : 	// Jitter
; 554  : 	for (int it=0; it<TEX_jitter_count; it++)	{

	add	edi, 4
	sub	ebx, 1
	jne	SHORT $LL4@CRenderTar
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget_accum_spot_geom.cpp

; 99   : 	_RELEASE	(g_accum_spot_ib);

	mov	ecx, DWORD PTR [esi+288]
	lea	ebx, DWORD PTR [esi+132]
	test	ecx, ecx
	je	SHORT $LN20@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+288], 0
$LN20@CRenderTar:

; 100  : #ifdef DEBUG
; 101  : 	_SHOW_REF	("g_accum_spot_vb",g_accum_spot_vb);
; 102  : #endif // DEBUG
; 103  : 	_RELEASE	(g_accum_spot_vb);

	mov	ecx, DWORD PTR [esi+284]
	test	ecx, ecx
	je	SHORT $LN21@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+284], 0
$LN21@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget_accum_omnipart_geom.cpp

; 42   : 	_RELEASE(g_accum_omnip_ib);

	mov	ecx, DWORD PTR [esi+280]
	test	ecx, ecx
	je	SHORT $LN24@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+280], 0
$LN24@CRenderTar:

; 43   : #ifdef DEBUG
; 44   : 	_SHOW_REF("g_accum_omnip_vb",g_accum_omnip_vb);
; 45   : #endif // DEBUG
; 46   : 	_RELEASE(g_accum_omnip_vb);

	mov	ecx, DWORD PTR [esi+276]
	test	ecx, ecx
	je	SHORT $LN25@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+276], 0
$LN25@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget_accum_point_geom.cpp

; 320  : 	_RELEASE(g_accum_point_ib);

	mov	ecx, DWORD PTR [esi+272]
	test	ecx, ecx
	je	SHORT $LN28@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+272], 0
$LN28@CRenderTar:

; 321  : #ifdef DEBUG
; 322  : 	_SHOW_REF("g_accum_point_vb",g_accum_point_vb);
; 323  : #endif // DEBUG
; 324  : 	_RELEASE(g_accum_point_vb);

	mov	ecx, DWORD PTR [esi+268]
	test	ecx, ecx
	je	SHORT $LN29@CRenderTar
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
	mov	DWORD PTR [esi+268], 0
$LN29@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+60]
	mov	ebp, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	test	eax, eax
	je	SHORT $LN32@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+60]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+60], 0
$LN32@CRenderTar:

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+56]
	test	eax, eax
	je	SHORT $LN37@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+56]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+56], 0
$LN37@CRenderTar:

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+48]
	test	eax, eax
	je	SHORT $LN42@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+48]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+48], 0
$LN42@CRenderTar:

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+52]
	test	eax, eax
	je	SHORT $LN47@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+52]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+52], 0
$LN47@CRenderTar:

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+44]
	test	eax, eax
	je	SHORT $LN52@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+44]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+44], 0
$LN52@CRenderTar:

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $LN57@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+40]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+40], 0
$LN57@CRenderTar:

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	je	SHORT $LN62@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+36]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+36], 0
$LN62@CRenderTar:

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+28]
	test	eax, eax
	je	SHORT $LN67@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+28]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+28], 0
$LN67@CRenderTar:

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN72@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+32]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+32], 0
$LN72@CRenderTar:

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+24]
	test	eax, eax
	je	SHORT $LN77@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+24]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+24], 0
$LN77@CRenderTar:

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN82@CRenderTar

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi+20]
	add	esp, 4
	mov	edi, eax
	mov	edx, DWORD PTR [ecx]
	push	0
	call	DWORD PTR [edx+28]

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp

; 154  : 		ptr = nullptr;

	mov	DWORD PTR [esi+20], 0
$LN82@CRenderTar:
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+384]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+380]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+376]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+372]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+368]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+364]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+360]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+356]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+352]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+348]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+344]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+340]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+336]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+332]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+328]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+320]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+316]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+308]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+304]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+300]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+296]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+292]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+264]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+260]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+256]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@USGeometry@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+252]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+248]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+244]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+240]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+236]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+232]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+228]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+224]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	edi, DWORD PTR [esi+220]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	mov	ecx, edi
	call	DWORD PTR __imp_?_dec@?$resptr_base@UShader@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	mov	ebp, 4
	npad	4
$LL155@CRenderTar:
	sub	edi, 4
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	mov	ecx, edi
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
	sub	ebp, 1
	jne	SHORT $LL155@CRenderTar
	lea	ecx, DWORD PTR [esi+184]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+172]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+168]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+164]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+160]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+156]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+152]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+148]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+144]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+140]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	lea	ecx, DWORD PTR [esi+136]
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
	mov	ecx, ebx
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	edi, DWORD PTR [ebp+4]
	npad	1
$LL185@CRenderTar:
	sub	ebx, 4
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	mov	ecx, ebx
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
	sub	edi, 1
	jne	SHORT $LL185@CRenderTar
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+112]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+108]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+104]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+100]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+96]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+92]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+88]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+84]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+80]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+76]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+72]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+68]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	lea	ecx, DWORD PTR [esi+64]
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h

; 64   : 						~resptr_core	()												{	_dec();						}

	call	DWORD PTR __imp_?_dec@?$resptr_base@VCRT@@@@IAEXXZ
; File I:\Vitalya\mine\NSProjectX\xrEngine\render.h

; 125  : 	virtual ~IRender_Target() {};

	mov	eax, DWORD PTR __imp_??_7IRender_Target@@6B@
	pop	edi
	mov	DWORD PTR [esi], eax
	pop	esi
	pop	ebp
	pop	ebx
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp

; 579  : }

	ret	0
??1CRenderTarget@@UAE@XZ ENDP				; CRenderTarget::~CRenderTarget
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.cpp
_TEXT	SEGMENT
?need_to_render_sunshafts@CRenderTarget@@QAE_NXZ PROC	; CRenderTarget::need_to_render_sunshafts
; _this$dead$ = ecx

; 638  : 	if (!(RImplementation.o.advancedpp && ps_r_sun_shafts))

	test	DWORD PTR ?RImplementation@@3VCRender@@A+660, 4096 ; 00001000H
	je	SHORT $LN3@need_to_re
	cmp	DWORD PTR ?ps_r_sun_shafts@@3IA, 0	; ps_r_sun_shafts
	je	SHORT $LN3@need_to_re

; 640  : 
; 641  : 	{
; 642  : 		CEnvDescriptor* E = g_pGamePersistent->Environment().CurrentEnv;
; 643  : 		float fValue = E->m_fSunShaftsIntensity;
; 644  : 		//	TODO: add multiplication by sun color here
; 645  : 		if (fValue < 0.0001) return false;

	mov	eax, DWORD PTR __imp_?g_pGamePersistent@@3PAVIGame_Persistent@@A
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+1116]
	mov	eax, DWORD PTR [eax+440]
	fld	DWORD PTR [eax+172]
	fld	QWORD PTR __real@3f1a36e2eb1c432d
	fcomip	ST(1)
	fstp	ST(0)
	ja	SHORT $LN3@need_to_re

; 646  : 	}
; 647  : 
; 648  : 	return true;

	mov	al, 1

; 649  : }

	ret	0
$LN3@need_to_re:

; 639  : 		return false;

	xor	al, al

; 649  : }

	ret	0
?need_to_render_sunshafts@CRenderTarget@@QAE_NXZ ENDP	; CRenderTarget::need_to_render_sunshafts
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ??A?$svector@U?$_vector2@H@@$07@@QAEAAU?$_vector2@H@@I@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
??A?$svector@U?$_vector2@H@@$07@@QAEAAU?$_vector2@H@@I@Z PROC ; svector<_vector2<int>,8>::operator[], COMDAT
; _this$ = ecx

; 38   : 	IC reference		operator[] (u32 id)			{ VERIFY(id<count); return array[id];	}

	mov	eax, DWORD PTR _id$[esp-4]
	lea	eax, DWORD PTR [ecx+eax*8]
	ret	4
??A?$svector@U?$_vector2@H@@$07@@QAEAAU?$_vector2@H@@I@Z ENDP ; svector<_vector2<int>,8>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ?push_back@?$svector@U?$_vector2@H@@$07@@QAEXU?$_vector2@H@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 8
?push_back@?$svector@U?$_vector2@H@@$07@@QAEXU?$_vector2@H@@@Z PROC ; svector<_vector2<int>,8>::push_back, COMDAT
; _this$ = ecx

; 35   : 	IC void		push_back(value_type e)		{ VERIFY(count<dim); array[count++]=e;	}

	mov	eax, DWORD PTR [ecx+64]
	mov	edx, DWORD PTR _e$[esp-4]
	push	esi
	mov	esi, DWORD PTR _e$[esp+4]
	mov	DWORD PTR [ecx+eax*8], edx
	mov	DWORD PTR [ecx+eax*8+4], esi
	inc	DWORD PTR [ecx+64]
	pop	esi
	ret	8
?push_back@?$svector@U?$_vector2@H@@$07@@QAEXU?$_vector2@H@@@Z ENDP ; svector<_vector2<int>,8>::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ?size@?$svector@U?$_vector2@H@@$07@@QBEIXZ
_TEXT	SEGMENT
?size@?$svector@U?$_vector2@H@@$07@@QBEIXZ PROC		; svector<_vector2<int>,8>::size, COMDAT
; _this$ = ecx

; 30   : 	IC u32		size()		const			{ return count;							}

	mov	eax, DWORD PTR [ecx+64]
	ret	0
?size@?$svector@U?$_vector2@H@@$07@@QBEIXZ ENDP		; svector<_vector2<int>,8>::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\FixedVector.h
;	COMDAT ??0?$svector@U?$_vector2@H@@$07@@QAE@XZ
_TEXT	SEGMENT
??0?$svector@U?$_vector2@H@@$07@@QAE@XZ PROC		; svector<_vector2<int>,8>::svector<_vector2<int>,8>, COMDAT
; _this$ = ecx

; 21   : 	svector() : count(0) 

	mov	DWORD PTR [ecx+64], 0

; 22   : 	{}

	mov	eax, ecx
	ret	0
??0?$svector@U?$_vector2@H@@$07@@QAE@XZ ENDP		; svector<_vector2<int>,8>::svector<_vector2<int>,8>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??B?$resptr_core@VCRT@@Uresptrcode_crt@@@@QBEP80@BEPAVCRT@@XZXZ
_TEXT	SEGMENT
??B?$resptr_core@VCRT@@Uresptrcode_crt@@@@QBEP80@BEPAVCRT@@XZXZ PROC ; resptr_core<CRT,resptrcode_crt>::operator CRT * (__thiscall resptr_core<CRT,resptrcode_crt>::*)(void)const , COMDAT
; _this$ = ecx

; 75   : 						operator unspecified_bool_type () const							{	return p_ == 0? 0: &resptr_core::_get;	}

	mov	eax, DWORD PTR __imp_?_get@?$resptr_base@VCRT@@@@QBEPAVCRT@@XZ
	xor	edx, edx
	cmp	DWORD PTR [ecx], edx
	cmove	eax, edx
	ret	0
??B?$resptr_core@VCRT@@Uresptrcode_crt@@@@QBEP80@BEPAVCRT@@XZXZ ENDP ; resptr_core<CRT,resptrcode_crt>::operator CRT * (__thiscall resptr_core<CRT,resptrcode_crt>::*)(void)const 
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ
_TEXT	SEGMENT
??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ PROC	; resptr_core<CRT,resptrcode_crt>::resptr_core<CRT,resptrcode_crt>, COMDAT
; _this$ = ecx

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	ret	0
??0?$resptr_core@VCRT@@Uresptrcode_crt@@@@QAE@XZ ENDP	; resptr_core<CRT,resptrcode_crt>::resptr_core<CRT,resptrcode_crt>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
;	COMDAT ?translate_over@?$_matrix@M@@QAEAAU1@MMM@Z
_TEXT	SEGMENT
__x$dead$ = 8						; size = 4
__y$dead$ = 12						; size = 4
__z$dead$ = 16						; size = 4
?translate_over@?$_matrix@M@@QAEAAU1@MMM@Z PROC		; _matrix<float>::translate_over, COMDAT
; _this$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	mov	DWORD PTR [ecx+48], 1006632960		; 3c000000H
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 251  : 		return *this;

	mov	eax, ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 23   : 	ICF	SelfRef	set(T _x, T _y, T _z)					{ x = _x;		y = _y;		z = _z;		return *this;	};

	mov	DWORD PTR [ecx+52], 1006632960		; 3c000000H
	mov	DWORD PTR [ecx+56], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 252  : 	}

	ret	12					; 0000000cH
?translate_over@?$_matrix@M@@QAEAAU1@MMM@Z ENDP		; _matrix<float>::translate_over
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h
;	COMDAT ?mulA_44@?$_matrix@M@@QAEAAU1@ABU1@@Z
_TEXT	SEGMENT
tv1642 = -36						; size = 4
tv1641 = -32						; size = 4
tv1643 = -28						; size = 4
tv1656 = -24						; size = 4
tv1659 = -20						; size = 4
tv1658 = -16						; size = 4
tv1674 = -12						; size = 4
tv1672 = -8						; size = 4
tv1675 = -4						; size = 4
_A$ = 8							; size = 4
?mulA_44@?$_matrix@M@@QAEAAU1@ABU1@@Z PROC		; _matrix<float>::mulA_44, COMDAT
; _this$ = ecx

; 85   : 		m[0][0] = A.m[0][0] * B.m[0][0] + A.m[1][0] * B.m[0][1] + A.m[2][0] * B.m[0][2] + A.m[3][0] * B.m[0][3];

	mov	eax, DWORD PTR _A$[esp-4]

; 133  : 	{

	sub	esp, 36					; 00000024H
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 24   : 	ICF SelfRef	set(const _vector3<float> &v)			{ x = T(v.x);	y = T(v.y);	z = T(v.z);	return *this;	};

	movss	xmm5, DWORD PTR [ecx+8]
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 56   : 		i.set(a.i); _14_=a._14;

	movss	xmm3, DWORD PTR [ecx+12]

; 85   : 		m[0][0] = A.m[0][0] * B.m[0][0] + A.m[1][0] * B.m[0][1] + A.m[2][0] * B.m[0][2] + A.m[3][0] * B.m[0][3];

	movaps	xmm2, xmm5
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 24   : 	ICF SelfRef	set(const _vector3<float> &v)			{ x = T(v.x);	y = T(v.y);	z = T(v.z);	return *this;	};

	movss	xmm4, DWORD PTR [ecx+4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 85   : 		m[0][0] = A.m[0][0] * B.m[0][0] + A.m[1][0] * B.m[0][1] + A.m[2][0] * B.m[0][2] + A.m[3][0] * B.m[0][3];

	movaps	xmm0, xmm3
	mulss	xmm2, DWORD PTR [eax+32]
	movaps	xmm1, xmm4
	mulss	xmm0, DWORD PTR [eax+48]
	mulss	xmm1, DWORD PTR [eax+16]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 24   : 	ICF SelfRef	set(const _vector3<float> &v)			{ x = T(v.x);	y = T(v.y);	z = T(v.z);	return *this;	};

	movss	xmm6, DWORD PTR [ecx]
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 85   : 		m[0][0] = A.m[0][0] * B.m[0][0] + A.m[1][0] * B.m[0][1] + A.m[2][0] * B.m[0][2] + A.m[3][0] * B.m[0][3];

	addss	xmm2, xmm0
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector3d.h

; 24   : 	ICF SelfRef	set(const _vector3<float> &v)			{ x = T(v.x);	y = T(v.y);	z = T(v.z);	return *this;	};

	movss	xmm7, DWORD PTR [ecx+24]
; File I:\Vitalya\mine\NSProjectX\xrCore\_matrix.h

; 85   : 		m[0][0] = A.m[0][0] * B.m[0][0] + A.m[1][0] * B.m[0][1] + A.m[2][0] * B.m[0][2] + A.m[3][0] * B.m[0][3];

	movaps	xmm0, xmm6
	mulss	xmm0, DWORD PTR [eax]
	addss	xmm1, xmm0

; 86   : 		m[0][1] = A.m[0][1] * B.m[0][0] + A.m[1][1] * B.m[0][1] + A.m[2][1] * B.m[0][2] + A.m[3][1] * B.m[0][3];

	movaps	xmm0, xmm3
	addss	xmm2, xmm1
	movaps	xmm1, xmm6
	movss	DWORD PTR [ecx], xmm2
	movaps	xmm2, xmm5
	mulss	xmm2, DWORD PTR [eax+36]
	mulss	xmm0, DWORD PTR [eax+52]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm2, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR [eax+20]
	addss	xmm1, xmm0

; 87   : 		m[0][2] = A.m[0][2] * B.m[0][0] + A.m[1][2] * B.m[0][1] + A.m[2][2] * B.m[0][2] + A.m[3][2] * B.m[0][3];

	movaps	xmm0, xmm6
	addss	xmm2, xmm1
	movaps	xmm1, xmm5
	movss	DWORD PTR [ecx+4], xmm2
	movaps	xmm2, xmm4
	mulss	xmm2, DWORD PTR [eax+24]
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm1, DWORD PTR [eax+40]
	addss	xmm2, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, DWORD PTR [eax+56]
	addss	xmm1, xmm0
	addss	xmm2, xmm1

; 88   : 		m[0][3] = A.m[0][3] * B.m[0][0] + A.m[1][3] * B.m[0][1] + A.m[2][3] * B.m[0][2] + A.m[3][3] * B.m[0][3];
; 89   : 
; 90   : 		m[1][0] = A.m[0][0] * B.m[1][0] + A.m[1][0] * B.m[1][1] + A.m[2][0] * B.m[1][2] + A.m[3][0] * B.m[1][3];

	movaps	xmm1, xmm7
	movss	DWORD PTR [ecx+8], xmm2
	mulss	xmm6, DWORD PTR [eax+12]
	mulss	xmm4, DWORD PTR [eax+28]
	mulss	xmm3, DWORD PTR [eax+60]
	mulss	xmm5, DWORD PTR [eax+44]
	addss	xmm6, xmm4
	addss	xmm3, xmm5
	addss	xmm6, xmm3
	movss	xmm3, DWORD PTR [ecx+28]
	movss	DWORD PTR [ecx+12], xmm6
	movss	xmm5, DWORD PTR [ecx+16]
	movss	xmm4, DWORD PTR [ecx+20]
	movaps	xmm2, xmm5
	mulss	xmm2, DWORD PTR [eax]
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR [eax+16]
	mulss	xmm1, DWORD PTR [eax+32]
	addss	xmm2, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, DWORD PTR [eax+48]
	addss	xmm1, xmm0

; 91   : 		m[1][1] = A.m[0][1] * B.m[1][0] + A.m[1][1] * B.m[1][1] + A.m[2][1] * B.m[1][2] + A.m[3][1] * B.m[1][3];

	movaps	xmm0, xmm3
	addss	xmm2, xmm1
	movaps	xmm1, xmm5
	movss	DWORD PTR [ecx+16], xmm2
	movaps	xmm2, xmm7
	mulss	xmm2, DWORD PTR [eax+36]
	mulss	xmm0, DWORD PTR [eax+52]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm2, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR [eax+20]
	addss	xmm1, xmm0

; 92   : 		m[1][2] = A.m[0][2] * B.m[1][0] + A.m[1][2] * B.m[1][1] + A.m[2][2] * B.m[1][2] + A.m[3][2] * B.m[1][3];

	movaps	xmm0, xmm5
	addss	xmm2, xmm1
	movss	DWORD PTR [ecx+20], xmm2
	movaps	xmm2, xmm4
	mulss	xmm2, DWORD PTR [eax+24]
	mulss	xmm0, DWORD PTR [eax+8]
	movaps	xmm1, xmm7
	mulss	xmm1, DWORD PTR [eax+40]
	addss	xmm2, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, DWORD PTR [eax+56]
	addss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR [ecx+24], xmm2

; 93   : 		m[1][3] = A.m[0][3] * B.m[1][0] + A.m[1][3] * B.m[1][1] + A.m[2][3] * B.m[1][2] + A.m[3][3] * B.m[1][3];

	mulss	xmm3, DWORD PTR [eax+60]
	mulss	xmm5, DWORD PTR [eax+12]
	mulss	xmm4, DWORD PTR [eax+28]
	mulss	xmm7, DWORD PTR [eax+44]
	addss	xmm5, xmm4
	addss	xmm3, xmm7
	addss	xmm3, xmm5
	movss	DWORD PTR [ecx+28], xmm3

; 94   : 
; 95   : 		m[2][0] = A.m[0][0] * B.m[2][0] + A.m[1][0] * B.m[2][1] + A.m[2][0] * B.m[2][2] + A.m[3][0] * B.m[2][3];

	movss	xmm4, DWORD PTR [ecx+32]
	movss	xmm6, DWORD PTR [ecx+36]
	movaps	xmm2, xmm4
	mulss	xmm2, DWORD PTR [eax]
	movaps	xmm0, xmm6
	mulss	xmm0, DWORD PTR [eax+16]
	movss	xmm5, DWORD PTR [ecx+40]
	movss	xmm3, DWORD PTR [ecx+44]
	movaps	xmm1, xmm5
	mulss	xmm1, DWORD PTR [eax+32]
	addss	xmm2, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, DWORD PTR [eax+48]
	addss	xmm1, xmm0

; 96   : 		m[2][1] = A.m[0][1] * B.m[2][0] + A.m[1][1] * B.m[2][1] + A.m[2][1] * B.m[2][2] + A.m[3][1] * B.m[2][3];

	movaps	xmm0, xmm6
	addss	xmm2, xmm1
	movaps	xmm1, xmm5
	movss	DWORD PTR [ecx+32], xmm2
	movaps	xmm2, xmm4
	mulss	xmm0, DWORD PTR [eax+20]
	mulss	xmm2, DWORD PTR [eax+4]
	mulss	xmm1, DWORD PTR [eax+36]
	addss	xmm2, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, DWORD PTR [eax+52]
	addss	xmm1, xmm0

; 97   : 		m[2][2] = A.m[0][2] * B.m[2][0] + A.m[1][2] * B.m[2][1] + A.m[2][2] * B.m[2][2] + A.m[3][2] * B.m[2][3];

	movaps	xmm0, xmm3
	addss	xmm2, xmm1
	movaps	xmm1, xmm4
	movss	DWORD PTR [ecx+36], xmm2
	movaps	xmm2, xmm5
	mulss	xmm0, DWORD PTR [eax+56]
	mulss	xmm2, DWORD PTR [eax+40]
	mulss	xmm1, DWORD PTR [eax+8]
	addss	xmm2, xmm0
	movaps	xmm0, xmm6
	mulss	xmm0, DWORD PTR [eax+24]
	addss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR [ecx+40], xmm2

; 98   : 		m[2][3] = A.m[0][3] * B.m[2][0] + A.m[1][3] * B.m[2][1] + A.m[2][3] * B.m[2][2] + A.m[3][3] * B.m[2][3];

	mulss	xmm6, DWORD PTR [eax+28]
	mulss	xmm4, DWORD PTR [eax+12]
	mulss	xmm5, DWORD PTR [eax+44]
	mulss	xmm3, DWORD PTR [eax+60]
	addss	xmm6, xmm4

; 99   : 
; 100  : 		m[3][0] = A.m[0][0] * B.m[3][0] + A.m[1][0] * B.m[3][1] + A.m[2][0] * B.m[3][2] + A.m[3][0] * B.m[3][3];

	movss	xmm4, DWORD PTR [ecx+60]
	movaps	xmm2, xmm4
	addss	xmm5, xmm3
	addss	xmm6, xmm5
	movss	DWORD PTR [ecx+44], xmm6
	movss	xmm5, DWORD PTR [ecx+56]
	mulss	xmm2, DWORD PTR [eax+48]
	movaps	xmm0, xmm5
	mulss	xmm0, DWORD PTR [eax+32]
	movss	xmm3, DWORD PTR [ecx+52]
	movss	xmm6, DWORD PTR [ecx+48]
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [eax+16]
	addss	xmm2, xmm0
	movaps	xmm0, xmm6
	mulss	xmm0, DWORD PTR [eax]
	addss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR [ecx+48], xmm2

; 101  : 		m[3][1] = A.m[0][1] * B.m[3][0] + A.m[1][1] * B.m[3][1] + A.m[2][1] * B.m[3][2] + A.m[3][1] * B.m[3][3];

	movaps	xmm0, xmm5
	movaps	xmm2, xmm4
	mulss	xmm0, DWORD PTR [eax+36]
	movaps	xmm1, xmm3
	mulss	xmm2, DWORD PTR [eax+52]
	mulss	xmm1, DWORD PTR [eax+20]
	addss	xmm2, xmm0
	movaps	xmm0, xmm6
	mulss	xmm0, DWORD PTR [eax+4]
	addss	xmm1, xmm0

; 102  : 		m[3][2] = A.m[0][2] * B.m[3][0] + A.m[1][2] * B.m[3][1] + A.m[2][2] * B.m[3][2] + A.m[3][2] * B.m[3][3];

	movaps	xmm0, xmm4
	addss	xmm2, xmm1
	movaps	xmm1, xmm6
	movss	DWORD PTR [ecx+52], xmm2
	movaps	xmm2, xmm5
	mulss	xmm0, DWORD PTR [eax+56]
	mulss	xmm2, DWORD PTR [eax+40]
	mulss	xmm1, DWORD PTR [eax+8]
	addss	xmm2, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, DWORD PTR [eax+24]
	addss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR [ecx+56], xmm2

; 103  : 		m[3][3] = A.m[0][3] * B.m[3][0] + A.m[1][3] * B.m[3][1] + A.m[2][3] * B.m[3][2] + A.m[3][3] * B.m[3][3];

	mulss	xmm6, DWORD PTR [eax+12]
	mulss	xmm3, DWORD PTR [eax+28]
	mulss	xmm5, DWORD PTR [eax+44]
	mulss	xmm4, DWORD PTR [eax+60]
	addss	xmm6, xmm3

; 134  :     	Self B; B.set( *this ); 	mul		( A, B );
; 135  : 		return *this;

	mov	eax, ecx

; 103  : 		m[3][3] = A.m[0][3] * B.m[3][0] + A.m[1][3] * B.m[3][1] + A.m[2][3] * B.m[3][2] + A.m[3][3] * B.m[3][3];

	addss	xmm5, xmm4
	addss	xmm6, xmm5
	movss	DWORD PTR [ecx+60], xmm6

; 136  :     };

	add	esp, 36					; 00000024H
	ret	4
?mulA_44@?$_matrix@M@@QAEAAU1@ABU1@@Z ENDP		; _matrix<float>::mulA_44
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_occq.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_occq.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_light_occq@@@@YAPAVCBlender_light_occq@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_light_occq@@@@YAPAVCBlender_light_occq@@XZ PROC ; xr_new<CBlender_light_occq>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_occq.cpp

; 6    : CBlender_light_occq::CBlender_light_occq	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_light_occq@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_occq.cpp

; 6    : CBlender_light_occq::CBlender_light_occq	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_light_occq@@@@YAPAVCBlender_light_occq@@XZ ENDP ; xr_new<CBlender_light_occq>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_mask.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_mask.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_accum_direct_mask@@@@YAPAVCBlender_accum_direct_mask@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_accum_direct_mask@@@@YAPAVCBlender_accum_direct_mask@@XZ PROC ; xr_new<CBlender_accum_direct_mask>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_mask.cpp

; 6    : CBlender_accum_direct_mask::CBlender_accum_direct_mask	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_direct_mask@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_mask.cpp

; 6    : CBlender_accum_direct_mask::CBlender_accum_direct_mask	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_accum_direct_mask@@@@YAPAVCBlender_accum_direct_mask@@XZ ENDP ; xr_new<CBlender_accum_direct_mask>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_accum_direct@@@@YAPAVCBlender_accum_direct@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_accum_direct@@@@YAPAVCBlender_accum_direct@@XZ PROC ; xr_new<CBlender_accum_direct>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct.cpp

; 6    : CBlender_accum_direct::CBlender_accum_direct	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_direct@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct.cpp

; 6    : CBlender_accum_direct::CBlender_accum_direct	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_accum_direct@@@@YAPAVCBlender_accum_direct@@XZ ENDP ; xr_new<CBlender_accum_direct>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct_cascade.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct_cascade.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_accum_direct_cascade@@@@YAPAVCBlender_accum_direct_cascade@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_accum_direct_cascade@@@@YAPAVCBlender_accum_direct_cascade@@XZ PROC ; xr_new<CBlender_accum_direct_cascade>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct_cascade.cpp

; 6    : CBlender_accum_direct_cascade::CBlender_accum_direct_cascade	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_direct_cascade@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_direct_cascade.cpp

; 6    : CBlender_accum_direct_cascade::CBlender_accum_direct_cascade	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_accum_direct_cascade@@@@YAPAVCBlender_accum_direct_cascade@@XZ ENDP ; xr_new<CBlender_accum_direct_cascade>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_point.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_point.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_accum_point@@@@YAPAVCBlender_accum_point@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_accum_point@@@@YAPAVCBlender_accum_point@@XZ PROC ; xr_new<CBlender_accum_point>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_point.cpp

; 6    : CBlender_accum_point::CBlender_accum_point	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_point@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_point.cpp

; 6    : CBlender_accum_point::CBlender_accum_point	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_accum_point@@@@YAPAVCBlender_accum_point@@XZ ENDP ; xr_new<CBlender_accum_point>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_spot.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_spot.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_accum_spot@@@@YAPAVCBlender_accum_spot@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_accum_spot@@@@YAPAVCBlender_accum_spot@@XZ PROC ; xr_new<CBlender_accum_spot>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_spot.cpp

; 6    : CBlender_accum_spot::CBlender_accum_spot	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_spot@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_spot.cpp

; 6    : CBlender_accum_spot::CBlender_accum_spot	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_accum_spot@@@@YAPAVCBlender_accum_spot@@XZ ENDP ; xr_new<CBlender_accum_spot>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_reflected.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_reflected.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_accum_reflected@@@@YAPAVCBlender_accum_reflected@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_accum_reflected@@@@YAPAVCBlender_accum_reflected@@XZ PROC ; xr_new<CBlender_accum_reflected>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_reflected.cpp

; 6    : CBlender_accum_reflected::CBlender_accum_reflected	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_accum_reflected@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_light_reflected.cpp

; 6    : CBlender_accum_reflected::CBlender_accum_reflected	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_accum_reflected@@@@YAPAVCBlender_accum_reflected@@XZ ENDP ; xr_new<CBlender_accum_reflected>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_bloom_build.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_bloom_build.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_bloom_build@@@@YAPAVCBlender_bloom_build@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_bloom_build@@@@YAPAVCBlender_bloom_build@@XZ PROC ; xr_new<CBlender_bloom_build>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_bloom_build.cpp

; 6    : CBlender_bloom_build::CBlender_bloom_build	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_bloom_build@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_bloom_build.cpp

; 6    : CBlender_bloom_build::CBlender_bloom_build	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_bloom_build@@@@YAPAVCBlender_bloom_build@@XZ ENDP ; xr_new<CBlender_bloom_build>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\Blender_ao_build.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\Blender_ao_build.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_ao_build@@@@YAPAVCBlender_ao_build@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_ao_build@@@@YAPAVCBlender_ao_build@@XZ PROC ; xr_new<CBlender_ao_build>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\Blender_ao_build.cpp

; 8    : {

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_ao_build@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\Blender_ao_build.cpp

; 9    : 	description.CLS = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_ao_build@@@@YAPAVCBlender_ao_build@@XZ ENDP ; xr_new<CBlender_ao_build>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_luminance.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_luminance.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_luminance@@@@YAPAVCBlender_luminance@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_luminance@@@@YAPAVCBlender_luminance@@XZ PROC ; xr_new<CBlender_luminance>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_luminance.cpp

; 6    : CBlender_luminance::CBlender_luminance	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_luminance@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_luminance.cpp

; 6    : CBlender_luminance::CBlender_luminance	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_luminance@@@@YAPAVCBlender_luminance@@XZ ENDP ; xr_new<CBlender_luminance>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_combine.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_combine.cpp
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h
;	COMDAT ??$xr_new@VCBlender_combine@@@@YAPAVCBlender_combine@@XZ
_TEXT	SEGMENT
??$xr_new@VCBlender_combine@@@@YAPAVCBlender_combine@@XZ PROC ; xr_new<CBlender_combine>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	324					; 00000144H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_combine.cpp

; 6    : CBlender_combine::CBlender_combine	()	{	description.CLS		= 0;	}

	mov	ecx, esi
	call	DWORD PTR __imp_??0IBlender@@QAE@XZ
	mov	DWORD PTR [esi], OFFSET ??_7CBlender_combine@@6B@
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	mov	eax, esi
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\blender_combine.cpp

; 6    : CBlender_combine::CBlender_combine	()	{	description.CLS		= 0;	}

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
; File I:\Vitalya\mine\NSProjectX\xrCore\xrMemory_subst_msvc.h

; 69   : 	return new (ptr) T();

	pop	esi

; 70   : }

	ret	0
??$xr_new@VCBlender_combine@@@@YAPAVCBlender_combine@@XZ ENDP ; xr_new<CBlender_combine>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?get_height@CRenderTarget@@UAEIXZ
_TEXT	SEGMENT
?get_height@CRenderTarget@@UAEIXZ PROC			; CRenderTarget::get_height, COMDAT
; _this$ = ecx

; 234  : 	virtual u32					get_height				()				{ return dwHeight;					}

	mov	eax, DWORD PTR [ecx+8]
	ret	0
?get_height@CRenderTarget@@UAEIXZ ENDP			; CRenderTarget::get_height
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?get_width@CRenderTarget@@UAEIXZ
_TEXT	SEGMENT
?get_width@CRenderTarget@@UAEIXZ PROC			; CRenderTarget::get_width, COMDAT
; _this$ = ecx

; 233  : 	virtual u32					get_width				()				{ return dwWidth;					}

	mov	eax, DWORD PTR [ecx+4]
	ret	0
?get_width@CRenderTarget@@UAEIXZ ENDP			; CRenderTarget::get_width
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?set_color_add@CRenderTarget@@UAEXI@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_color_add@CRenderTarget@@UAEXI@Z PROC		; CRenderTarget::set_color_add, COMDAT
; _this$ = ecx

; 231  : 	virtual void				set_color_add			(u32	f)		{ param_color_add=f;				}

	mov	eax, DWORD PTR _f$[esp-4]
	mov	DWORD PTR [ecx+436], eax
	ret	4
?set_color_add@CRenderTarget@@UAEXI@Z ENDP		; CRenderTarget::set_color_add
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?set_color_gray@CRenderTarget@@UAEXI@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_color_gray@CRenderTarget@@UAEXI@Z PROC		; CRenderTarget::set_color_gray, COMDAT
; _this$ = ecx

; 230  : 	virtual void				set_color_gray			(u32	f)		{ param_color_gray=f;				}

	mov	eax, DWORD PTR _f$[esp-4]
	mov	DWORD PTR [ecx+432], eax
	ret	4
?set_color_gray@CRenderTarget@@UAEXI@Z ENDP		; CRenderTarget::set_color_gray
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?set_color_base@CRenderTarget@@UAEXI@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_color_base@CRenderTarget@@UAEXI@Z PROC		; CRenderTarget::set_color_base, COMDAT
; _this$ = ecx

; 229  : 	virtual void				set_color_base			(u32	f)		{ param_color_base=f;				}

	mov	eax, DWORD PTR _f$[esp-4]
	mov	DWORD PTR [ecx+428], eax
	ret	4
?set_color_base@CRenderTarget@@UAEXI@Z ENDP		; CRenderTarget::set_color_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?set_noise_fps@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_noise_fps@CRenderTarget@@UAEXM@Z PROC		; CRenderTarget::set_noise_fps, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	movss	xmm0, DWORD PTR _f$[esp-4]
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h

; 228  : 	virtual void				set_noise_fps			(float	f)		{ param_noise_fps=_abs(f)+EPS_S;	}

	addss	xmm0, DWORD PTR __real@33d6bf95
	movss	DWORD PTR [ecx+424], xmm0
	ret	4
?set_noise_fps@CRenderTarget@@UAEXM@Z ENDP		; CRenderTarget::set_noise_fps
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?set_noise_scale@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_noise_scale@CRenderTarget@@UAEXM@Z PROC		; CRenderTarget::set_noise_scale, COMDAT
; _this$ = ecx

; 227  : 	virtual void				set_noise_scale			(float	f)		{ param_noise_scale=f;				}

	movss	xmm0, DWORD PTR _f$[esp-4]
	movss	DWORD PTR [ecx+420], xmm0
	ret	4
?set_noise_scale@CRenderTarget@@UAEXM@Z ENDP		; CRenderTarget::set_noise_scale
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?set_noise@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_noise@CRenderTarget@@UAEXM@Z PROC			; CRenderTarget::set_noise, COMDAT
; _this$ = ecx

; 226  : 	virtual void				set_noise				(float	f)		{ param_noise=f;					}

	movss	xmm0, DWORD PTR _f$[esp-4]
	movss	DWORD PTR [ecx+416], xmm0
	ret	4
?set_noise@CRenderTarget@@UAEXM@Z ENDP			; CRenderTarget::set_noise
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?set_duality_v@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_duality_v@CRenderTarget@@UAEXM@Z PROC		; CRenderTarget::set_duality_v, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	movss	xmm0, DWORD PTR _f$[esp-4]
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h

; 225  : 	virtual void				set_duality_v			(float	f)		{ param_duality_v=_abs(f);			}

	movss	DWORD PTR [ecx+412], xmm0
	ret	4
?set_duality_v@CRenderTarget@@UAEXM@Z ENDP		; CRenderTarget::set_duality_v
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?set_duality_h@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_duality_h@CRenderTarget@@UAEXM@Z PROC		; CRenderTarget::set_duality_h, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_math.h

; 676  :             return (float)fabs(_X);

	movss	xmm0, DWORD PTR _f$[esp-4]
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h

; 224  : 	virtual void				set_duality_h			(float	f)		{ param_duality_h=_abs(f);			}

	movss	DWORD PTR [ecx+408], xmm0
	ret	4
?set_duality_h@CRenderTarget@@UAEXM@Z ENDP		; CRenderTarget::set_duality_h
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?set_gray@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_gray@CRenderTarget@@UAEXM@Z PROC			; CRenderTarget::set_gray, COMDAT
; _this$ = ecx

; 223  : 	virtual void				set_gray				(float	f)		{ param_gray=f;						}

	movss	xmm0, DWORD PTR _f$[esp-4]
	movss	DWORD PTR [ecx+404], xmm0
	ret	4
?set_gray@CRenderTarget@@UAEXM@Z ENDP			; CRenderTarget::set_gray
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\layers\xrRenderPC_R2\r2_rendertarget.h
;	COMDAT ?set_blur@CRenderTarget@@UAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?set_blur@CRenderTarget@@UAEXM@Z PROC			; CRenderTarget::set_blur, COMDAT
; _this$ = ecx

; 222  : 	virtual void				set_blur				(float	f)		{ param_blur=f;						}

	movss	xmm0, DWORD PTR _f$[esp-4]
	movss	DWORD PTR [ecx+400], xmm0
	ret	4
?set_blur@CRenderTarget@@UAEXM@Z ENDP			; CRenderTarget::set_blur
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\xr_resource.h
;	COMDAT ??4?$resptr_core@VCTexture@@Uresptrcode_texture@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??4?$resptr_core@VCTexture@@Uresptrcode_texture@@@@QAEAAV0@ABV0@@Z PROC ; resptr_core<CTexture,resptrcode_texture>::operator=, COMDAT
; _this$ = ecx

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	eax, DWORD PTR _rhs$[esp-4]

; 67   : 	self &				operator=		(const self & rhs)								{	_set(rhs);	return (self&)*this;	}

	push	esi
	push	edi
	mov	edi, ecx

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	esi, DWORD PTR [eax]

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	test	esi, esi
	je	SHORT $LN8@operator
	inc	DWORD PTR [esi+4]
$LN8@operator:
	call	DWORD PTR __imp_?_dec@?$resptr_base@VCTexture@@@@IAEXXZ
	mov	DWORD PTR [edi], esi

; 67   : 	self &				operator=		(const self & rhs)								{	_set(rhs);	return (self&)*this;	}

	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
??4?$resptr_core@VCTexture@@Uresptrcode_texture@@@@QAEAAV0@ABV0@@Z ENDP ; resptr_core<CTexture,resptrcode_texture>::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector2.h
;	COMDAT ?set@?$_vector2@H@@QAEAAU1@HH@Z
_TEXT	SEGMENT
__u$ = 8						; size = 4
__v$ = 12						; size = 4
?set@?$_vector2@H@@QAEAAU1@HH@Z PROC			; _vector2<int>::set, COMDAT
; _this$ = ecx

; 17   : 	IC SelfRef set(int _u, int _v)					{ x=T(_u); y=T(_v);				return *this;	}

	mov	eax, DWORD PTR __u$[esp-4]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __v$[esp-4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, ecx
	ret	8
?set@?$_vector2@H@@QAEAAU1@HH@Z ENDP			; _vector2<int>::set
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h
;	COMDAT ?set@TL@FVF@@QAEXMMMMIMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_w$ = 20						; size = 4
_c$ = 24						; size = 4
_u$ = 28						; size = 4
_v$ = 32						; size = 4
?set@TL@FVF@@QAEXMMMMIMM@Z PROC				; FVF::TL::set, COMDAT
; _this$ = ecx
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR _x$[esp-4]
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h

; 91   : 			p.set(x, y, z, w); color = c;	uv.x = u; uv.y = v;

	mov	eax, DWORD PTR _c$[esp-4]
; File I:\Vitalya\mine\NSProjectX\xrCore\_vector4.h

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR _y$[esp-4]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR _z$[esp-4]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR _w$[esp-4]
	movss	DWORD PTR [ecx+12], xmm0
; File I:\Vitalya\mine\NSProjectX\xrEngine\fvf.h

; 91   : 			p.set(x, y, z, w); color = c;	uv.x = u; uv.y = v;

	movss	xmm0, DWORD PTR _u$[esp-4]
	movss	DWORD PTR [ecx+20], xmm0
	movss	xmm0, DWORD PTR _v$[esp-4]
	mov	DWORD PTR [ecx+16], eax
	movss	DWORD PTR [ecx+24], xmm0

; 92   : 		};

	ret	28					; 0000001cH
?set@TL@FVF@@QAEXMMMMIMM@Z ENDP				; FVF::TL::set
_TEXT	ENDS
END
